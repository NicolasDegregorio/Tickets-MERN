{"version":3,"sources":["redux/usuarioDucks.js","components/Login.jsx","components/dashboard/userMenu.jsx","components/dashboard/AppBarr.jsx","components/dashboard/listItems.jsx","components/dashboard/Drawerr.jsx","components/dashboard/Dashboard.jsx","components/ui/Popup.jsx","components/Tickets/Forms/FormAdd.jsx","components/ui/Card.jsx","components/ui/Notification.jsx","components/Tickets/Tickets.jsx","components/ui/Chat.jsx","components/ui/TabsCentered.jsx","components/Tickets/Detalles.jsx","components/Tickets/Calendar.jsx","components/Administracion/Pendientes.jsx","components/Administracion/Users/Forms/Add-Edit.jsx","components/Administracion/Users/Users.jsx","components/Administracion/Institutions/Forms/Add-Edit.jsx","components/Administracion/Institutions/Institutions.jsx","components/Tickets/Infome.jsx","App.jsx","redux/store.js","index.js"],"names":["dataInicial","activo","GET_LOGIN_SUCCESS","CERRAR_SESION","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","url","process","alert","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","withRouter","props","classes","dispatch","useDispatch","useSelector","store","usuario","React","useState","email","password","setUsuario","useEffect","history","push","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","onSubmit","e","preventDefault","getState","a","axios","post","res","payload","token","data","jwt_decode","role","localStorage","setItem","JSON","stringify","response","mensaje","loginUserAction","TextField","required","fullWidth","id","label","name","autoComplete","onChange","target","value","autoFocus","FormControlLabel","control","Checkbox","Button","Box","mt","UserMenu","anchorEl","setAnchorEl","userName","nombre","handleClose","aria-controls","aria-haspopup","onClick","event","currentTarget","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","MenuItem","removeItem","toolbar","paddingRight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","AppBarr","handleDrawerOpen","AppBar","position","clsx","Toolbar","IconButton","edge","aria-label","noWrap","section","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","NavLink","to","activeClassName","secondaryListItems","ListSubheader","inset","toolbarIcon","justifyContent","padding","mixins","flexShrink","whiteSpace","drawerPaper","drawerPaperClose","overflowX","breakpoints","up","Drawerr","handleDrawerClose","Drawer","Divider","List","minHeight","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","footer","bottom","left","Dashboard","children","setOpen","Container","maxWidth","dialogWrapper","top","dialogTitle","Popup","openPopup","closeForm","Dialog","DialogTitle","style","DialogContent","dividers","formControl","minWidth","FormAdd","setTicket","ticket","addTicket","editTicket","edit","users","setOpenPopup","emptyFields","useForm","register","errors","handleSubmit","rules","message","minLength","defaultValue","as","error","ticketName","helperText","multiline","rowsMax","description","ticketDescription","FormControl","InputLabel","team","_user","Select","labelId","ticketLeader","map","user","index","_id","FormHelperText","inputRef","InputLabelProps","shrink","start_date","slice","end_date","priority","ticketPriority","m","p","SimpleCard","typeTickets","totalsTickets","action","typeFilter","Fragment","Card","CardActionArea","CardContent","justify","gutterBottom","Notification","severity","setNotification","reason","Alert","Snackbar","autoHideDuration","Tickets2","usuarioId","roleUser","setUsers","tickets","setTickets","setEdit","setId","ticketsFilter","setTicketsFilter","notification","status","getTickets","get","console","log","getUsers","handleInputChange","newTicket","ticketsAll","deleteTicket","ticketsIds","confirm","window","arrayFiltrado","filter","includes","ticketEdit","put","arrayEditado","filterTickets","filtro","active","ml","lg","ticketsSolved","ticketsUnsolved","ticketsExpired","columns","field","hidden","dateSetting","locale","render","rowData","Chip","size","actions","icon","tooltip","row","options","actionsColumnIndex","selection","pageSize","Tickets","table","chatSection","headBG","borderRight500","borderRight","messageArea","overflowY","Chat","userId","comments","commentsTicket","setCommentsTicket","ticketId","comment","setComent","addComment","deleteComment","commentId","delete","onKeyPress","key","endIcon","Icon","alt","src","ListItemSecondaryAction","TabPanel","other","aria-labelledby","a11yProps","background","flexWrap","ScrollableTabsButtonAuto","responsible","setResponsible","setValue","setTeam","userTeam","setUserTeam","usersRepeat","getUsersTeam","handleClickOpen","addMembersTeam","membersTeam","members","deleteMembersTeam","respon","ticketSolve","solution","ticketSolution","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","disableBackdropClick","disableEscapeKeyDown","DialogActions","moment","format","Autocomplete","multiple","getOptionLabel","option","renderInput","params","placeholder","dense","ListItemAvatar","bullet","transform","fontSize","pos","marginBottom","Detalles2","ticketInfo","setTicketInfo","setComments","useParams","ticketData","CardActions","Detalles","Calendar2","events","setEvents","prevState","start","end","borderColor","plugins","dayGridPlugin","listPlugin","headerToolbar","center","initialView","esLocale","Calendar","media","Pendientess","config","headers","ticketAprobed","arrayTickets","CardMedia","Pendientes","FormAddEdit","addUser","editUser","watch","checkBox","setCheckBox","lastName","userLastName","userRole","pattern","userEmail","disabled","userPassword","validate","userPasswordRepeat","checked","Users2","setUser","newUser","userEdit","deleteUser","usersIds","Users","institution","addInstitution","editInstitution","institutionName","addres","institutionAddres","cue","institutionCue","Institution2","setInstitution","institutions","setInstitutions","getInstitutions","newInstituion","instituionEdit","institutioAddres","CUE","institutioCUE","deleteInstitutions","institutionsIds","Institution","Root","withStyles","restProps","Label","Informe2","startDate","setStartDate","endDate","setEndDate","focusedInput","setFocusedInput","setData","chartData","setCharData","dateRange","mes","months","anio","solucionado","noSolucionado","generateReport","reduce","b","ticketPDF","total","_d","responseType","file","Blob","fileURL","URL","createObjectURL","startDateId","endDateId","onDatesChange","onFocusChange","displayFormat","isOutsideRange","withPortal","startIcon","valueField","argumentField","rootComponent","labelComponent","text","Informe","App","RutaProtegida","path","rest","RutaAdmin","Login","exact","rootReducer","combineReducers","state","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","getItem","parse","usuarioDecode","leerUsuarioAccion","generateStore","defaults","common","baseURL","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b73ac57c.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// constantes\r\nconst dataInicial = {\r\n    activo: false\r\n}\r\n\r\n// types\r\nconst GET_LOGIN_SUCCESS = 'GET_LOGIN_SUCCESS'\r\nconst CERRAR_SESION = 'CERRAR_SESSION'\r\n\r\n// reducer\r\nexport default function userReducer(state = dataInicial, action){\r\n    switch (action.type) {\r\n        case  GET_LOGIN_SUCCESS:\r\n            return {...state, activo: true, usuario: action.payload.usuario, role: action.payload.role, token: action.payload.token} \r\n        case CERRAR_SESION:\r\n            return {...dataInicial, role: ''}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const loginUserAction = (usuario) => async (dispatch, getState) => {\r\n    try {\r\n        const res = await axios.post('users', usuario)\r\n        dispatch({\r\n            type : GET_LOGIN_SUCCESS,\r\n            payload: {\r\n                token: res.data.token,\r\n                usuario: jwt_decode(res.data.token),\r\n                role: res.data.role.role\r\n            }\r\n        })\r\n        localStorage.setItem('usuario', JSON.stringify({token : res.data.token}))\r\n    } catch (error) {\r\n        alert(error.response.data.mensaje)\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    dispatch({\r\n        type : CERRAR_SESION,\r\n    })\r\n    localStorage.removeItem('usuario')\r\n}\r\n\r\n\r\nexport const leerUsuarioAccion = () => async (dispatch) => {\r\n    if(localStorage.getItem('usuario')){\r\n        const usuario = JSON.parse(localStorage.getItem('usuario'))\r\n        const usuarioDecode = jwt_decode(usuario.token)\r\n        dispatch({\r\n            type: GET_LOGIN_SUCCESS,\r\n            payload: {\r\n                token: usuario.token,\r\n                usuario: usuarioDecode,\r\n                role: usuarioDecode.data.role\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n    \r\n    \r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {loginUserAction} from '../redux/usuarioDucks'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Nicolas degregorio\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\nconst url =  process.env.REACT_APP_URL;\r\nalert(url)\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${url}img/sigef-logo.png)` ,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'contain',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login2 = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n    const activo = useSelector(store => store.usuario.activo)\r\n    const [usuario, setUsuario] = React.useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        if(activo){\r\n            props.history.push('/tickets')\r\n        }\r\n        \r\n    }, [props.history, activo])\r\n    \r\n    \r\n    const login = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(loginUserAction(usuario))\r\n\r\n    }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Iniciar Sesion\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={login}> \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Correo Electronico\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              onChange={(e) => setUsuario({...usuario, email: e.target.value}) }\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Contraseña\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setUsuario({...usuario, password: e.target.value}) }\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Recordar\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Iniciar Sesion\r\n            </Button>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Olvido su Contraseña?\r\n                </Link>\r\n              </Grid> */}\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nexport default withRouter(Login2)","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {logout} from '../../redux/usuarioDucks';\r\n\r\nexport default function UserMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const userName = useSelector(store => store.usuario.usuario.data.nombre)\r\n  const dispatch = useDispatch()\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button color='inherit' aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        {userName}\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n        transformOrigin={{ horizontal: \"center\" }}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>My account</MenuItem>\r\n        <MenuItem onClick={() => dispatch(logout())}>Cerrar Sesion</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Toolbar, IconButton, Typography} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport UserMenu from './userMenu';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    \r\n  }));\r\nconst AppBarr = (props) => {\r\n  const { handleDrawerOpen, open } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                    {props.section}\r\n                </Typography>\r\n                <IconButton color=\"inherit\">\r\n                        <UserMenu />\r\n                </IconButton>\r\n                {/*   <Badge badgeContent={4} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge> */}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBarr\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport EditAttributesIcon from '@material-ui/icons/EditAttributes';\r\nimport {NavLink } from 'react-router-dom'\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem>\r\n    <ListItem button component={NavLink} to=\"/tickets\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <ConfirmationNumberIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Tickets\" />\r\n    </ListItem>\r\n    <ListItem button component={NavLink} to=\"/reportes\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Reporte\" />\r\n    </ListItem>\r\n    <ListItem button component={NavLink} to=\"/calendar\" activeClassName=\"Mui-selected\" >\r\n      <ListItemIcon>\r\n        <DateRangeIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Calendario\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    <ListSubheader inset>Administracion</ListSubheader>\r\n    <ListItem button component={NavLink} to=\"/admin/pendientes\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <EditAttributesIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Tickets Pendiente\" />\r\n    </ListItem>\r\n    <ListItem button  component={NavLink} to=\"/admin/users\" activeClassName=\"Mui-selected\" >\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Usuarios\" />\r\n    </ListItem>\r\n    <ListItem button component={NavLink} to=\"/admin/instituciones\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <SchoolIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Instituciones\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AssignmentIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Year-end sale\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n","import React from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Divider, Drawer,IconButton, List} from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport {useSelector} from 'react-redux'\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    drawer: {\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Drawerr = (props) => {\r\n    const { handleDrawerClose, open } = props;\r\n    const classes = useStyles();\r\n    const role = useSelector(store => store.usuario.role)\r\n    return (\r\n        <div>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                  [classes.drawerPaper]: open,\r\n                  [classes.drawerPaperClose]: !open,\r\n                })}\r\n                classes={{\r\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>{mainListItems}</List>\r\n                <Divider />\r\n                {role === 'Admin' && \r\n                  <List>{secondaryListItems}</List>\r\n                }\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Drawerr\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Box, CssBaseline, Container, Grid, Typography, Link } from '@material-ui/core';\r\nimport AppBarr from './AppBarr';\r\nimport Drawerr from './Drawerr';\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  const classes = useStyles();\r\n  return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Nicolas Degregorio\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n      </Typography>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: '100vh',\r\n  },\r\n  \r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    \r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  footer: {\r\n    marginTop: '1rem',\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    padding: '1rem',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBarr\r\n        handleDrawerOpen={handleDrawerOpen}\r\n        open={open}\r\n        section={props.section}\r\n      />\r\n     <Drawerr\r\n      handleDrawerClose={handleDrawerClose}\r\n      open={open}\r\n    />\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              {children}  \r\n              {/* <Router>\r\n                  <Route component={Tickets} path=\"/tickets\" exact/> \r\n                  <Route component={Prueba} path=\"/tickets/:id\" exact/> \r\n                  <Route component={Calendar} path=\"/calendar\" exact/>\r\n                  <Route component={Infome} path=\"/informe\" exact/> \r\n              </Router> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n          <footer className={classes.footer}>\r\n              <Copyright />\r\n          </footer>\r\n        \r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { Button, Dialog, DialogActions,  DialogTitle, DialogContent, IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5)\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, closeForm } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup} maxWidth=\"sm\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {title}\r\n                    </Typography>\r\n                    <IconButton aria-label=\"delete\" onClick={() =>  closeForm()}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n            \r\n        </Dialog>\r\n    )\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid,Button, Box, Divider, FormControl, FormHelperText, InputLabel, MenuItem , Select , TextField } from \"@material-ui/core\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '25ch',\r\n    },\r\n  }));\r\n\r\nconst FormAdd = (props) => {\r\n    const {setTicket, ticket, addTicket,editTicket, edit, setOpenPopup, users, emptyFields } = props;\r\n    const classes = useStyles();\r\n    const {register, errors, handleSubmit, control} = useForm();\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={edit ? handleSubmit(editTicket) : handleSubmit(addTicket)} className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item sm={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                    minLength: {\r\n                                        value: 6, \r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"ticketName\" \r\n                            id=\"ticketName\"\r\n                            label=\"Nombre\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={ticket.name || ''}\r\n                            \r\n                            as={\r\n                            <TextField\r\n                                error={ errors.ticketName ? true : false }\r\n                                helperText={errors.ticketName ? errors.ticketName.message : null} \r\n                                \r\n                            />\r\n                        }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                required: {\r\n                                    value: true, \r\n                                    message: 'Campo requerido'\r\n                                    }, \r\n                                minLength: {\r\n                                    value: 6, \r\n                                    message: 'Mínimo 6 carácteres'\r\n                                }                               \r\n                            }}\r\n                            name=\"ticketDescription\"\r\n                            id=\"ticketDescription\"\r\n                            label=\"Descripcion\"\r\n                            control={control}\r\n                            multiline\r\n                            rowsMax={4}\r\n                            variant=\"outlined\"\r\n                            defaultValue={ticket.description || ''}\r\n\r\n\r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.ticketDescription ? true : false }\r\n                                    helperText={errors.ticketDescription ? errors.ticketDescription.message : null}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Encargado</InputLabel>\r\n                            <Controller\r\n                                name=\"ticketLeader\"\r\n                                control={control}\r\n                                rules={{required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                defaultValue={ticket.team._user || ''}\r\n                                \r\n                                as={\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"ticketLeader\"\r\n                                    value={ticket.team._user}\r\n                                    error={ errors.ticketLeader ? true : false }\r\n                                    label=\"Encargado\"\r\n                                    >\r\n                                    {\r\n                                        users.map((user,index) => (\r\n                                            <MenuItem key={index} value={user._id}>{user.nombre}</MenuItem>\r\n                                        ))\r\n                                    }\r\n                                </Select>\r\n                                } \r\n                            />\r\n                             <FormHelperText error={ errors.ticketLeader ? true : false }>{errors.ticketLeader ? errors.ticketLeader.message : null} </FormHelperText>\r\n                        </FormControl>\r\n                \r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <TextField\r\n                            inputRef={register({\r\n                                required: {\r\n                                    value: true, \r\n                                    message: 'Campo requerido'\r\n                                    }\r\n                               })}\r\n                            name=\"start_date\" \r\n                            id=\"start_date\"\r\n                            label=\"Fecha de Inicio\"\r\n                            type=\"date\"\r\n                            InputLabelProps={{\r\n                            shrink: true,\r\n                            }}\r\n                            defaultValue = {ticket.start_date.slice(0,10)}\r\n                            error={ errors.start_date ? true : false }\r\n                            helperText={errors.start_date ? errors.start_date.message : null}\r\n                        />\r\n                        <Box mt={2}>\r\n                            <TextField\r\n                                inputRef={register({\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                })}\r\n                                name=\"end_date\"\r\n                                id=\"end_date\"\r\n                                label=\"Fecha Limite\"\r\n                                type=\"date\"\r\n                                InputLabelProps={{\r\n                                shrink: true,\r\n                                }}\r\n                                defaultValue= {ticket.end_date.slice(0,10)}\r\n                                error={ errors.start_date ? true : false }\r\n                                helperText={errors.end_date ? errors.end_date.message : null}\r\n                            />\r\n                        </Box>\r\n                        <Box>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel id=\"labelPrioridad\">Prioridad</InputLabel>\r\n                                <Controller\r\n                                name=\"ticketPriority\"\r\n                                control={control}\r\n                                rules={{required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                    defaultValue={ticket.priority || ''}\r\n                                as={\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        label=\"Prioridad\"\r\n                                        id=\"ticketPriority\"                                       \r\n                                        value={ticket.priority}\r\n                                        error={ errors.ticketPriority ? true : false }   \r\n                                        >\r\n                                        <MenuItem value={'Alta'}>Alta</MenuItem>\r\n                                        <MenuItem value={'Media'}>Media</MenuItem>\r\n                                        <MenuItem value={'Baja'}>Baja</MenuItem>\r\n                                    </Select>\r\n                                }\r\n                                />\r\n                                 <FormHelperText\r\n                                    error={ errors.ticketPriority ? true : false }\r\n                                >\r\n                                    {errors.ticketPriority ? errors.ticketPriority.message : null} \r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Box>\r\n                        \r\n                    </Grid>              \r\n                    <Grid item sm={12}>\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\" m={1} p={1}>\r\n                            <Button color=\"primary\" type=\"button\" onClick={() =>  emptyFields()}>\r\n                                Cancelar\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Guardar\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAdd\r\n\r\n","import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardActionArea, \r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%',\r\n  },\r\n  avatar: props =>({\r\n    backgroundColor: props.color,\r\n    height: 56,\r\n    width: 56\r\n  })\r\n}));\r\n\r\n\r\nexport default function SimpleCard(props) {\r\n  const classes = useStyles(props);\r\n  const {typeTickets, totalsTickets, action, typeFilter} = props;\r\n  return (\r\n    <React.Fragment>\r\n         <Card\r\n            className={classes.root} onClick={() => action(typeFilter)}\r\n            >\r\n              <CardActionArea>\r\n                <CardContent>\r\n                    <Grid\r\n                    container\r\n                    justify=\"space-between\"\r\n                    >\r\n                        <Grid item>\r\n                            <Typography\r\n                            color=\"textSecondary\"\r\n                            gutterBottom\r\n                            variant=\"subtitle2\"\r\n                            >\r\n                                {typeTickets}\r\n                            </Typography>\r\n                            <Typography\r\n                            color=\"textPrimary\"\r\n                            variant=\"h3\"\r\n                            >\r\n                                {totalsTickets}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Avatar className={classes.avatar} >\r\n                            <ConfirmationNumberIcon />\r\n                            </Avatar>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n              </CardActionArea>  \r\n            </Card>\r\n    </React.Fragment>\r\n  );\r\n}","import React, {Fragment} from 'react'\r\nimport {Snackbar} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst Notification = (props) => {\r\n    const { message, open, severity,setNotification } = props;\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setNotification({open: false})\r\n      };\r\n    const Alert = (props) => {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Snackbar \r\n                open={open} \r\n                autoHideDuration={3000} \r\n                onClose={handleClose}  \r\n                anchorOrigin={{vertical: 'bottom',\r\n                horizontal: 'right'}}\r\n            >\r\n                <Alert onClose={handleClose} severity={severity}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport MaterialTable from 'material-table'\r\nimport { Box, Button, Chip, Grid} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Popup from '../ui/Popup'\r\nimport FormAdd from './Forms/FormAdd';\r\nimport SimpleCard from '../ui/Card';\r\nimport Notification from '../ui/Notification'\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\n\r\n\r\nconst Tickets2 = (props) => {\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const roleUser = useSelector(store => store.usuario.usuario.data.role)\r\n    const [users, setUsers] = React.useState([])\r\n    const [tickets, setTickets] = React.useState([])\r\n    const [edit, setEdit] = React.useState(false)\r\n    const [id, setId] = React.useState('')\r\n    const [ticketsFilter, setTicketsFilter] = React.useState([])\r\n    const [openPopup, setOpenPopup] = React.useState(false)\r\n    const [notification, setNotification] = React.useState({open: false, message: ''});\r\n    const [ticket, setTicket] = React.useState({\r\n        name: '',\r\n        description : '',\r\n        team : {\r\n            _user: '',\r\n            nombre: '',\r\n            role: ''\r\n        },\r\n        start_date: '',\r\n        end_date: '',\r\n        priority: '',\r\n        status:'Sin Solucionar',\r\n      })\r\n      \r\n    React.useEffect( () => {\r\n        const getTickets = async () =>{  \r\n           try {\r\n                const res = await axios.get(`api/ticket?usuarioId=${usuarioId}`)\r\n                const data = res.data\r\n                setTickets(data)\r\n                setTicketsFilter(data.data)\r\n           } catch (error) {\r\n               console.log(\"ocurrio un error\")\r\n               console.log(error)\r\n           }\r\n        }\r\n        const getUsers = async () => {\r\n           try {\r\n                const res = await axios.get('users/users')\r\n                const data = res.data\r\n                setUsers(data)\r\n                console.log(users)\r\n           } catch (error) {\r\n                console.log(\"ocurrio un error\")\r\n                console.log(error)\r\n           }\r\n        }\r\n        \r\n        getTickets()\r\n        getUsers()\r\n        \r\n    },[])\r\n\r\n    React.useEffect(() => {\r\n\r\n        console.log(\"El ticket a Cambiado\", ticket)\r\n    },[ticket])\r\n\r\n    const handleInputChange =  async (data) => {\r\n         setTicket({...ticket, \r\n                        name: data.ticketName, \r\n                        description: data.ticketDescription,\r\n                        team : {...ticket.team,\r\n                            _user: data.ticketLeader,\r\n                            role: 'Leader'\r\n                        },\r\n                        start_date: data.start_date,\r\n                        end_date: data.end_date,\r\n                        priority: data.ticketPriority\r\n\r\n                })\r\n    }\r\n    \r\n    // Crear nuevo Ticket\r\n    const addTicket = async (data) => {\r\n        let newTicket= {\r\n            name: data.ticketName, \r\n            description: data.ticketDescription,\r\n            team : {\r\n                _user: data.ticketLeader,\r\n                role: 'Leader',\r\n            },\r\n            start_date: data.start_date,\r\n            end_date: data.end_date,\r\n            priority: data.ticketPriority,\r\n            status: 'Sin Solucionar'\r\n        }\r\n            try {\r\n                const res = await axios.post('api/nuevo-ticket',newTicket)\r\n                console.log(res.data)\r\n                setTicketsFilter([\r\n                ...ticketsFilter,\r\n                res.data\r\n                ])\r\n                setNotification({...notification, open: true,  message: \"Ticket Creado Correctamente\"})\r\n                emptyFields()\r\n                setTickets({...tickets, ticketsAll: tickets.ticketsAll+1})\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n    }\r\n    // Elimina un Ticket\r\n    const deleteTicket = async data => {\r\n        const ticketsIds = []\r\n        data.map(ticket => ticketsIds.push(ticket._id))\r\n        console.log(tickets)\r\n        const confirm = window.confirm(\"Estas Seguro de Eliminar El/Los Registro/s\")\r\n        try {\r\n            if(confirm){\r\n                const res = await axios.post('api/ticket/delete/many', ticketsIds)\r\n                console.log('Nota Eliminada')\r\n                const arrayFiltrado = ticketsFilter.filter((ticket) => !ticketsIds.includes(ticket._id))\r\n                setTicketsFilter(arrayFiltrado)\r\n                setNotification({...notification, open: true,  message: \"Ticket/s Eliminado/s Correctamente\"})\r\n                setTickets({...tickets, ticketsAll: tickets.ticketsAll-1})\r\n            }     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const edition = row => {\r\n        setId(row._id)\r\n        setTicket({...ticket,\r\n            name: row.name,\r\n            description : row.description,\r\n            team : {\r\n                _user: row.team[0]._user._id,\r\n                nombre: row.team[0]._user.nombre,\r\n                role: 'Leader'\r\n            },\r\n            start_date: row.start_date,\r\n            end_date: row.end_date,\r\n            priority: row.priority,\r\n            status: row.status,        \r\n                \r\n        })\r\n        setEdit(true)\r\n        setOpenPopup(true)\r\n        console.log(ticket)\r\n    }\r\n\r\n    // Actualizar Ticket\r\n    const editTicket =  async (data) => {\r\n        const ticketEdit= {\r\n                        name: data.ticketName, \r\n                        description: data.ticketDescription,\r\n                        team : {\r\n                            _user: data.ticketLeader,\r\n                            role: 'Leader',\r\n                        },\r\n                        start_date: data.start_date,\r\n                        end_date: data.end_date,\r\n                        priority: data.ticketPriority,\r\n                        status: data.status\r\n        }\r\n        console.log(ticketEdit)\r\n        try {\r\n            const res = await axios.put(`http://localhost:5000/api/ticket/${id}`,ticketEdit)\r\n            const arrayEditado = ticketsFilter.map( item => (\r\n                item._id === id ? res.data : item\r\n            ))\r\n            console.log(res.data)\r\n            setTicketsFilter(arrayEditado)\r\n            setNotification({...notification, open: true, message: \"Ticket Editado Correctamente\"})\r\n            emptyFields()\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    // Filtrar tickets Mediante las Tarjetas\r\n    const filterTickets = (filtro) => {\r\n        if (filtro === \"Todos\"){\r\n            setTicketsFilter(tickets.data)\r\n        } else if(filtro === \"Solucionado\") {\r\n            const filter =  tickets.data.filter( (ticket) => ticket.status === \"Solucionado\")\r\n            setTicketsFilter(filter)\r\n        }else if(filtro === \"Sin Solucionar\"){\r\n            const filter =  tickets.data.filter( (ticket) => ticket.status === \"Sin Solucionar\")\r\n            setTicketsFilter(filter)\r\n        }else if(filtro === \"Vencidos\"){\r\n            const filter =  tickets.data.filter( (ticket) => (ticket.active === false && ticket.status === 'Sin Solucionar'))\r\n            setTicketsFilter(filter)\r\n        }\r\n    }\r\n    // Cerrar formulario flotante\r\n    const closeForm = () => {\r\n        setOpenPopup(false)\r\n        setEdit(false)\r\n    }\r\n    // Devuelve el estado del Ticket a situacion inicial\r\n    const emptyFields = () =>{\r\n        closeForm()\r\n        setTicket({\r\n            name: '',\r\n            description : '',\r\n            team : {\r\n                _user: '',\r\n                nombre: '',\r\n                role: 'Leader'\r\n            },\r\n            start_date: '',\r\n            end_date: '',\r\n            priority: '',\r\n            status:'Sin Solucionar',    \r\n        })\r\n        setId('')\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: '100%' }}>\r\n            <Grid container>\r\n                <Notification \r\n                    message = {notification.message}\r\n                    open = {notification.open}\r\n                    severity= {\"success\"}\r\n                    setNotification={setNotification}\r\n                />\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box>\r\n                        <SimpleCard\r\n                            typeTickets= \"Tickets Totales\"\r\n                            totalsTickets= {tickets.ticketsAll}\r\n                            color=\"#2196f3\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Todos\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box ml={{\"md\": 3}} mt={{xs:2, sm:2, md:0, lg:0}} >\r\n                        <SimpleCard\r\n                            typeTickets=\"Tickets Resueltos\"\r\n                            totalsTickets={tickets.ticketsSolved}\r\n                            color=\"#4caf50\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Solucionado\"   \r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box ml={{\"md\": 3}} mt={{xs:2, sm:2, md:0, lg:0}} >\r\n                        <SimpleCard\r\n                            typeTickets=\"Tickets Sin Resolver\"\r\n                            totalsTickets={tickets.ticketsUnsolved}\r\n                            color=\"#ffff70\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Sin Solucionar\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box ml={{\"md\": 3}} mt={{xs:2, sm:2, md:0, lg:0}}>\r\n                        <SimpleCard\r\n                            typeTickets= \"Tickets Vencidos\"\r\n                            totalsTickets= {tickets.ticketsExpired}\r\n                            color=\"#ff1744\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Vencidos\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n            <Box mt={2}>\r\n                {roleUser === 'Admin' &&\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() =>  setOpenPopup(true) }>\r\n                        Nuevo Ticket\r\n                    </Button>\r\n                }\r\n            </Box>\r\n            <Box mt={2}>\r\n                <MaterialTable\r\n                    columns={[\r\n                        { title: 'Id', field: '_id', hidden: true},\r\n                        { title: 'Nombre', field: 'name' },\r\n                        { title: 'Descripcion', field: 'description' },\r\n                        { title: \"Prioridad\", field: 'priority'},\r\n                        { title: 'Encargado', field: 'team[0][_user][nombre]' },\r\n                        { title: 'Fecha de Inicio', field: 'start_date',  type: \"date\", dateSetting: { locale: \"es-AR\"}},\r\n                        { title: 'Vencimiento', field: 'end_date',  type: \"date\", dateSetting: { locale: \"es-AR\"}},\r\n                        {title: 'Estado', field: 'status', render: rowData => <Chip color={rowData.status === \"Solucionado\"? \"primary\": \"secondary\"} size=\"small\" label={rowData.status} />}\r\n                    ]}\r\n                    data={ticketsFilter}\r\n                    actions={[\r\n                        {\r\n                            icon: () => <VisibilityIcon />,\r\n                            tooltip: 'Ver',\r\n                            position: 'row',\r\n                            onClick: (event, rowData) => props.history.push('/tickets/'+rowData._id),\r\n                        },    \r\n                        {\r\n                          hidden: roleUser !== 'Admin',\r\n                          icon: 'edit',\r\n                          tooltip: 'Editar',\r\n                          position: 'row',\r\n                          onClick: (event, rowData) => edition(rowData),\r\n                        },\r\n                        {\r\n                          hidden: roleUser !== 'Admin',\r\n                          icon: () => <DeleteIcon />,\r\n                          position: 'toolbarOnSelect',\r\n                          tooltip: 'Borrar',\r\n                          onClick: (event, rowData) => deleteTicket(rowData),\r\n                        }\r\n                        \r\n                      ]}\r\n                    options={{\r\n                        actionsColumnIndex: -1,\r\n                        selection: true,\r\n                        pageSize: 10\r\n                    }}\r\n                    title=\"Tickets\"\r\n                />\r\n            </Box>\r\n            <Popup\r\n                title= {edit ? \"Editar Ticket\" : \"Agregar Ticket\"}\r\n                openPopup={openPopup}\r\n                closeForm={closeForm}               \r\n            >\r\n               <FormAdd \r\n                    setTicket={setTicket}\r\n                    ticket={ticket}\r\n                    users={users}\r\n                    addTicket={addTicket}\r\n                    handleInputChange={handleInputChange}\r\n                    editTicket= {editTicket}\r\n                    edit= {edit}\r\n                    setOpenPopup={setOpenPopup}\r\n                    emptyFields={emptyFields}   \r\n                />\r\n            </Popup>\r\n\r\n        </div>\r\n    )\r\n}\r\n    const Tickets = (props) => {\r\n        return (\r\n            <div>\r\n                <Dashboard section = {\"Tickets\"}>\r\n                    <Tickets2 history={props.history}>\r\n\r\n                    </Tickets2>\r\n                </Dashboard>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Tickets\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {Button, Icon} from '@material-ui/core';\r\nimport Notification from './Notification';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  chatSection: {\r\n    width: '100%',\r\n    height: 'auto'\r\n  },\r\n  headBG: {\r\n      backgroundColor: '#e0e0e0'\r\n  },\r\n  borderRight500: {\r\n      borderRight: '1px solid #e0e0e0'\r\n  },\r\n  messageArea: {\r\n    height: '70vh',\r\n    overflowY: 'auto'\r\n  }\r\n});\r\n\r\nconst Chat = (props) => {\r\n  const {ticket, userId, comments} = props\r\n  const classes = useStyles();\r\n  const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n  const [notification, setNotification] = React.useState({open: false, message: '', severity: ''});\r\n  const [commentsTicket,setCommentsTicket] = React.useState(comments)\r\n  \r\n  React.useEffect(() => {\r\n    console.log(commentsTicket)\r\n  },[commentsTicket])\r\n\r\n  const [comment,setComent] = React.useState({\r\n    ticketId : ticket._id,\r\n    userId: userId,\r\n    comment : ''\r\n  })\r\n  const handleKeypress = e => {\r\n    if (e.key === 'Enter') {\r\n      addComment();\r\n    }\r\n  };\r\n\r\n  const addComment = async () => {\r\n    try {\r\n      const res = await axios.post('api/ticket/comment', comment)\r\n      setCommentsTicket(res.data.comments)\r\n      setComent({...comment, comment: ''})\r\n      setNotification({...notification, open: true,  message: \"Mensaje Enviado Correctamente\", severity: \"success\"})\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  const deleteComment = async (commentId) =>{\r\n    const ticketId = ticket._id\r\n    try {\r\n      await axios.delete(`api/ticket/comment/deleteComment?ticketId=${ticketId}&commentId=${commentId}`) \r\n      const arrayFiltrado = commentsTicket.filter(comment => comment._id !== commentId)\r\n      setCommentsTicket(arrayFiltrado)\r\n      setNotification({...notification, open: true,  message: \"Mensaje Eliminado Correctamente\", severity: \"error\"})\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <Grid container component={Paper} className={classes.chatSection}>\r\n          <Notification \r\n                message = {notification.message}\r\n                open = {notification.open}\r\n                severity= {notification.severity}\r\n                setNotification={setNotification}\r\n            />\r\n            <Grid item xs={12} className={classes.borderRight500}>\r\n                <Grid item xs={12} style={{padding: '10px'}}>\r\n                    <TextField id=\"outlined-basic-email\"\r\n                      label=\"Mensaje\"\r\n                      variant=\"outlined\"\r\n                      value= {comment.comment}\r\n                      onKeyPress= {handleKeypress}\r\n                      onChange={e => setComent({...comment, comment: e.target.value})} \r\n                      fullWidth />\r\n                </Grid>\r\n                <Box ml={1}>\r\n                    <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            endIcon={<Icon>send</Icon>}\r\n                            onClick={() => addComment()}\r\n                        >\r\n                            Enviar\r\n                    </Button>\r\n                </Box>\r\n                {\r\n                    commentsTicket.map( (comment) =>(\r\n                      <Box mt={2}>\r\n                       <Divider />\r\n                        <List>\r\n                            <ListItem button key={comment._user.nombre}>\r\n                                <ListItemIcon>\r\n                                  <Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/1.jpg\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText \r\n                                    primary={comment._user.nombre}\r\n                                    secondary={comment.comment}  \r\n                                >       \r\n                                </ListItemText>\r\n                                {usuarioId === comment._user._id ?\r\n                                  <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"start\" aria-label=\"delete\" onClick={() => deleteComment(comment._id)}>\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </ListItemSecondaryAction>\r\n                                  :''  \r\n                                }\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                      </Box>  \r\n                    ))                    \r\n                  }\r\n          </Grid>  \r\n        </Grid>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Chat;","import React, { Fragment } from 'react';\r\nimport axios from 'axios'\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Button, Chip, Dialog, DialogActions, DialogContent, DialogTitle, \r\n         FormControl,  Tabs, Tab, TextField, Typography, Box, Grid} \r\nfrom '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Chat from './Chat';\r\nimport moment from 'moment'\r\nimport {useSelector} from 'react-redux'\r\nimport Notification from './Notification';\r\nimport { useForm, Controller } from 'react-hook-form';\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 400,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto(props) {\r\n  const {ticket, setTicket,  responsible, setResponsible, usuarioId, comments, users} = props\r\n  const classes = useStyles();\r\n  const {register, errors, handleSubmit, control} = useForm();\r\n  const [notification, setNotification] = React.useState({open: false, message: '', severity: ''});\r\n  const [value, setValue] = React.useState(0);\r\n  const [team, setTeam] = React.useState([])\r\n  const [userTeam, setUserTeam] = React.useState([])\r\n  React.useEffect(() => {\r\n    const getUsersTeam = () => {\r\n      const usersRepeat = []\r\n      responsible.map(user => usersRepeat.push(user._user._id) )\r\n      const arrayFiltrado = users.filter((user) => !usersRepeat.includes(user._id))\r\n      setUserTeam(arrayFiltrado)\r\n    }\r\n    getUsersTeam()\r\n  },[responsible])\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n \r\n  function handleInputChange(event, value) {\r\n    setTeam(value);\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    console.log(userTeam)\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const addMembersTeam = async () =>{\r\n    const membersTeam = {\r\n      ticketId: ticket._id,\r\n      members: team\r\n    }\r\n    try {\r\n      const res = await axios.post('api/ticket/team/addMembersTeam', membersTeam) \r\n      handleClose()\r\n      setResponsible(res.data.team)\r\n      setNotification({...notification, open: true,  message: \"Miembro/s Agregados Correctamente\", severity: \"success\"})\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const deleteMembersTeam = async (userId) =>{\r\n    const ticketId = ticket._id\r\n    try {\r\n      const res = await axios.delete(`api/ticket/team/deleteMembersTeam?ticketId=${ticketId}&userId=${userId}`)\r\n      const arrayFiltrado = responsible.filter(respon => respon._user._id !== userId ) \r\n      setResponsible(res.data.team)\r\n      setNotification({...notification, open: true,  message: \"Miembro Eliminado Correctamente\", severity: \"error\"})\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const ticketSolve = async (data) => {\r\n    const solution = {\r\n      ticketId : ticket._id,\r\n      solution: data.ticketSolution\r\n\r\n    }\r\n    try {\r\n      await axios.post('api/ticket/solution/change', solution)\r\n      handleClose()\r\n      setNotification({...notification, open: true,  message: \"Situacion del Ticket Informada\", severity: \"success\"})\r\n      setTicket({...ticket,  solution: solution.solution})\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Notification \r\n                message = {notification.message}\r\n                open = {notification.open}\r\n                severity= {notification.severity}\r\n                setNotification={setNotification}\r\n      />\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          <Tab label=\"Detalles\" {...a11yProps(0)} />\r\n          <Tab label=\"Equipo\" {...a11yProps(1)} />\r\n          <Tab label=\"Mensajes\" {...a11yProps(2)} />\r\n          {/* <Tab label=\"Item Four\" {...a11yProps(3)} />\r\n          <Tab label=\"Item Five\" {...a11yProps(4)} />\r\n          <Tab label=\"Item Six\" {...a11yProps(5)} />\r\n          <Tab label=\"Item Seven\" {...a11yProps(6)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\">\r\n              {responsible.map( item => (item.role === 'Leader' && item._user._id === usuarioId && ticket.solution === '') ?\r\n                <Button onClick={handleClickOpen}>Cambiar Estado Ticket</Button>\r\n                : '')}\r\n              {(ticket.solution !== '' && ticket.status === 'Sin Solucionar') &&\r\n                <Chip label=\"Ticket Pendiente de Autorizacion\" variant=\"outlined\" color=\"primary\" />\r\n              }\r\n              {ticket.status === 'Solucionado' &&\r\n                <Chip label=\"Ticket Resuelto\" variant=\"outlined\"  icon={<CheckIcon />} color=\"default\" style={{backgroundColor:'#8bc34a'}} />\r\n              }\r\n            </Box> \r\n            <Box>\r\n              <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\r\n                <DialogTitle>Finalizar Ticket</DialogTitle>\r\n                <DialogContent>\r\n                  <form  onSubmit={handleSubmit(ticketSolve)} className={classes.root}className={classes.container}>\r\n                    <FormControl className={classes.formControl}>\r\n                      <Controller\r\n                          rules={{\r\n                                  required: {\r\n                                      value: true, \r\n                                      message: 'Campo requerido'\r\n                                      }, \r\n                                  minLength: {\r\n                                      value: 6, \r\n                                      message: 'Mínimo 6 carácteres'\r\n                                  }\r\n                                  \r\n                          }}\r\n                          control={control}\r\n                          name=\"ticketSolution\" \r\n                          id=\"ticketSolution\"\r\n                          label=\"Que se Hizo\"\r\n                          variant=\"outlined\" \r\n                          defaultValue={''}\r\n                          \r\n                          as={\r\n                          <TextField\r\n                              error={ errors.ticketSolution ? true : false }\r\n                              helperText={errors.ticketSolution ? errors.ticketSolution.message : null} \r\n                              \r\n                          />\r\n                      }\r\n                      />\r\n                    </FormControl>\r\n                  </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button onClick={handleClose} color=\"primary\">\r\n                    Cancelar\r\n                  </Button>\r\n                  <Button onClick={handleSubmit(ticketSolve)} color=\"primary\">\r\n                    Ok\r\n                  </Button>\r\n                </DialogActions>\r\n              </Dialog>   \r\n            </Box>     \r\n          </Grid>\r\n            <Grid item xs={12} md={6} >\r\n                <Box>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                    Descripcion\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                        {ticket.description}\r\n                    </Typography>\r\n                </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n                <Box>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Fechas\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                        Fecha Inicio: {moment(ticket.start_date,'YYYY-MM-DD').format('DD-MM-YYYY')}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                        Fecha Vencimiento: {moment(ticket.end_date,'YYYY-MM-DD').format('DD-MM-YYYY')}\r\n                    </Typography>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Grid container>\r\n          <Grid md={12}>\r\n            <Box display=\"flex\" justifyContent=\"flex-end\">\r\n              {responsible.map( item => (item.role === 'Leader' && item._user._id === usuarioId && ticket.solution === '') ?\r\n              <Button onClick={handleClickOpen}>Agregar al Equipo</Button>\r\n              :'')}\r\n                  <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\r\n                    <DialogTitle>Agregar Integrantes</DialogTitle>\r\n                    <DialogContent>\r\n                      <form className={classes.container}>\r\n                        <FormControl className={classes.formControl}>\r\n                          <Autocomplete\r\n                            multiple\r\n                            id=\"tags-standard\"\r\n                            options={userTeam}\r\n                            getOptionLabel={(option) => option.nombre}\r\n                            onChange={handleInputChange}\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                variant=\"standard\"\r\n                                label=\"Integrantes\"\r\n                                placeholder=\"Usuarios\"\r\n                              />\r\n                            )}\r\n                          />\r\n                        </FormControl>\r\n                      </form>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                      <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n                      </Button>\r\n                      <Button onClick={addMembersTeam} color=\"primary\">\r\n                        Ok\r\n                      </Button>\r\n                    </DialogActions>\r\n                  </Dialog>  \r\n              </Box>  \r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={-2}>\r\n          <Grid md={6}>\r\n                <Box>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Encargado:\r\n                    </Typography>\r\n                      <List dense>\r\n                        {responsible.map( item => \r\n                          item.role === 'Leader'? \r\n                          <Fragment>\r\n                              <ListItem>\r\n                                <ListItemAvatar>\r\n                                  <Avatar>\r\n                                    <PersonIcon />\r\n                                  </Avatar>\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                  primary={item._user.nombre}\r\n                                  secondary={null}\r\n                                />\r\n                              </ListItem>\r\n                            </Fragment>\r\n                            : ''\r\n                        )}\r\n                      </List>\r\n                </Box>\r\n            </Grid>\r\n            <Grid md={6}>\r\n                <Box>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Equipo de Soporte:\r\n                    </Typography>\r\n                    <List dense>\r\n                      {responsible.map( item => \r\n                          item.role === 'Support' ?\r\n                          <Fragment>\r\n                            <ListItem>\r\n                              <ListItemAvatar>\r\n                                <Avatar>\r\n                                  <PersonIcon />\r\n                                </Avatar>\r\n                              </ListItemAvatar>\r\n                              <ListItemText\r\n                                primary={item._user.nombre}\r\n                                secondary={null}\r\n                              />\r\n                            {ticket.team[0]._user._id === usuarioId &&  \r\n                              <ListItemSecondaryAction>\r\n                                <IconButton edge=\"start\" aria-label=\"delete\" onClick={() => deleteMembersTeam(item._user._id)}>\r\n                                  <DeleteIcon />\r\n                                </IconButton>\r\n                              </ListItemSecondaryAction>\r\n                            }\r\n                            </ListItem>\r\n                          </Fragment>\r\n                          : ''\r\n                      )}\r\n                    </List>\r\n                </Box>\r\n            </Grid>\r\n        </Grid>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Chat\r\n          ticket = {ticket}\r\n          userId = {usuarioId}\r\n          comments = {comments}\r\n        >\r\n              \r\n        </Chat>\r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={3}>\r\n        Item Four\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        Item Five\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        Item Six\r\n      </TabPanel>\r\n      <TabPanel value={value} index={6}>\r\n        Item Seven\r\n      </TabPanel> */} \r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TabsCentered from '../ui/TabsCentered';\r\nimport {useParams} from 'react-router-dom'\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n\r\nconst Detalles2 = () => {\r\n    const classes = useStyles();\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const [users, setUsers] = React.useState([])\r\n    const [ticketInfo, setTicketInfo] = React.useState({})\r\n    const [responsible, setResponsible] = React.useState([])\r\n    const [comments, setComments] = React.useState([])\r\n    const {id} = useParams()\r\n    const [ticketId, setTicketId] = React.useState(id)\r\n    React.useEffect(() => {\r\n      const ticketData = async (id) =>{\r\n        try {\r\n          const res = await axios.get(`api/ticket/${id}`)\r\n          const data = res.data\r\n          setTicketInfo(data)\r\n          setResponsible(data.team)\r\n          setComments(data.comments)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n      const getUsers = async () => {\r\n        try {\r\n             const res = await axios.get('users/users')\r\n             const data = res.data\r\n             setUsers(data)\r\n             console.log(users)\r\n        } catch (error) {\r\n             console.log(\"ocurrio un error\")\r\n             console.log(error)\r\n        }\r\n      }\r\n      ticketData(ticketId)\r\n      getUsers()\r\n\r\n    },[])\r\n    return (\r\n      <React.Fragment>\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <TabsCentered\r\n              ticket = {ticketInfo}\r\n              setTicket = {setTicketInfo}\r\n              responsible = {responsible}\r\n              setResponsible = {setResponsible}\r\n              usuarioId = {usuarioId}\r\n              comments = {comments}\r\n              users = {users}\r\n            >\r\n          </TabsCentered>\r\n        </CardContent>\r\n        <CardActions>\r\n         \r\n        </CardActions>\r\n      </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  const Detalles = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Detalles del Ticket\"}>\r\n                <Detalles2>\r\n\r\n                </Detalles2>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Detalles\r\n","import React, {Fragment, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport listPlugin from '@fullcalendar/list';\r\nimport esLocale from '@fullcalendar/core/locales/es';\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\n\r\nconst Calendar2 = () => {\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const [tickets, setTickets] = useState([])\r\n    const [events, setEvents] = useState([])\r\n    React.useEffect( () => {\r\n        const getTickets = async () =>{  \r\n           try {\r\n                const res = await axios.get(`api/ticket?usuarioId=${usuarioId}`)\r\n                setTickets(res.data.data)\r\n           } catch (error) {\r\n               console.log(\"ocurrio un error\")\r\n               console.log(error)\r\n           }\r\n        }\r\n        getTickets()\r\n    }, [])\r\n\r\n    React.useEffect( () =>  {\r\n        tickets.map((ticket) => (\r\n            (ticket.status === 'Sin Solucionar') &&\r\n            setEvents(prevState => \r\n                [...prevState, { title: ticket.name, start: ticket.start_date, end: ticket.end_date, url: `/tickets/${ticket._id}`, backgroundColor : ticket.active ? '#165CFF' : '#FF2416', borderColor: ticket.active === false && '#FF2416' }])\r\n        ))\r\n    },[tickets])\r\n    return (\r\n        <Fragment>\r\n            <FullCalendar\r\n                plugins={[ dayGridPlugin, listPlugin, dayGridPlugin   ]}\r\n                headerToolbar= {{\r\n                    center: 'dayGridWeek dayGridMonth listWeek'\r\n                }}\r\n                initialView=\"dayGridMonth\"\r\n                locale={esLocale}\r\n                events={events}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Calendar = () => {\r\n    return (\r\n        <Dashboard section={\"Calendario de Tareas\"}>\r\n            <Calendar2>\r\n\r\n            </Calendar2>\r\n        </Dashboard>\r\n    )\r\n\r\n}\r\n\r\nexport default Calendar\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport Dashboard from '../dashboard/Dashboard'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Notification from '../ui/Notification';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n  \r\nconst Pendientess = () => {\r\n    const classes = useStyles();\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const [notification, setNotification] = React.useState({open: false, message: '', severity: ''});\r\n    const [tickets, setTickets] = React.useState([])\r\n    const token = useSelector(store => store.usuario.token)\r\n    const config = {\r\n        headers: {\r\n            token: token\r\n        }\r\n    }\r\n    React.useEffect( () => {\r\n        const getTickets = async () =>{  \r\n           try {\r\n                const res = await axios.get('api/ticket/solution/pending',config)\r\n                const data = res.data\r\n                setTickets(data.data)\r\n           } catch (error) {\r\n               console.log(\"ocurrio un error\")\r\n               console.log(error)\r\n           }\r\n        }\r\n        getTickets()\r\n    },[])\r\n\r\n    const ticketAprobed = async (id) => {\r\n        const ticketId = {\r\n            ticketId : id\r\n        }\r\n        try {\r\n            const res = await axios.post('api/ticket/solution/aprobed',ticketId, config)\r\n            setNotification({...notification, open: true,  message: \"Ticket Marcado como Solucionado\", severity: \"success\"})\r\n            const arrayTickets = tickets.filter(ticket => ticket._id !== id)\r\n            setTickets(arrayTickets)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Notification \r\n                message = {notification.message}\r\n                open = {notification.open}\r\n                severity= {notification.severity}\r\n                setNotification={setNotification}\r\n            />\r\n            <Grid container spacing={1}>\r\n                {\r\n                    tickets.map(ticket => \r\n                        <Grid item md={4} xs={12} sm={6}>\r\n                            <Card className={classes.root}>\r\n                                <CardActionArea>\r\n                                    <CardMedia\r\n                                    className={classes.media}\r\n                                    image=\"\"\r\n                                    title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        {ticket.name}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {ticket.solution}\r\n                                    </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" color=\"primary\" href={`/tickets/${ticket._id}`}>\r\n                                        Ver Ticket\r\n                                    </Button>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => ticketAprobed(ticket._id)}>\r\n                                        Solucionado\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>  \r\n                    \r\n                    )\r\n                }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Pendientes = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Tickets Pendientes de Aprobacion\"}>\r\n                <Pendientess>\r\n\r\n                </Pendientess>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pendientes\r\n","import React, {useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid,Button, Box, Divider, FormControl, FormHelperText, InputLabel, MenuItem , Select , TextField, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '25ch',\r\n    },\r\n  }));\r\n\r\nconst FormAddEdit = (props) => {\r\n    const {user, addUser,editUser, edit, emptyFields} = props;\r\n    const classes = useStyles();\r\n    const {register, errors, handleSubmit, control, watch} = useForm();\r\n    \r\n    const password = watch(\"userPassword\");\r\n    const handleChangeCheckBox = (event) => {\r\n        setCheckBox(event.target.checked);\r\n      };\r\n    const [checkBox, setCheckBox] = useState(() => {\r\n    const initialState = !edit;\r\n    return initialState;\r\n    });\r\n    return (\r\n        <div>\r\n            <form onSubmit={edit ? handleSubmit(editUser) : handleSubmit(addUser)} className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item sm={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                    minLength: {\r\n                                        value: 6, \r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userName\" \r\n                            id=\"userName\"\r\n                            label=\"Nombre\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={user.name || ''}\r\n                            \r\n                            as={\r\n                            <TextField\r\n                                error={ errors.userName ? true : false }\r\n                                helperText={errors.userName ? errors.userName.message : null} \r\n                                \r\n                            />\r\n                        }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                    minLength: {\r\n                                        value: 6, \r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userLastName\" \r\n                            id=\"userLastName\"\r\n                            label=\"Apellido\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={user.lastName || ''}\r\n                            \r\n                            as={\r\n                            <TextField\r\n                                error={ errors.userLastName ? true : false }\r\n                                helperText={errors.userLastName ? errors.userLastName.message : null} \r\n                                \r\n                            />\r\n                        }\r\n                        />\r\n                        <Box>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel id=\"labelPrioridad\">Rol</InputLabel>\r\n                                <Controller\r\n                                name=\"userRole\"\r\n                                control={control}\r\n                                rules={{required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                    defaultValue={user.role || ''}\r\n                                as={\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        label=\"Prioridad\"\r\n                                        id=\"ticketPriority\"                                       \r\n                                        value={user.role}\r\n                                        error={ errors.userRole ? true : false }   \r\n                                        >\r\n                                        <MenuItem value={'User'}>Usuario</MenuItem>\r\n                                        <MenuItem value={'Admin'}>Admin</MenuItem>\r\n                                    </Select>\r\n                                }\r\n                                />\r\n                                 <FormHelperText\r\n                                    error={ errors.userRole ? true : false }\r\n                                >\r\n                                    {errors.userRole ? errors.userRole.message : null} \r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                    <Grid sm={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                        pattern: {\r\n                                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                            message: \"Email con Formato Invalido\",\r\n                                          },\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userEmail\" \r\n                            type=\"email\"\r\n                            id=\"userEmail\"\r\n                            label=\"Email\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={user.email || ''}\r\n                            \r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.userEmail ? true : false }\r\n                                    helperText={errors.userEmail ? errors.userEmail.message : null} \r\n                                    \r\n                                />\r\n                                }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    required:  {\r\n                                        value: checkBox? true: false, \r\n                                        message: 'Campo requerido'\r\n                                        },\r\n                                    minLength: {\r\n                                        value: 6,\r\n                                        message: \"La Contraseña Tiene que Tener al Menos 6 Caracteres\"\r\n                                    } \r\n                            }}\r\n                            control={control}\r\n                            name=\"userPassword\" \r\n                            type=\"password\"\r\n                            id=\"userPassword\"\r\n                            label=\"Contraseña\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={''}\r\n                            disabled={!checkBox}\r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.userPassword ? true : false }\r\n                                    helperText={errors.userPassword ? errors.userPassword.message : null} \r\n                                    \r\n                                />\r\n                                }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: checkBox? true: false, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                        validate: value => (value === password || !checkBox) || \"Las contraseñas no Coinciden\"\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userPasswordRepeat\" \r\n                            type=\"password\"\r\n                            id=\"userPasswordRepeat\"\r\n                            label=\"Repetir Contraseña\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={''}\r\n                            disabled={!checkBox}\r\n                            \r\n                            as={\r\n                                    <TextField\r\n                                        error={ errors.userPasswordRepeat ? true : false }\r\n                                        helperText={errors.userPasswordRepeat ? errors.userPasswordRepeat.message : null} \r\n                                        \r\n                                    />\r\n                                }\r\n                        />               \r\n                    </Grid>\r\n                    <Grid sm={12}>\r\n                        {edit &&\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={checkBox} onChange={handleChangeCheckBox} color=\"primary\" />}\r\n                                label=\"Desea Cambiar la Contraseña\"\r\n                            />\r\n                        }\r\n                    </Grid>               \r\n                    <Grid item sm={12}>\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\" m={1} p={1}>\r\n                            <Button color=\"primary\" type=\"button\" onClick={() =>  emptyFields()}>\r\n                                Cancelar\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Guardar\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAddEdit\r\n\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Box, Button, Grid} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MaterialTable from 'material-table'\r\nimport FormAddEdit from './Forms/Add-Edit'\r\nimport Popup from '../../ui/Popup'\r\nimport Notification from '../../ui/Notification'\r\nimport Dashboard from '../../dashboard/Dashboard'\r\n\r\nconst Users2 = () => {\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [notification, setNotification] = React.useState({open: false, message: ''});\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        lastName: '',\r\n        role: '',\r\n        email: '',\r\n    });\r\n    const [users, setUsers] = useState([])\r\n    const [edit, setEdit] = useState(false);\r\n    const [id, setId] = useState('');\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () =>{\r\n           const res =  await axios.get('http://localhost:5000/users/users')\r\n           setUsers(res.data)\r\n        }\r\n        getUsers();\r\n    },[])\r\n\r\n    const addUser = async (data) => {\r\n        const newUser = {\r\n            name: data.userName,\r\n            lastName: data.userLastName,\r\n            email: data.userEmail,\r\n            password: data.userPassword,\r\n            role: data.userRole\r\n        }\r\n        try {\r\n            const res = await axios.post('http://localhost:5000/users/users', newUser)\r\n            setUsers([\r\n                ...users,\r\n                res.data\r\n            ])\r\n            setNotification({...notification, open: true,  message: \"Usuario Creado Correctamente\"})\r\n            emptyFields()\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const edition = (row) => {\r\n        setId(row._id)\r\n        setUser({\r\n            name: row.nombre,\r\n            lastName: row.lastName,\r\n            email: row.email,\r\n            role: row.role\r\n        })\r\n        setEdit(true)\r\n        setOpenPopup(true)\r\n        console.log(user)\r\n    }\r\n\r\n    // Actualizar Usuario\r\n    const editUser =  async (data) => {\r\n        const userEdit = {\r\n            name: data.userName,\r\n            lastName: data.userLastName,\r\n            email: data.userEmail,\r\n            password: data.userPassword,\r\n            role: data.userRole\r\n        }\r\n        try {\r\n            const res = await axios.put(`http://localhost:5000/users/users/${id}`,userEdit)\r\n            const arrayEditado = users.map( user => (\r\n                user._id === id ? res.data : user\r\n            ))\r\n            console.log(res.data)\r\n            setUsers(arrayEditado)\r\n            setNotification({...notification, open: true, message: \"Usuario Editado Correctamente\"})\r\n            emptyFields()\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const deleteUser = async data => {\r\n        const usersIds = []\r\n        data.map(user => usersIds.push(user._id))\r\n        const confirm = window.confirm(\"Estas Seguro de Eliminar El/Los Registro/s\")\r\n        try {\r\n            if(confirm){\r\n                const res = await axios.post('http://localhost:5000/users/users/delete/many', usersIds)\r\n                const arrayFiltrado = users.filter((user) => !usersIds.includes(user._id))\r\n                setUsers(arrayFiltrado)\r\n                setNotification({...notification, open: true,  message: \"Usuario/s Eliminado/s Correctamente\"})\r\n            }     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Cerrar formulario flotante\r\n    const closeForm = () => {\r\n        setOpenPopup(false)\r\n        setEdit(false)\r\n    }\r\n    // Devuelve el estado del Ticket a situacion inicial\r\n    const emptyFields = () =>{\r\n        closeForm()\r\n        setUser({\r\n            name: '',\r\n            lastName: '',\r\n            role: '',\r\n            email: ''\r\n        })\r\n        setId('')\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Grid container spacing={1}>\r\n                <Grid item sm={12}> \r\n                    <Box>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() =>  setOpenPopup(true)}>\r\n                            Nuevo Usuario\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                    <Box mt={2}>\r\n                        <MaterialTable\r\n                            columns={[\r\n                                { title: 'Id', field: '_id', hidden: true},\r\n                                { title: 'Nombre', field: 'nombre' },\r\n                                { title: 'Apellido', field: 'lastName' },\r\n                                { title: \"role\", field: 'role'},\r\n                                { title: 'email', field: 'email' },\r\n                            ]}\r\n                            data={users}\r\n                            actions={[\r\n                                {\r\n                                  //hidden: roleUser !== 'Admin',\r\n                                    icon: 'edit',\r\n                                    tooltip: 'Editar',\r\n                                    position: 'row',\r\n                                    onClick: (event, rowData) => edition(rowData),\r\n                                },\r\n                                {\r\n                                    icon: () => <DeleteIcon />,\r\n                                    position: 'toolbarOnSelect',\r\n                                    tooltip: 'Borrar',\r\n                                    onClick: (event, rowData) => deleteUser(rowData),\r\n                                }\r\n                              ]}\r\n                            options={{\r\n                                actionsColumnIndex: -1,\r\n                                selection: true,\r\n                                pageSize: 10\r\n                            }}\r\n                            title=\"Usuarios\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Notification \r\n                    message = {notification.message}\r\n                    open = {notification.open}\r\n                    severity= {\"success\"}\r\n                    setNotification={setNotification}\r\n            />\r\n            <Popup\r\n               openPopup={openPopup}  \r\n               title= {edit ? \"Editar Usuario\" : \"Agregar Usuario\"} \r\n               closeForm={closeForm}           \r\n            >\r\n               <FormAddEdit\r\n                edit={edit}\r\n                user={user}\r\n                addUser = {addUser}\r\n                editUser = { editUser} \r\n                emptyFields={emptyFields}  \r\n                />\r\n            </Popup>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Users = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Usuarios\"}>\r\n                <Users2>\r\n\r\n                </Users2>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Users\r\n","import React, {useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid,Button, Box, Divider, FormControl, FormHelperText, InputLabel, MenuItem , Select , TextField, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '25ch',\r\n    },\r\n  }));\r\n\r\nconst FormAddEdit = (props) => {\r\n    const {institution, addInstitution,editInstitution, edit, emptyFields} = props;\r\n    const classes = useStyles();\r\n    const {register, errors, handleSubmit, control, watch} = useForm();\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={edit ? handleSubmit(editInstitution) : handleSubmit(addInstitution)} className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item sm={12}>\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                    minLength: {\r\n                                        value: 6, \r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"institutionName\" \r\n                            id=\"institutionName\"\r\n                            label=\"Nombre\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={institution.name || ''}\r\n                            \r\n                            as={\r\n                            <TextField\r\n                                error={ errors.institutionName ? true : false }\r\n                                helperText={errors.institutionName ? errors.institutionName.message : null} \r\n                                \r\n                            />\r\n                            }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"institutionAddres\" \r\n                            id=\"institutionAddres\"\r\n                            label=\"Direccion\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={institution.addres || ''}\r\n                            type=\"text\"\r\n                            as={\r\n                            <TextField\r\n                                error={ errors.institutionAddres ? true : false }\r\n                                helperText={errors.institutionAddres ? errors.institutionAddres.message : null} \r\n                                \r\n                            />\r\n                            }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"institutionCue\" \r\n                            id=\"institutionCue\"\r\n                            label=\"CUE\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={institution.cue || ''}\r\n                            type=\"number\"\r\n                            as={\r\n                            <TextField\r\n                                error={ errors.institutionCue ? true : false }\r\n                                helperText={errors.institutionCue ? errors.institutionCue.message : null} \r\n                                \r\n                            />\r\n                        }\r\n                        />\r\n                        \r\n                        \r\n                    </Grid>               \r\n                    <Grid item sm={12}>\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\" m={1} p={1}>\r\n                            <Button color=\"primary\" type=\"button\" onClick={() =>  emptyFields()}>\r\n                                Cancelar\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Guardar\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAddEdit\r\n\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport { Box, Button, Grid} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MaterialTable from 'material-table'\r\nimport FormAddEdit from './Forms/Add-Edit'\r\nimport Popup from '../../ui/Popup'\r\nimport Notification from '../../ui/Notification'\r\nimport Dashboard from '../../dashboard/Dashboard'\r\n\r\nconst Institution2 = () => {\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [notification, setNotification] = React.useState({open: false, message: ''});\r\n    const [institution, setInstitution] = useState({\r\n        name: '',\r\n        addres: '',\r\n        cue: '',\r\n    });\r\n    const [institutions, setInstitutions] = useState([])\r\n    const [edit, setEdit] = useState(false);\r\n    const [id, setId] = useState('');\r\n\r\n    useEffect(() => {\r\n        const getInstitutions = async () =>{\r\n           const res =  await axios.get('institutions/institutions')\r\n           setInstitutions(res.data)\r\n        }\r\n        getInstitutions();\r\n    },[])\r\n\r\n    const addInstitution = async (data) => {\r\n        const newInstituion = {\r\n            name: data.institutionName,\r\n            addres: data.institutionAddres,\r\n            cue: data.institutionCue,\r\n        }\r\n        try {\r\n            const res = await axios.post('institutions/institutions', newInstituion)\r\n            setInstitutions([\r\n                ...institutions,\r\n                res.data\r\n            ])\r\n            setNotification({...notification, open: true,  message: \"Institucion Creada Correctamente\"})\r\n            emptyFields()\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const edition = (row) => {\r\n        setId(row._id)\r\n        setInstitution({\r\n            name: row.name,\r\n            addres: row.addres,\r\n            cue: row.cue,\r\n        })\r\n        setEdit(true)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    // Actualizar Institucion\r\n    const editInstitution =  async (data) => {\r\n        const instituionEdit = {\r\n            name: data.institutionName,\r\n            addres: data.institutioAddres,\r\n            CUE: data.institutioCUE,\r\n        }\r\n        try {\r\n            const res = await axios.put(`institutions/institutions/${id}`, instituionEdit)\r\n            const arrayEditado = institutions.map( institution => (\r\n                institution._id === id ? res.data : institution\r\n            ))\r\n            setInstitutions(arrayEditado)\r\n            setNotification({...notification, open: true, message: \"Institucion Editada Correctamente\"})\r\n            emptyFields()\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const deleteInstitutions = async data => {\r\n        const institutionsIds = []\r\n        data.map(institution => institutionsIds.push(institution._id))\r\n        const confirm = window.confirm(\"Estas Seguro de Eliminar El/Los Registro/s\")\r\n        try {\r\n            if(confirm){\r\n                const res = await axios.post('institutions/institutions/delete/many', institutionsIds)\r\n                const arrayFiltrado = institutions.filter((institution) => !institutionsIds.includes(institution._id))\r\n                setInstitutions(arrayFiltrado)\r\n                setNotification({...notification, open: true,  message: \"Intitucion/es Eliminada/s Correctamente\"})\r\n            }     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Cerrar formulario flotante\r\n    const closeForm = () => {\r\n        setOpenPopup(false)\r\n        setEdit(false)\r\n    }\r\n    // Devuelve el estado de la institution a situacion inicial\r\n    const emptyFields = () =>{\r\n        closeForm()\r\n        setInstitution({\r\n            name: '',\r\n            addres: '',\r\n            cue: '',\r\n        })\r\n        setId('')\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Grid container spacing={1}>\r\n                <Grid item sm={12}> \r\n                    <Box>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() =>  setOpenPopup(true)}>\r\n                            Nueva Institucion\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                    <Box mt={2}>\r\n                        <MaterialTable\r\n                            columns={[\r\n                                { title: 'Id', field: '_id', hidden: true},\r\n                                { title: 'Nombre', field: 'name' },\r\n                                { title: 'Direccion', field: 'addres' },\r\n                                { title: \"CUE\", field: 'cue'},\r\n                            ]}\r\n                            data={institutions}\r\n                            actions={[\r\n                                {\r\n                                  //hidden: roleUser !== 'Admin',\r\n                                    icon: 'edit',\r\n                                    tooltip: 'Editar',\r\n                                    position: 'row',\r\n                                    onClick: (event, rowData) => edition(rowData),\r\n                                },\r\n                                {\r\n                                    icon: () => <DeleteIcon />,\r\n                                    position: 'toolbarOnSelect',\r\n                                    tooltip: 'Borrar',\r\n                                    onClick: (event, rowData) => deleteInstitutions(rowData),\r\n                                }\r\n                              ]}\r\n                            options={{\r\n                                actionsColumnIndex: -1,\r\n                                selection: true,\r\n                                pageSize: 10\r\n                            }}\r\n                            title=\"Instituciones\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Notification \r\n                    message = {notification.message}\r\n                    open = {notification.open}\r\n                    severity= {\"success\"}\r\n                    setNotification={setNotification}\r\n            />\r\n            <Popup\r\n               openPopup={openPopup}  \r\n               title= {edit ? \"Editar Institucion\" : \"Agregar Institucion\"} \r\n               closeForm={closeForm}           \r\n            >\r\n               <FormAddEdit\r\n                edit={edit}\r\n                institution={institution}\r\n                addInstitution = {addInstitution}\r\n                editInstitution = { editInstitution} \r\n                emptyFields={emptyFields}  \r\n                />\r\n            </Popup>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Institution = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Instituciones\"}>\r\n                <Institution2>\r\n\r\n                </Institution2>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Institution\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { Box, Button, Grid, Paper } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport 'react-dates/initialize';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport esLocale  from 'moment/locale/es';\r\nimport moment from 'moment';\r\nimport {\r\n    Chart,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    BarSeries,\r\n    Title,\r\n    Legend,\r\n  } from '@devexpress/dx-react-chart-material-ui';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Stack, Animation } from '@devexpress/dx-react-chart';\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\nconst legendStyles = () => ({\r\n    root: {\r\n      display: 'flex',\r\n      margin: 'auto',\r\n      flexDirection: 'row',\r\n    },\r\n  });\r\n  const legendRootBase = ({ classes, ...restProps }) => (\r\n    <Legend.Root {...restProps} className={classes.root} />\r\n  );\r\n  const Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\r\n  const legendLabelStyles = () => ({\r\n    label: {\r\n      whiteSpace: 'nowrap',\r\n    },\r\n  });\r\n  const legendLabelBase = ({ classes, ...restProps }) => (\r\n    <Legend.Label className={classes.label} {...restProps} />\r\n  );\r\n  const Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n  \r\nconst Informe2 = (props) => {\r\n    moment.locale('es', esLocale);\r\n    const classes = useStyles();\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const role = useSelector(store => store.usuario.role)\r\n    const userName = useSelector(store => store.usuario.usuario.data.nombre)\r\n    const [startDate, setStartDate] = useState(moment());\r\n    const [endDate, setEndDate] = useState(moment());\r\n    const [focusedInput, setFocusedInput] = useState(null);\r\n    const [data, setData] = useState([])\r\n    const [chartData, setCharData] = useState([])\r\n    \r\n    useEffect(() => {\r\n        setCharData([]);\r\n        dateRange();\r\n    },[startDate, endDate ])\r\n\r\n    useEffect(() => {\r\n        data.map((data) => (\r\n            setCharData(prevState => \r\n                [...prevState,{ mes:  `${moment.months(data._id.mes - 1)} - ${data._id.anio} `, solucionado: data.solucionado, noSolucionado: data.noSolucionado }])\r\n        ))\r\n\r\n    },[data])\r\n    \r\n     const dateRange = async () => {\r\n            try {\r\n                 const res = await axios.get(`api/range-date?usuarioId=${usuarioId}&startDate=${startDate}&endDate=${endDate}&role=${role}`)\r\n                 setData(res.data)\r\n                 \r\n                 \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n    }\r\n    const generateReport = async () =>{\r\n        let noSolucionado = data.reduce( (a,b) => a  + b.noSolucionado, 0)\r\n        let solucionado = data.reduce( (a,b) => a  + b.solucionado, 0)\r\n        let total = noSolucionado + solucionado\r\n        const ticketPDF = {\r\n            noSolucionado: noSolucionado,\r\n            solucionado: solucionado,\r\n            total: total,\r\n            userName : userName,\r\n            startDate : startDate._d,\r\n            endDate: endDate._d\r\n        }\r\n        console.log(noSolucionado)\r\n        try {\r\n            const res =  await axios.post('api/pdf',ticketPDF, {responseType: 'blob'})\r\n            //Create a Blob from the PDF Stream\r\n                const file = new Blob(\r\n                    [res.data], \r\n                    {type: 'application/pdf'});\r\n            //Build a URL from the file\r\n                const fileURL = URL.createObjectURL(file);\r\n            //Open the URL on new Window\r\n                window.open(fileURL);\r\n                console.log(file)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-start\">\r\n                        <DateRangePicker\r\n                            startDate={startDate}\r\n                            startDateId=\"s_id\"\r\n                            endDate={endDate}\r\n                            endDateId=\"e_id\"\r\n                            onDatesChange={({ startDate, endDate }) => { setStartDate(startDate); setEndDate(endDate); }}\r\n                            focusedInput={focusedInput}\r\n                            onFocusChange={e => setFocusedInput(e)}\r\n                            displayFormat=\"DD/MM/YYYY\"\r\n                            isOutsideRange={() => false}\r\n                            withPortal={true} \r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={classes.button}\r\n                        startIcon={<PrintIcon />}\r\n                        onClick = {() => generateReport()}\r\n                        >\r\n                            Generar Informe\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                   <Box mt={2}>\r\n                    <Paper>\r\n                            <Chart\r\n                            data={chartData}\r\n                            >\r\n                                <ArgumentAxis />\r\n                                <ValueAxis />\r\n\r\n                                <BarSeries\r\n                                    name=\"Solucionado\"\r\n                                    valueField=\"solucionado\"\r\n                                    argumentField=\"mes\"\r\n                                    color=\"#0FFF04\"\r\n                                />\r\n                                <BarSeries\r\n                                    name=\"No Solucionado\"\r\n                                    valueField=\"noSolucionado\"\r\n                                    argumentField=\"mes\"\r\n                                    color=\"#FF0404\"\r\n                                />\r\n                                <Animation />\r\n                                <Legend position=\"bottom\" rootComponent={Root} labelComponent={Label} />\r\n                                <Title text=\"Situacion Tickets\" />\r\n                                <Stack />\r\n                            </Chart>\r\n                        </Paper>\r\n                   </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Informe = () =>{\r\n    return (\r\n        <Dashboard section={\"Reportes Detallados\"}>\r\n            <Informe2>\r\n\r\n            </Informe2>\r\n        </Dashboard>\r\n    )\r\n    \r\n}\r\n\r\nexport default Informe\r\n","import React from 'react';\nimport Login from './components/Login'\nimport Dashboard from './components/dashboard/Dashboard'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport {useSelector} from 'react-redux'\nimport Tickets from './components/Tickets/Tickets'\nimport Detalles from './components/Tickets/Detalles';\nimport Calendar from './components/Tickets/Calendar';\nimport Pendientes from './components/Administracion/Pendientes';\nimport Users from './components/Administracion/Users/Users';\nimport Institution from './components/Administracion/Institutions/Institutions';\nimport Informe from './components/Tickets/Infome';\n\n\n\nfunction App() {\n  const RutaProtegida = ({component, path, ...rest}) => {\n    const tokenState = useSelector(store => store.usuario.token)\n      if(tokenState){\n        return <Route component={component} path={path} {...rest} />\n     }else{\n      return <Redirect to=\"/\" {...rest} />\n    }\n  }\n\n    // Rutas Administrador\n    const RutaAdmin = ({component, path, ...rest}) => {  \n      const role = useSelector(store => store.usuario.role)\n      if(role === 'Admin'){\n          return <Route component={component} path={path} {...rest} />\n       }else{\n        return <Redirect to=\"/\" {...rest} />\n      }\n    }\n\n  return (\n        <Router>\n          <Switch>\n            <Route component={Login} path=\"/\" exact/>\n            <RutaProtegida component={Dashboard} path=\"/dashboard\" exact/>\n            <RutaProtegida component={Tickets} path=\"/tickets\" exact/>\n            <RutaProtegida component={Detalles} path=\"/tickets/:id\" exact/>\n            <RutaProtegida component={Calendar} path=\"/calendar\" exact/>\n            <RutaProtegida component={Informe} path=\"/reportes\" exact/>\n            <RutaAdmin component={Pendientes} path=\"/admin/pendientes\" exact/>\n            <RutaAdmin component={Users} path=\"/admin/users\" exact/>\n            <RutaAdmin component={Institution} path=\"/admin/instituciones\" exact/>\n          </Switch>\n        </Router>\n  );\n}\n\nexport default App;\n","import {createStore, combineReducers, compose, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport userReducer, {leerUsuarioAccion} from './usuarioDucks'\r\n\r\nconst rootReducer = combineReducers({\r\n    usuario : userReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function generateStore(){\r\n    const store = createStore( rootReducer,  composeEnhancers( applyMiddleware(thunk) ))\r\n    leerUsuarioAccion()(store.dispatch)\r\n    return store;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport {Provider} from 'react-redux'\nimport generateStore from './redux/store'\nimport axios from 'axios'\n\nconst store = generateStore()\n\nif(localStorage.getItem('usuario')){\n  const token = JSON.parse(localStorage.getItem('usuario'))\n \n  axios.defaults.headers.common['token'] = token.token \n\n}\n\naxios.defaults.baseURL = process.env.REACT_APP_AXIOS_URL;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}