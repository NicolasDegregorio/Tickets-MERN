{"version":3,"sources":["redux/usuarioDucks.js","components/Login.jsx","components/dashboard/userMenu.jsx","components/dashboard/AppBarr.jsx","components/dashboard/listItems.jsx","components/dashboard/Drawerr.jsx","components/dashboard/Dashboard.jsx","components/ui/Popup.jsx","components/Tickets/Forms/FormAdd.jsx","components/ui/Card.jsx","components/ui/Notification.jsx","components/Tickets/Tickets.jsx","components/ui/Chat.jsx","components/GoogleMaps/MapInstitution.jsx","components/ui/Tabs/DialogEndTicket.jsx","components/ui/Tabs/Detalles.jsx","components/ui/Tabs/DialogEquipo.jsx","components/ui/Tabs/Equipo.jsx","components/ui/TabsCentered.jsx","components/Tickets/Detalles.jsx","components/Tickets/Calendar.jsx","components/Administracion/Pendientes.jsx","components/Administracion/Users/Forms/Add-Edit.jsx","components/Administracion/Users/Users.jsx","components/GoogleMaps/Maps.jsx","components/Administracion/Institutions/Forms/Add-Edit.jsx","components/Administracion/Institutions/Institutions.jsx","components/Tickets/Infome.jsx","App.jsx","redux/store.js","index.js"],"names":["dataInicial","activo","GET_LOGIN_SUCCESS","CERRAR_SESION","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","process","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","withRouter","props","classes","dispatch","useDispatch","useSelector","store","usuario","React","useState","email","password","setUsuario","useEffect","history","push","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","onSubmit","e","preventDefault","getState","a","axios","post","res","payload","token","data","jwt_decode","role","localStorage","setItem","JSON","stringify","console","log","response","alert","mensaje","loginUserAction","TextField","required","fullWidth","id","label","name","autoComplete","onChange","target","value","autoFocus","FormControlLabel","control","Checkbox","Button","Box","mt","UserMenu","anchorEl","setAnchorEl","userName","nombre","handleClose","aria-controls","aria-haspopup","onClick","event","currentTarget","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","MenuItem","removeItem","toolbar","paddingRight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","AppBarr","handleDrawerOpen","AppBar","position","clsx","Toolbar","IconButton","edge","aria-label","noWrap","section","mainListItems","ListItem","button","NavLink","to","activeClassName","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","toolbarIcon","justifyContent","padding","mixins","flexShrink","whiteSpace","drawerPaper","drawerPaperClose","overflowX","breakpoints","up","Drawerr","handleDrawerClose","Drawer","Divider","List","minHeight","appBarSpacer","content","overflow","paddingTop","paddingBottom","fixedHeight","footer","bottom","left","Dashboard","children","setOpen","Container","maxWidth","dialogWrapper","top","dialogTitle","Popup","openPopup","closeForm","loading","Dialog","DialogTitle","style","CircularProgress","DialogContent","dividers","formControl","minWidth","FormAdd","ticket","addTicket","editTicket","edit","institutions","users","emptyFields","useForm","register","errors","handleSubmit","FormControl","as","Autocomplete","options","_","getOptionLabel","option","defaultValue","institution","renderInput","params","InputLabelProps","shrink","error","ticketInstitution","rules","message","FormHelperText","minLength","multiline","rowsMax","description","ticketDescription","helperText","InputLabel","team","_user","Select","labelId","ticketLeader","map","user","index","_id","inputRef","start_date","slice","end_date","priority","ticketPriority","m","p","SimpleCard","typeTickets","totalsTickets","action","typeFilter","Fragment","Card","CardActionArea","CardContent","justify","gutterBottom","Notification","severity","setNotification","reason","Alert","Snackbar","autoHideDuration","Tickets2","usuarioId","roleUser","setUsers","tickets","setTickets","setInstitutions","setEdit","setId","ticketsFilter","setTicketsFilter","setOpenPopup","notification","status","setTicket","setLoading","getTickets","get","getUsers","getInstitutions","setInterval","handleInputChange","newTicket","ticketsAll","deleteTicket","ticketsIds","length","confirm","window","arrayFiltrado","filter","includes","ticketEdit","put","arrayEditado","filterTickets","filtro","active","ml","lg","ticketsSolved","ticketsUnsolved","ticketsExpired","columns","field","hidden","lookup","Alta","Media","Baja","dateSetting","locale","render","rowData","Chip","size","actions","icon","tooltip","row","actionsColumnIndex","selection","pageSize","filtering","exportButton","Tickets","table","chatSection","headBG","borderRight500","borderRight","messageArea","overflowY","Chat","userId","comments","commentsTicket","setCommentsTicket","ticketId","comment","setComent","addComment","deleteComment","commentId","delete","onKeyPress","key","endIcon","Icon","alt","src","ListItemSecondaryAction","GoogleApiWrapper","apiKey","language","lat","lng","google","zoom","initialCenter","center","background","flexWrap","DialogEndTicket","ticketSolve","solution","ticketSolution","disableBackdropClick","disableEscapeKeyDown","DialogActions","Detalles","institutionAddress","responsible","handleClickOpen","moment","format","DialogEquipo","userTeam","setTeam","setResponsible","addMembersTeam","membersTeam","members","multiple","placeholder","Equipo","deleteMembersTeam","dense","ListItemAvatar","TabPanel","other","aria-labelledby","a11yProps","ScrollableTabsButtonAuto","setValue","setUserTeam","usersRepeat","getUsersTeam","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","bullet","transform","fontSize","pos","marginBottom","Detalles2","ticketInfo","setTicketInfo","setInsitutiton","setInstitutionAddress","setComments","useParams","ticketData","address","CardActions","Calendar2","events","setEvents","prevState","start","end","url","borderColor","plugins","dayGridPlugin","listPlugin","headerToolbar","initialView","esLocale","Calendar","media","Pendientess","ticketAprobed","arrayTickets","CardMedia","Pendientes","FormAddEdit","addUser","editUser","watch","checkBox","setCheckBox","lastName","userLastName","userRole","pattern","userEmail","disabled","userPassword","validate","userPasswordRepeat","checked","Users2","setUser","newUser","userEdit","deleteUser","usersIds","Users","libraries","setDataAddress","setAddress","mapCenter","setMapCenter","placeHolder","document","getElementsByClassName","innerHTML","handleChange","dire","geocodeByAddress","getLatLng","results","addressParse","getAddressObject","address_components","formatted_address","locality","department","departament","geocodeLatLng","geocodeByLatLng","ShouldBeComponent","home","postal_code","street","province","country","forEach","shouldBe","indexOf","types","short_name","long_name","onLoadFailed","autocompletionRequest","componentRestrictions","selectProps","containerStyle","t","coord","latLng","onMarkerClick","addInstitution","editInstitution","institutionName","Item","cue","institutionCue","Institution2","setInstitution","dataAddress","newInstituion","instituionEdit","CUE","institutioCUE","deleteInstitutions","institutionsIds","Institution","Root","withStyles","restProps","Label","Informe2","startDate","setStartDate","endDate","setEndDate","focusedInput","setFocusedInput","setData","chartData","setCharData","dateRange","mes","months","anio","solucionado","noSolucionado","generateReport","reduce","b","ticketPDF","total","_d","responseType","file","Blob","fileURL","URL","createObjectURL","startDateId","endDateId","onDatesChange","onFocusChange","displayFormat","isOutsideRange","withPortal","startIcon","valueField","argumentField","rootComponent","labelComponent","text","Informe","App","RutaProtegida","path","rest","RutaAdmin","defaults","headers","common","Login","exact","rootReducer","combineReducers","state","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","getItem","parse","usuarioDecode","leerUsuarioAccion","generateStore","baseURL","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.121f68c6.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// constantes\r\nconst dataInicial = {\r\n    activo: false\r\n}\r\n\r\n// types\r\nconst GET_LOGIN_SUCCESS = 'GET_LOGIN_SUCCESS'\r\nconst CERRAR_SESION = 'CERRAR_SESSION'\r\n\r\n// reducer\r\nexport default function userReducer(state = dataInicial, action){\r\n    switch (action.type) {\r\n        case  GET_LOGIN_SUCCESS:\r\n            return {...state, activo: true, usuario: action.payload.usuario, role: action.payload.role, token: action.payload.token} \r\n        case CERRAR_SESION:\r\n            return {...dataInicial, role: ''}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const loginUserAction = (usuario) => async (dispatch, getState) => {\r\n    try {\r\n        const res = await axios.post('users', usuario)\r\n        dispatch({\r\n            type : GET_LOGIN_SUCCESS,\r\n            payload: {\r\n                token: res.data.token,\r\n                usuario: jwt_decode(res.data.token),\r\n                role: res.data.role.role\r\n            }\r\n        })\r\n        localStorage.setItem('usuario', JSON.stringify({token : res.data.token}))\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n        alert(error.response.data.mensaje)\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    dispatch({\r\n        type : CERRAR_SESION,\r\n    })\r\n    localStorage.removeItem('usuario')\r\n}\r\n\r\n\r\nexport const leerUsuarioAccion = () => async (dispatch) => {\r\n    if(localStorage.getItem('usuario')){\r\n        const usuario = JSON.parse(localStorage.getItem('usuario'))\r\n        const usuarioDecode = jwt_decode(usuario.token)\r\n        dispatch({\r\n            type: GET_LOGIN_SUCCESS,\r\n            payload: {\r\n                token: usuario.token,\r\n                usuario: usuarioDecode,\r\n                role: usuarioDecode.data.role\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n    \r\n    \r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {loginUserAction} from '../redux/usuarioDucks'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Sigef - Gestion de Incidencias\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\nconst url =  process.env.REACT_APP_URL;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${url}img/sigef-logo.png)` ,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'contain',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login2 = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n    const activo = useSelector(store => store.usuario.activo)\r\n    const [usuario, setUsuario] = React.useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        if(activo){\r\n            props.history.push('/tickets')\r\n        }\r\n        \r\n    }, [props.history, activo])\r\n    \r\n    \r\n    const login = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(loginUserAction(usuario))\r\n\r\n    }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Iniciar Sesion\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={login}> \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Correo Electronico\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              onChange={(e) => setUsuario({...usuario, email: e.target.value}) }\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Contraseña\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setUsuario({...usuario, password: e.target.value}) }\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Recordar\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Iniciar Sesion\r\n            </Button>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Olvido su Contraseña?\r\n                </Link>\r\n              </Grid> */}\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nexport default withRouter(Login2)","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {logout} from '../../redux/usuarioDucks';\r\n\r\nexport default function UserMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const userName = useSelector(store => store.usuario.usuario.data.nombre)\r\n  const dispatch = useDispatch()\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button color='inherit' aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        {userName}\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n        transformOrigin={{ horizontal: \"center\" }}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>My account</MenuItem>\r\n        <MenuItem onClick={() => dispatch(logout())}>Cerrar Sesion</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Toolbar, IconButton, Typography} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport UserMenu from './userMenu';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    \r\n  }));\r\nconst AppBarr = (props) => {\r\n  const { handleDrawerOpen, open } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                    {props.section}\r\n                </Typography>\r\n                <IconButton color=\"inherit\">\r\n                        <UserMenu />\r\n                </IconButton>\r\n                {/*   <Badge badgeContent={4} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge> */}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBarr\r\n","import React from 'react';\r\nimport {ListItem, ListItemIcon, ListItemText, ListSubheader} from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport EditAttributesIcon from '@material-ui/icons/EditAttributes';\r\nimport {NavLink } from 'react-router-dom'\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    {/* <ListItem button>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem> */}\r\n    <ListItem button component={NavLink} to=\"/tickets\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <ConfirmationNumberIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Tickets\" />\r\n    </ListItem>\r\n    <ListItem button component={NavLink} to=\"/reportes\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Reporte\" />\r\n    </ListItem>\r\n    <ListItem button component={NavLink} to=\"/calendar\" activeClassName=\"Mui-selected\" >\r\n      <ListItemIcon>\r\n        <DateRangeIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Calendario\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    <ListSubheader inset>Administracion</ListSubheader>\r\n    <ListItem button component={NavLink} to=\"/admin/pendientes\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <EditAttributesIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Tickets Pendiente\" />\r\n    </ListItem>\r\n    <ListItem button  component={NavLink} to=\"/admin/users\" activeClassName=\"Mui-selected\" >\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Usuarios\" />\r\n    </ListItem>\r\n    <ListItem button component={NavLink} to=\"/admin/instituciones\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <SchoolIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Instituciones\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n","import React from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Divider, Drawer,IconButton, List} from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport {useSelector} from 'react-redux'\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    drawer: {\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Drawerr = (props) => {\r\n    const { handleDrawerClose, open } = props;\r\n    const classes = useStyles();\r\n    const role = useSelector(store => store.usuario.role)\r\n    return (\r\n        <div>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                  [classes.drawerPaper]: open,\r\n                  [classes.drawerPaperClose]: !open,\r\n                })}\r\n                classes={{\r\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>{mainListItems}</List>\r\n                <Divider />\r\n                {role === 'Admin' && \r\n                  <List>{secondaryListItems}</List>\r\n                }\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Drawerr\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {CssBaseline, Container, Grid, Typography, Link } from '@material-ui/core';\r\nimport AppBarr from './AppBarr';\r\nimport Drawerr from './Drawerr';\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Sigef - Gestion de Incidencias\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n      </Typography>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    minHeight: '100vh',\r\n  },\r\n  \r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    \r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  footer: {\r\n    marginTop: '1rem',\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    padding: '1rem',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBarr\r\n        handleDrawerOpen={handleDrawerOpen}\r\n        open={open}\r\n        section={props.section}\r\n      />\r\n     <Drawerr\r\n      handleDrawerClose={handleDrawerClose}\r\n      open={open}\r\n    />\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              {children}  \r\n              {/* <Router>\r\n                  <Route component={Tickets} path=\"/tickets\" exact/> \r\n                  <Route component={Prueba} path=\"/tickets/:id\" exact/> \r\n                  <Route component={Calendar} path=\"/calendar\" exact/>\r\n                  <Route component={Infome} path=\"/informe\" exact/> \r\n              </Router> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n          <footer className={classes.footer}>\r\n              <Copyright />\r\n          </footer>\r\n        \r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport {Dialog, CircularProgress,  DialogTitle, DialogContent, IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5),\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, closeForm, loading } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup} maxWidth=\"sm\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {title}\r\n                    </Typography>\r\n                    {loading && <CircularProgress />}\r\n                    <IconButton aria-label=\"delete\" onClick={() =>  closeForm()}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n            \r\n        </Dialog>\r\n    )\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid,Button, Box, FormControl, FormHelperText, InputLabel, MenuItem , Select , TextField } from \"@material-ui/core\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '25ch',\r\n    },\r\n  }));\r\n\r\nconst FormAdd = (props) => {\r\n    const {ticket, addTicket,editTicket, edit, institutions, users, emptyFields } = props;\r\n    const classes = useStyles();\r\n    const {register, errors, handleSubmit, control} = useForm();\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={edit ? handleSubmit(editTicket) : handleSubmit(addTicket)} className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item sm={6}>\r\n                        <FormControl variant=\"outlined\">\r\n                            <Controller\r\n                                as={({ onChange }) => (\r\n                                    <Autocomplete\r\n                                        className=\"form-item\"\r\n                                        options={institutions}\r\n                                        onChange={(_, data) => onChange(data)}\r\n                                        getOptionLabel={option => option.name}\r\n                                        defaultValue={{name: ticket.institution || null}}\r\n                                        renderInput={params => (\r\n                                        <TextField\r\n                                            {...params}\r\n                                            label=\"Instituciones\"\r\n                                            InputLabelProps={{\r\n                                            shrink: true\r\n                                            }}\r\n                                            variant=\"outlined\"\r\n                                            error={ errors.ticketInstitution ? true : false }\r\n                                        />\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                                name=\"ticketInstitution\"\r\n                                control={control}\r\n                                rules={{required: {\r\n                                    value: true, \r\n                                    message: 'Campo requerido'\r\n                                    }\r\n                                }}\r\n                            />\r\n                            \r\n                           <FormHelperText error={ errors.ticketInstitution ? true : false }>{errors.ticketInstitution ? errors.ticketInstitution.message : null} </FormHelperText>\r\n                        </FormControl>\r\n                        <Controller\r\n                            rules={{\r\n                                required: {\r\n                                    value: true, \r\n                                    message: 'Campo requerido'\r\n                                    }, \r\n                                minLength: {\r\n                                    value: 6, \r\n                                    message: 'Mínimo 6 carácteres'\r\n                                }                               \r\n                            }}\r\n                            name=\"ticketDescription\"\r\n                            id=\"ticketDescription\"\r\n                            label=\"Descripcion\"\r\n                            control={control}\r\n                            multiline\r\n                            rowsMax={4}\r\n                            variant=\"outlined\"\r\n                            defaultValue={ticket.description || ''}\r\n\r\n\r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.ticketDescription ? true : false }\r\n                                    helperText={errors.ticketDescription ? errors.ticketDescription.message : null}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Encargado</InputLabel>\r\n                            <Controller\r\n                                name=\"ticketLeader\"\r\n                                control={control}\r\n                                rules={{required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                defaultValue={ticket.team._user || ''}\r\n                                \r\n                                as={\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"ticketLeader\"\r\n                                    value={ticket.team._user}\r\n                                    error={ errors.ticketLeader ? true : false }\r\n                                    label=\"Encargado\"\r\n                                    >\r\n                                    {\r\n                                        users.map((user,index) => (\r\n                                            <MenuItem key={index} value={user._id}>{user.nombre}</MenuItem>\r\n                                        ))\r\n                                    }\r\n                                </Select>\r\n                                } \r\n                            />\r\n                             <FormHelperText error={ errors.ticketLeader ? true : false }>{errors.ticketLeader ? errors.ticketLeader.message : null} </FormHelperText>\r\n                        </FormControl>\r\n                \r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <TextField\r\n                            inputRef={register({\r\n                                required: {\r\n                                    value: true, \r\n                                    message: 'Campo requerido'\r\n                                    }\r\n                               })}\r\n                            name=\"start_date\" \r\n                            id=\"start_date\"\r\n                            label=\"Fecha de Inicio\"\r\n                            type=\"date\"\r\n                            InputLabelProps={{\r\n                            shrink: true,\r\n                            }}\r\n                            defaultValue = {ticket.start_date.slice(0,10)}\r\n                            error={ errors.start_date ? true : false }\r\n                            helperText={errors.start_date ? errors.start_date.message : null}\r\n                        />\r\n                        <Box mt={2}>\r\n                            <TextField\r\n                                inputRef={register({\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                })}\r\n                                name=\"end_date\"\r\n                                id=\"end_date\"\r\n                                label=\"Fecha Limite\"\r\n                                type=\"date\"\r\n                                InputLabelProps={{\r\n                                shrink: true,\r\n                                }}\r\n                                defaultValue= {ticket.end_date.slice(0,10)}\r\n                                error={ errors.start_date ? true : false }\r\n                                helperText={errors.end_date ? errors.end_date.message : null}\r\n                            />\r\n                        </Box>\r\n                        <Box>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel id=\"labelPrioridad\">Prioridad</InputLabel>\r\n                                <Controller\r\n                                name=\"ticketPriority\"\r\n                                control={control}\r\n                                rules={{required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                    defaultValue={ticket.priority || ''}\r\n                                as={\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        label=\"Prioridad\"\r\n                                        id=\"ticketPriority\"                                       \r\n                                        value={ticket.priority}\r\n                                        error={ errors.ticketPriority ? true : false }   \r\n                                        >\r\n                                        <MenuItem value={'Alta'}>Alta</MenuItem>\r\n                                        <MenuItem value={'Media'}>Media</MenuItem>\r\n                                        <MenuItem value={'Baja'}>Baja</MenuItem>\r\n                                    </Select>\r\n                                }\r\n                                />\r\n                                 <FormHelperText\r\n                                    error={ errors.ticketPriority ? true : false }\r\n                                >\r\n                                    {errors.ticketPriority ? errors.ticketPriority.message : null} \r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Box>\r\n                        \r\n                    </Grid>              \r\n                    <Grid item sm={12}>\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\" m={1} p={1}>\r\n                            <Button color=\"primary\" type=\"button\" onClick={() =>  emptyFields()}>\r\n                                Cancelar\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Guardar\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAdd\r\n\r\n","import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardActionArea, \r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%',\r\n  },\r\n  avatar: props =>({\r\n    backgroundColor: props.color,\r\n    height: 56,\r\n    width: 56\r\n  })\r\n}));\r\n\r\n\r\nexport default function SimpleCard(props) {\r\n  const classes = useStyles(props);\r\n  const {typeTickets, totalsTickets, action, typeFilter} = props;\r\n  return (\r\n    <React.Fragment>\r\n         <Card\r\n            className={classes.root} onClick={() => action(typeFilter)}\r\n            >\r\n              <CardActionArea>\r\n                <CardContent>\r\n                    <Grid\r\n                    container\r\n                    justify=\"space-between\"\r\n                    >\r\n                        <Grid item>\r\n                            <Typography\r\n                            color=\"textSecondary\"\r\n                            gutterBottom\r\n                            variant=\"subtitle2\"\r\n                            >\r\n                                {typeTickets}\r\n                            </Typography>\r\n                            <Typography\r\n                            color=\"textPrimary\"\r\n                            variant=\"h3\"\r\n                            >\r\n                                {totalsTickets}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Avatar className={classes.avatar} >\r\n                            <ConfirmationNumberIcon />\r\n                            </Avatar>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n              </CardActionArea>  \r\n            </Card>\r\n    </React.Fragment>\r\n  );\r\n}","import React, {Fragment} from 'react'\r\nimport {Snackbar} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst Notification = (props) => {\r\n    const { message, open, severity,setNotification } = props;\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setNotification({open: false})\r\n      };\r\n    const Alert = (props) => {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Snackbar \r\n                open={open} \r\n                autoHideDuration={3000} \r\n                onClose={handleClose}  \r\n                anchorOrigin={{vertical: 'bottom',\r\n                horizontal: 'right'}}\r\n            >\r\n                <Alert onClose={handleClose} severity={severity}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport MaterialTable from 'material-table'\r\nimport { Box, Button, CircularProgress, Chip, Grid} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Popup from '../ui/Popup'\r\nimport FormAdd from './Forms/FormAdd';\r\nimport SimpleCard from '../ui/Card';\r\nimport Notification from '../ui/Notification'\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\n\r\n\r\nconst Tickets2 = (props) => {\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const roleUser = useSelector(store => store.usuario.usuario.data.role)\r\n    const [users, setUsers] = React.useState([])\r\n    const [tickets, setTickets] = React.useState([])\r\n    const [institutions, setInstitutions] = React.useState([])\r\n    const [edit, setEdit] = React.useState(false)\r\n    const [id, setId] = React.useState('')\r\n    const [ticketsFilter, setTicketsFilter] = React.useState([])\r\n    const [openPopup, setOpenPopup] = React.useState(false)\r\n    const [notification, setNotification] = React.useState({open: false, message: ''});\r\n    const [ticket, setTicket] = React.useState({\r\n        institution: '',\r\n        description : '',\r\n        team : {\r\n            _user: '',\r\n            nombre: '',\r\n            role: ''\r\n        },\r\n        start_date: '',\r\n        end_date: '',\r\n        priority: '',\r\n        status:'Sin Solucionar',\r\n      })\r\n      const [loading, setLoading] = React.useState(false)\r\n      \r\n    React.useEffect( () => {\r\n        const getTickets = async () => {\r\n            setLoading(true)\r\n            try {\r\n                const res = await axios.get(`api/ticket?usuarioId=${usuarioId}`)\r\n                const data = res.data\r\n                setTickets(data)\r\n                setTicketsFilter(data.data)\r\n            } catch (error) {\r\n                console.log(\"ocurrio un error\")\r\n                console.log(error)\r\n            }\r\n            setLoading(false)\r\n        }\r\n        const getUsers = async () => {\r\n           try {\r\n                const res = await axios.get('users/users')\r\n                const data = res.data\r\n                setUsers(data)\r\n           } catch (error) {\r\n                console.log(\"ocurrio un error\")\r\n                console.log(error)\r\n           }\r\n        }\r\n        const getInstitutions = async () => {\r\n            try {\r\n                 const res = await axios.get('institutions/institutions')\r\n                 const data = res.data\r\n                 setInstitutions(data)\r\n            } catch (error) {\r\n                 console.log(\"ocurrio un error\")\r\n                 console.log(error)\r\n            }\r\n         }\r\n        setInterval(() => { \r\n            getTickets()\r\n            getUsers()\r\n            getInstitutions()\r\n        }, 300000);\r\n    },[])\r\n\r\n\r\n    const handleInputChange =  async (data) => {\r\n         setTicket({...ticket, \r\n                        institution: data.ticketInstitution, \r\n                        description: data.ticketDescription,\r\n                        team : {...ticket.team,\r\n                            _user: data.ticketLeader,\r\n                            role: 'Leader'\r\n                        },\r\n                        start_date: data.start_date,\r\n                        end_date: data.end_date,\r\n                        priority: data.ticketPriority\r\n\r\n                })\r\n    }\r\n    \r\n    // Crear nuevo Ticket\r\n    const addTicket = async (data) => {\r\n        setLoading(true);\r\n        let newTicket= {\r\n            institution: data.ticketInstitution._id, \r\n            description: data.ticketDescription,\r\n            team : {\r\n                _user: data.ticketLeader,\r\n                role: 'Leader',\r\n            },\r\n            start_date: data.start_date,\r\n            end_date: data.end_date,\r\n            priority: data.ticketPriority,\r\n            status: 'Sin Solucionar'\r\n        }\r\n            try {\r\n                const res = await axios.post('api/nuevo-ticket',newTicket)\r\n                setTicketsFilter([\r\n                ...ticketsFilter,\r\n                res.data\r\n                ])\r\n                setNotification({...notification, open: true,  message: \"Ticket Creado Correctamente\"})\r\n                emptyFields()\r\n                setTickets({...tickets, ticketsAll: tickets.ticketsAll+1})\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            setLoading(false);\r\n    }\r\n    // Elimina un Ticket\r\n    const deleteTicket = async data => {\r\n        const ticketsIds = []\r\n        data.map(ticket => ticketsIds.push(ticket._id))\r\n        const countTickets = ticketsIds.length;\r\n        const confirm = window.confirm(\"Estas Seguro de Eliminar El/Los Registro/s\")\r\n        try {\r\n            if(confirm){\r\n                await axios.post('api/ticket/delete/many', ticketsIds)\r\n                const arrayFiltrado = ticketsFilter.filter((ticket) => !ticketsIds.includes(ticket._id))\r\n                setTicketsFilter(arrayFiltrado)\r\n                setNotification({...notification, open: true,  message: \"Ticket/s Eliminado/s Correctamente\"})\r\n                setTickets({...tickets, ticketsAll: tickets.ticketsAll-1})\r\n            }     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const edition = row => {\r\n        setId(row._id)\r\n        setTicket({...ticket,\r\n            institution: row.institution.name,\r\n            description : row.description,\r\n            team : {\r\n                _user: row.team[0]._user._id,\r\n                nombre: row.team[0]._user.nombre,\r\n                role: 'Leader'\r\n            },\r\n            start_date: row.start_date,\r\n            end_date: row.end_date,\r\n            priority: row.priority,\r\n            status: row.status,        \r\n                \r\n        })\r\n        setEdit(true)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    // Actualizar Ticket\r\n    const editTicket =  async (data) => {\r\n        setLoading(true);\r\n        const ticketEdit= {\r\n                        institution: data.ticketInstitution._id,\r\n                        description: data.ticketDescription,\r\n                        team : {\r\n                            _user: data.ticketLeader,\r\n                            role: 'Leader',\r\n                        },\r\n                        start_date: data.start_date,\r\n                        end_date: data.end_date,\r\n                        priority: data.ticketPriority,\r\n                        status: data.status\r\n        }\r\n        try {\r\n            const res = await axios.put(`api/ticket/${id}`,ticketEdit)\r\n            const arrayEditado = ticketsFilter.map( item => (\r\n                item._id === id ? res.data : item\r\n            ))\r\n            setTicketsFilter(arrayEditado)\r\n            setNotification({...notification, open: true, message: \"Ticket Editado Correctamente\"})\r\n            emptyFields()\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        setLoading(false);\r\n    }\r\n    // Filtrar tickets Mediante las Tarjetas\r\n    const filterTickets = (filtro) => {\r\n        if (filtro === \"Todos\"){\r\n            setTicketsFilter(tickets.data)\r\n        } else if(filtro === \"Solucionado\") {\r\n            const filter =  tickets.data.filter( (ticket) => ticket.status === \"Solucionado\")\r\n            setTicketsFilter(filter)\r\n        }else if(filtro === \"Sin Solucionar\"){\r\n            const filter =  tickets.data.filter( (ticket) => ticket.status === \"Sin Solucionar\")\r\n            setTicketsFilter(filter)\r\n        }else if(filtro === \"Vencidos\"){\r\n            const filter =  tickets.data.filter( (ticket) => (ticket.active === false && ticket.status === 'Sin Solucionar'))\r\n            setTicketsFilter(filter)\r\n        }\r\n    }\r\n    // Cerrar formulario flotante\r\n    const closeForm = () => {\r\n        setOpenPopup(false)\r\n        setEdit(false)\r\n    }\r\n    // Devuelve el estado del Ticket a situacion inicial\r\n    const emptyFields = () =>{\r\n        closeForm()\r\n        setTicket({\r\n            institution: '',\r\n            description : '',\r\n            team : {\r\n                _user: '',\r\n                nombre: '',\r\n                role: 'Leader'\r\n            },\r\n            start_date: '',\r\n            end_date: '',\r\n            priority: '',\r\n            status:'Sin Solucionar',    \r\n        })\r\n        setId('')\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: '100%' }}>\r\n            <Grid container>\r\n                <Notification \r\n                    message = {notification.message}\r\n                    open = {notification.open}\r\n                    severity= {\"success\"}\r\n                    setNotification={setNotification}\r\n                />\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box>\r\n                        <SimpleCard\r\n                            typeTickets= \"Tickets Totales\"\r\n                            totalsTickets= {tickets.ticketsAll}\r\n                            color=\"#2196f3\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Todos\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box ml={{\"md\": 3}} mt={{xs:2, sm:2, md:0, lg:0}} >\r\n                        <SimpleCard\r\n                            typeTickets=\"Tickets Solucionados\"\r\n                            totalsTickets={tickets.ticketsSolved}\r\n                            color=\"#4caf50\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Solucionado\"   \r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box ml={{\"md\": 3}} mt={{xs:2, sm:2, md:0, lg:0}} >\r\n                        <SimpleCard\r\n                            typeTickets=\"Tickets Sin Solucionar\"\r\n                            totalsTickets={tickets.ticketsUnsolved}\r\n                            color=\"#ffff70\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Sin Solucionar\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box ml={{\"md\": 3}} mt={{xs:2, sm:2, md:0, lg:0}}>\r\n                        <SimpleCard\r\n                            typeTickets= \"Tickets Vencidos\"\r\n                            totalsTickets= {tickets.ticketsExpired}\r\n                            color=\"#ff1744\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Vencidos\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n            <Box mt={2}>\r\n                {roleUser === 'Admin' &&\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() =>  setOpenPopup(true) }>\r\n                        Nuevo Ticket\r\n                    </Button>\r\n                }\r\n            </Box>\r\n            <Box mt={2}>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    {loading && <CircularProgress />}\r\n                </Box>    \r\n                <MaterialTable\r\n                    columns={[\r\n                        { title: 'Id', field: '_id', hidden: true},\r\n                        { title: 'Institucion', field: 'institution[name]' },\r\n                        { title: 'Descripcion', field: 'description' },\r\n                        { title: \"Prioridad\", field: 'priority', lookup: {Alta: \"Alta\", Media: \"Media\", Baja: \"Baja\" } },\r\n                        { title: 'Encargado', field: 'team[0][_user][nombre]' },\r\n                        { title: 'Fecha de Inicio', field: 'start_date',  type: \"date\", dateSetting: { locale: \"es-AR\"}},\r\n                        { title: 'Vencimiento', field: 'end_date',  type: \"date\", dateSetting: { locale: \"es-AR\"}},\r\n                        {title: 'Estado', field: 'status', lookup: { \"Solucionado\": \"Solucionado\", \"Sin Solucionar\": \"Sin Solucionar\" },\r\n                        render: rowData => <Chip color={rowData.status === \"Solucionado\"? \"primary\": \"secondary\"} size=\"small\" label={rowData.status} />}\r\n                    ]}\r\n                    data={ticketsFilter}\r\n                    actions={[\r\n                        {\r\n                            icon: () => <VisibilityIcon />,\r\n                            tooltip: 'Ver',\r\n                            position: 'row',\r\n                            onClick: (event, rowData) => props.history.push('/tickets/'+rowData._id),\r\n                        },    \r\n                        {\r\n                          hidden: roleUser !== 'Admin',\r\n                          icon: 'edit',\r\n                          tooltip: 'Editar',\r\n                          position: 'row',\r\n                          onClick: (event, rowData) => edition(rowData),\r\n                        },\r\n                        {\r\n                          hidden: roleUser !== 'Admin',\r\n                          icon: () => <DeleteIcon />,\r\n                          position: 'toolbarOnSelect',\r\n                          tooltip: 'Borrar',\r\n                          onClick: (event, rowData) => deleteTicket(rowData),\r\n                        }\r\n                        \r\n                      ]}\r\n                    options={{\r\n                        actionsColumnIndex: -1,\r\n                        selection: true,\r\n                        pageSize: 10,\r\n                        filtering: true,\r\n                        exportButton: true\r\n                    }}\r\n                    title=\"Tickets\"\r\n                />\r\n            </Box>\r\n            <Popup\r\n                title= {edit ? \"Editar Ticket\" : \"Agregar Ticket\"}\r\n                openPopup={openPopup}\r\n                closeForm={closeForm}\r\n                loading={loading}               \r\n            >\r\n               <FormAdd \r\n                    setTicket={setTicket}\r\n                    ticket={ticket}\r\n                    users={users}\r\n                    institutions={institutions}\r\n                    addTicket={addTicket}\r\n                    handleInputChange={handleInputChange}\r\n                    editTicket= {editTicket}\r\n                    edit= {edit}\r\n                    setOpenPopup={setOpenPopup}\r\n                    emptyFields={emptyFields}  \r\n                />\r\n            </Popup>\r\n\r\n        </div>\r\n    )\r\n}\r\n    const Tickets = (props) => {\r\n        return (\r\n            <div>\r\n                <Dashboard section = {\"Tickets\"}>\r\n                    <Tickets2 history={props.history}>\r\n\r\n                    </Tickets2>\r\n                </Dashboard>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Tickets\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {Button, Icon} from '@material-ui/core';\r\nimport Notification from './Notification';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  chatSection: {\r\n    width: '100%',\r\n    height: 'auto'\r\n  },\r\n  headBG: {\r\n      backgroundColor: '#e0e0e0'\r\n  },\r\n  borderRight500: {\r\n      borderRight: '1px solid #e0e0e0'\r\n  },\r\n  messageArea: {\r\n    height: '70vh',\r\n    overflowY: 'auto'\r\n  }\r\n});\r\n\r\nconst Chat = (props) => {\r\n  const {ticket, userId, comments} = props\r\n  const classes = useStyles();\r\n  const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n  const [notification, setNotification] = React.useState({open: false, message: '', severity: ''});\r\n  const [commentsTicket,setCommentsTicket] = React.useState(comments)\r\n  \r\n  React.useEffect(() => {\r\n    console.log(commentsTicket)\r\n  },[commentsTicket])\r\n\r\n  const [comment,setComent] = React.useState({\r\n    ticketId : ticket._id,\r\n    userId: userId,\r\n    comment : ''\r\n  })\r\n  const handleKeypress = e => {\r\n    if (e.key === 'Enter') {\r\n      addComment();\r\n    }\r\n  };\r\n\r\n  const addComment = async () => {\r\n    try {\r\n      const res = await axios.post('api/ticket/comment', comment)\r\n      setCommentsTicket(res.data.comments)\r\n      setComent({...comment, comment: ''})\r\n      setNotification({...notification, open: true,  message: \"Mensaje Enviado Correctamente\", severity: \"success\"})\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  const deleteComment = async (commentId) =>{\r\n    const ticketId = ticket._id\r\n    try {\r\n      await axios.delete(`api/ticket/comment/deleteComment?ticketId=${ticketId}&commentId=${commentId}`) \r\n      const arrayFiltrado = commentsTicket.filter(comment => comment._id !== commentId)\r\n      setCommentsTicket(arrayFiltrado)\r\n      setNotification({...notification, open: true,  message: \"Mensaje Eliminado Correctamente\", severity: \"error\"})\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <Grid container component={Paper} className={classes.chatSection}>\r\n          <Notification \r\n                message = {notification.message}\r\n                open = {notification.open}\r\n                severity= {notification.severity}\r\n                setNotification={setNotification}\r\n            />\r\n            <Grid item xs={12} className={classes.borderRight500}>\r\n                <Grid item xs={12} style={{padding: '10px'}}>\r\n                    <TextField id=\"outlined-basic-email\"\r\n                      label=\"Mensaje\"\r\n                      variant=\"outlined\"\r\n                      value= {comment.comment}\r\n                      onKeyPress= {handleKeypress}\r\n                      onChange={e => setComent({...comment, comment: e.target.value})} \r\n                      fullWidth />\r\n                </Grid>\r\n                <Box ml={1}>\r\n                    <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            endIcon={<Icon>send</Icon>}\r\n                            onClick={() => addComment()}\r\n                        >\r\n                            Enviar\r\n                    </Button>\r\n                </Box>\r\n                {\r\n                    commentsTicket.map( (comment) =>(\r\n                      <Box mt={2}>\r\n                       <Divider />\r\n                        <List>\r\n                            <ListItem button key={comment._user.nombre}>\r\n                                <ListItemIcon>\r\n                                  <Avatar alt=\"Remy Sharp\" src=\"https://material-ui.com/static/images/avatar/1.jpg\" />\r\n                                </ListItemIcon>\r\n                                <ListItemText \r\n                                    primary={comment._user.nombre}\r\n                                    secondary={comment.comment}  \r\n                                >       \r\n                                </ListItemText>\r\n                                {usuarioId === comment._user._id ?\r\n                                  <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"start\" aria-label=\"delete\" onClick={() => deleteComment(comment._id)}>\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </ListItemSecondaryAction>\r\n                                  :''  \r\n                                }\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                      </Box>  \r\n                    ))                    \r\n                  }\r\n          </Grid>  \r\n        </Grid>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Chat;","import React, {Fragment} from 'react'\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\nconst MapInstitution = (props) => {\r\n    const {lat, lng} = props;\r\n\r\n    return (\r\n        <Fragment>\r\n            <Map \r\n              google={props.google}\r\n              zoom={16}\r\n              initialCenter={{\r\n                lat: lat,\r\n                lng: lng\r\n              }}\r\n              center={{\r\n                lat: lat,\r\n                lng: lng\r\n              }}\r\n            >\r\n              <Marker \r\n                position={{\r\n                  lat: lat,\r\n                  lng: lng\r\n                }} \r\n              />    \r\n            </Map>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: ('AIzaSyDAwZoCkxg0z2pKbKsjZhBM_NX0S8H44vg'),\r\n    language:'es-ES'\r\n  })(MapInstitution)","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle, \r\n    FormControl, TextField, Button} \r\nfrom '@material-ui/core';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 400,\r\n    },\r\n  }));\r\n\r\n\r\nconst DialogEndTicket = (props) => {\r\n    const {notification, setNotification, ticket, setTicket, open, setOpen} = props;\r\n    const classes = useStyles();\r\n    const { errors, handleSubmit, control } = useForm();\r\n\r\n    const ticketSolve = async (data) => {\r\n        const solution = {\r\n            ticketId: ticket._id,\r\n            solution: data.ticketSolution\r\n\r\n        }\r\n        try {\r\n            await axios.post('api/ticket/solution/change', solution)\r\n            handleClose()\r\n            setNotification({ ...notification, open: true, message: \"Situacion del Ticket Informada\", severity: \"success\" })\r\n            setTicket({ ...ticket, solution: solution.solution })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    };\r\n    return (\r\n        <div>\r\n            <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\r\n                <DialogTitle>Finalizar Ticket</DialogTitle>\r\n                <DialogContent>\r\n                    <form onSubmit={handleSubmit(ticketSolve)} className={classes.root} className={classes.container}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <Controller\r\n                                rules={{\r\n                                    required: {\r\n                                        value: true,\r\n                                        message: 'Campo requerido'\r\n                                    },\r\n                                    minLength: {\r\n                                        value: 6,\r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n\r\n                                }}\r\n                                control={control}\r\n                                name=\"ticketSolution\"\r\n                                id=\"ticketSolution\"\r\n                                label=\"Que se Hizo\"\r\n                                variant=\"outlined\"\r\n                                defaultValue={''}\r\n\r\n                                as={\r\n                                    <TextField\r\n                                        error={errors.ticketSolution ? true : false}\r\n                                        helperText={errors.ticketSolution ? errors.ticketSolution.message : null}\r\n\r\n                                    />\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button onClick={handleSubmit(ticketSolve)} color=\"primary\">\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogEndTicket \r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport {Button, Chip,Typography, Box, Grid} from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport MapInstitution from '../../GoogleMaps/MapInstitution';\r\nimport DialogEndTicket from './DialogEndTicket'\r\nconst Detalles = (props) => {\r\n    const {institution, institutionAddress, usuarioId, notification, setNotification, responsible, ticket, setTicket} = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Box>\r\n                    <DialogEndTicket\r\n                        open={open}\r\n                        setOpen={setOpen} \r\n                        notification={notification}\r\n                        setNotification={setNotification}\r\n                        ticket={ticket}\r\n                        setTicket={setTicket}\r\n                        usuarioId={usuarioId}\r\n                    />        \r\n                </Box>\r\n                <Grid item xs={12}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        {responsible.map(item => (item.role === 'Leader' && item._user._id === usuarioId && ticket.solution === '') ?\r\n                            <Button onClick={handleClickOpen}>Cambiar Estado Ticket</Button>\r\n                            : '')}\r\n                        {(ticket.solution !== '' && ticket.status === 'Sin Solucionar') &&\r\n                            <Chip label=\"Ticket Pendiente de Autorizacion\" variant=\"outlined\" color=\"primary\" />\r\n                        }\r\n                        {ticket.status === 'Solucionado' &&\r\n                            <Chip label=\"Ticket Resuelto\" variant=\"outlined\" icon={<CheckIcon />} color=\"default\" style={{ backgroundColor: '#8bc34a' }} />\r\n                        }\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={6} >\r\n                    <Box>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Institucion\r\n                    </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            {institution.name}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Descripcion\r\n                    </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            {ticket.description}\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <Box>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Direccion:\r\n                    </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            {institutionAddress.name}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Fechas\r\n                    </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            Fecha Inicio: {moment(ticket.start_date, 'YYYY-MM-DD').format('DD-MM-YYYY')}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            Fecha Vencimiento: {moment(ticket.end_date, 'YYYY-MM-DD').format('DD-MM-YYYY')}\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item sm={12} style={{ position: 'relative', height: '40vh' }}>\r\n                    <MapInstitution\r\n                        lat={institutionAddress.lat}\r\n                        lng={institutionAddress.lng}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detalles\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, TextField} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 400,\r\n    },\r\n  }));\r\n\r\nconst DialogEquipo = (props) => {\r\n    const {notification, setNotification, ticket, open, setOpen, userTeam, team, setTeam, setResponsible} = props;\r\n    const classes = useStyles();\r\n\r\n    const addMembersTeam = async () => {\r\n        const membersTeam = {\r\n            ticketId: ticket._id,\r\n            members: team\r\n        }\r\n        try {\r\n            const res = await axios.post('api/ticket/team/addMembersTeam', membersTeam)\r\n            handleClose()\r\n            setResponsible(res.data.team)\r\n            setNotification({ ...notification, open: true, message: \"Miembro/s Agregados Correctamente\", severity: \"success\" })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleInputChange = (event, value)  =>{\r\n        setTeam(value);\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\r\n                <DialogTitle>Agregar Integrantes</DialogTitle>\r\n                <DialogContent>\r\n                    <form className={classes.container}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                id=\"tags-standard\"\r\n                                options={userTeam}\r\n                                getOptionLabel={(option) => option.nombre}\r\n                                onChange={handleInputChange}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        variant=\"standard\"\r\n                                        label=\"Integrantes\"\r\n                                        placeholder=\"Usuarios\"\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </FormControl>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button onClick={addMembersTeam} color=\"primary\">\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogEquipo\r\n","import React, {Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport {Button, Typography, Box, Grid, List, ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, IconButton  } from '@material-ui/core'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DialogEquipo from './DialogEquipo';\r\n\r\nconst Equipo = (props) => {\r\n    const {team, setTeam, setResponsible, usuarioId, notification, setNotification, responsible, ticket, userTeam} = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const deleteMembersTeam = async (userId) => {\r\n        const ticketId = ticket._id\r\n        try {\r\n            const res = await axios.delete(`api/ticket/team/deleteMembersTeam?ticketId=${ticketId}&userId=${userId}`)\r\n            setResponsible(res.data.team)\r\n            setNotification({ ...notification, open: true, message: \"Miembro Eliminado Correctamente\", severity: \"error\" })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <DialogEquipo\r\n                    open={open}\r\n                    setOpen={setOpen} \r\n                    notification={notification}\r\n                    setNotification={setNotification}\r\n                    ticket={ticket}\r\n                    setResponsible={setResponsible}\r\n                    team={team}\r\n                    setTeam={setTeam}\r\n                    userTeam={userTeam}\r\n                />\r\n                <Grid md={12}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        {responsible.map(item => (item.role === 'Leader' && item._user._id === usuarioId && ticket.solution === '') ?\r\n                            <Button onClick={handleClickOpen}>Agregar al Equipo</Button>\r\n                            : '')}\r\n                        \r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={-2}>\r\n                <Grid md={6}>\r\n                    <Box>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Encargado:\r\n                    </Typography>\r\n                        <List dense>\r\n                            {responsible.map(item =>\r\n                                item.role === 'Leader' ?\r\n                                    <Fragment>\r\n                                        <ListItem>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar>\r\n                                                    <PersonIcon />\r\n                                                </Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText\r\n                                                primary={item._user.nombre}\r\n                                                secondary={null}\r\n                                            />\r\n                                        </ListItem>\r\n                                    </Fragment>\r\n                                    : ''\r\n                            )}\r\n                        </List>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid md={6}>\r\n                    <Box>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Equipo de Soporte:\r\n                    </Typography>\r\n                        <List dense>\r\n                            {responsible.map(item =>\r\n                                item.role === 'Support' ?\r\n                                    <Fragment>\r\n                                        <ListItem>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar>\r\n                                                    <PersonIcon />\r\n                                                </Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText\r\n                                                primary={item._user.nombre}\r\n                                                secondary={null}\r\n                                            />\r\n                                            {ticket.team[0]._user._id === usuarioId &&\r\n                                                <ListItemSecondaryAction>\r\n                                                    <IconButton edge=\"start\" aria-label=\"delete\" onClick={() => deleteMembersTeam(item._user._id)}>\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </ListItemSecondaryAction>\r\n                                            }\r\n                                        </ListItem>\r\n                                    </Fragment>\r\n                                    : ''\r\n                            )}\r\n                        </List>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Equipo\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Tabs, Tab, Typography, Box} from '@material-ui/core';\r\nimport Chat from './Chat';\r\nimport Notification from './Notification';\r\nimport Detalles from './Tabs/Detalles';\r\nimport Equipo from './Tabs/Equipo';\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 400,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto(props) {\r\n  const {ticket, setTicket,  responsible, setResponsible, usuarioId, comments, users, institution, institutionAddress} = props\r\n  const classes = useStyles();\r\n  const [notification, setNotification] = React.useState({open: false, message: '', severity: ''});\r\n  const [value, setValue] = React.useState(0);\r\n  const [team, setTeam] = React.useState([])\r\n  const [userTeam, setUserTeam] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    const getUsersTeam = () => {\r\n      const usersRepeat = []\r\n      responsible.map(user => usersRepeat.push(user._user._id) )\r\n      const arrayFiltrado = users.filter((user) => !usersRepeat.includes(user._id))\r\n      setUserTeam(arrayFiltrado)\r\n    }\r\n    getUsersTeam()\r\n  },[responsible])\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Notification \r\n                message = {notification.message}\r\n                open = {notification.open}\r\n                severity= {notification.severity}\r\n                setNotification={setNotification}\r\n      />\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          <Tab label=\"Detalles\" {...a11yProps(0)} />\r\n          <Tab label=\"Equipo\" {...a11yProps(1)} />\r\n          <Tab label=\"Mensajes\" {...a11yProps(2)} />\r\n          {/* <Tab label=\"Item Four\" {...a11yProps(3)} />\r\n          <Tab label=\"Item Five\" {...a11yProps(4)} />\r\n          <Tab label=\"Item Six\" {...a11yProps(5)} />\r\n          <Tab label=\"Item Seven\" {...a11yProps(6)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n          <Detalles\r\n            institutionAddress={institutionAddress}\r\n            institution={institution}\r\n            responsible={responsible}\r\n            usuarioId={usuarioId}\r\n            ticket={ticket}\r\n            setTicket={setTicket}\r\n            notification={notification}\r\n            setNotification={setNotification}\r\n\r\n          />\r\n\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Equipo\r\n          userTeam={userTeam}\r\n          team={team}\r\n          setTeam={setTeam}\r\n          responsible={responsible}\r\n          setResponsible={setResponsible}\r\n          usuarioId={usuarioId}\r\n          ticket={ticket}\r\n          setTicket={setTicket}\r\n          notification={notification}\r\n          setNotification={setNotification}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Chat\r\n          ticket = {ticket}\r\n          userId = {usuarioId}\r\n          comments = {comments}\r\n        >\r\n              \r\n        </Chat>\r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={3}>\r\n        Item Four\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        Item Five\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        Item Six\r\n      </TabPanel>\r\n      <TabPanel value={value} index={6}>\r\n        Item Seven\r\n      </TabPanel> */} \r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TabsCentered from '../ui/TabsCentered';\r\nimport {useParams} from 'react-router-dom'\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n\r\nconst Detalles2 = () => {\r\n    const classes = useStyles();\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const [users, setUsers] = React.useState([])\r\n    const [ticketInfo, setTicketInfo] = React.useState({})\r\n    const [responsible, setResponsible] = React.useState([])\r\n    const [institution, setInsitutiton] = React.useState([])\r\n    const [institutionAddress, setInstitutionAddress] = React.useState([])\r\n    const [comments, setComments] = React.useState([])\r\n    const {id} = useParams()\r\n    const [ticketId, setTicketId] = React.useState(id)\r\n    React.useEffect(() => {\r\n      const ticketData = async (id) =>{\r\n        try {\r\n          const res = await axios.get(`api/ticket/${id}`)\r\n          const data = res.data\r\n          setTicketInfo(data)\r\n          setResponsible(data.team)\r\n          setComments(data.comments)\r\n          setInsitutiton(data.institution)\r\n          setInstitutionAddress(data.institution.address)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n      const getUsers = async () => {\r\n        try {\r\n             const res = await axios.get('users/users')\r\n             const data = res.data\r\n             setUsers(data)\r\n             console.log(users)\r\n        } catch (error) {\r\n             console.log(\"ocurrio un error\")\r\n             console.log(error)\r\n        }\r\n      }\r\n      ticketData(ticketId)\r\n      getUsers()\r\n\r\n    },[])\r\n    return (\r\n      <React.Fragment>\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <TabsCentered\r\n              ticket = {ticketInfo}\r\n              setTicket = {setTicketInfo}\r\n              responsible = {responsible}\r\n              setResponsible = {setResponsible}\r\n              usuarioId = {usuarioId}\r\n              comments = {comments}\r\n              users = {users}\r\n              institution={institution}\r\n              institutionAddress={institutionAddress}\r\n            >\r\n          </TabsCentered>\r\n        </CardContent>\r\n        <CardActions>\r\n         \r\n        </CardActions>\r\n      </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  const Detalles = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Detalles del Ticket\"}>\r\n                <Detalles2>\r\n\r\n                </Detalles2>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Detalles\r\n","import React, {Fragment, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport listPlugin from '@fullcalendar/list';\r\nimport esLocale from '@fullcalendar/core/locales/es';\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\n\r\nconst Calendar2 = () => {\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const [tickets, setTickets] = useState([])\r\n    const [events, setEvents] = useState([])\r\n    React.useEffect( () => {\r\n        const getTickets = async () =>{  \r\n           try {\r\n                const res = await axios.get(`api/ticket?usuarioId=${usuarioId}`)\r\n                setTickets(res.data.data)\r\n           } catch (error) {\r\n               console.log(\"ocurrio un error\")\r\n               console.log(error)\r\n           }\r\n        }\r\n        getTickets()\r\n    }, [])\r\n\r\n    React.useEffect( () =>  {\r\n        tickets.map((ticket) => (\r\n            (ticket.status === 'Sin Solucionar') &&\r\n            setEvents(prevState => \r\n                [...prevState, { title: ticket.institution.name , start: ticket.start_date, end: ticket.end_date, url: `/tickets/${ticket._id}`, backgroundColor : ticket.active ? '#165CFF' : '#FF2416', borderColor: ticket.active === false && '#FF2416' }])\r\n        ))\r\n    },[tickets])\r\n    return (\r\n        <Fragment>\r\n            <FullCalendar\r\n                plugins={[ dayGridPlugin, listPlugin, dayGridPlugin   ]}\r\n                headerToolbar= {{\r\n                    center: 'dayGridWeek dayGridMonth listWeek'\r\n                }}\r\n                initialView=\"dayGridMonth\"\r\n                locale={esLocale}\r\n                events={events}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Calendar = () => {\r\n    return (\r\n        <Dashboard section={\"Calendario de Tareas\"}>\r\n            <Calendar2>\r\n\r\n            </Calendar2>\r\n        </Dashboard>\r\n    )\r\n\r\n}\r\n\r\nexport default Calendar\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport Dashboard from '../dashboard/Dashboard'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Notification from '../ui/Notification';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n  \r\nconst Pendientess = () => {\r\n    const classes = useStyles();\r\n    const [notification, setNotification] = React.useState({open: false, message: '', severity: ''});\r\n    const [tickets, setTickets] = React.useState([])\r\n    const url =  process.env.REACT_APP_URL;\r\n\r\n    React.useEffect( () => {\r\n        const getTickets = async () =>{  \r\n           try {\r\n                const res = await axios.get('api/ticket/solution/pending')\r\n                const data = res.data\r\n                setTickets(data.data)\r\n           } catch (error) {\r\n               console.log(\"ocurrio un error\")\r\n               console.log(error)\r\n           }\r\n        }\r\n        getTickets()\r\n    },[])\r\n\r\n    const ticketAprobed = async (id) => {\r\n        const ticketId = {\r\n            ticketId : id\r\n        }\r\n        try {\r\n            await axios.post('api/ticket/solution/aprobed',ticketId)\r\n            setNotification({...notification, open: true,  message: \"Ticket Marcado como Solucionado\", severity: \"success\"})\r\n            const arrayTickets = tickets.filter(ticket => ticket._id !== id)\r\n            setTickets(arrayTickets)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Notification \r\n                message = {notification.message}\r\n                open = {notification.open}\r\n                severity= {notification.severity}\r\n                setNotification={setNotification}\r\n            />\r\n            <Grid container spacing={1}>\r\n                {\r\n                    tickets.map(ticket => \r\n                        <Grid item md={4} xs={12} sm={6}>\r\n                            <Card className={classes.root}>\r\n                                <CardActionArea>\r\n                                    <CardMedia\r\n                                    className={classes.media}\r\n                                    image={`${url}/img/ticket.jpg`}\r\n                                    title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        {ticket.name}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {ticket.solution}\r\n                                    </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" color=\"primary\" href={`/tickets/${ticket._id}`}>\r\n                                        Ver Ticket\r\n                                    </Button>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => ticketAprobed(ticket._id)}>\r\n                                        Solucionado\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>  \r\n                    \r\n                    )\r\n                }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Pendientes = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Tickets Pendientes de Aprobacion\"}>\r\n                <Pendientess>\r\n\r\n                </Pendientess>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pendientes\r\n","import React, {useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid,Button, Box, FormControl, FormHelperText, InputLabel, MenuItem , Select , TextField, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '25ch',\r\n    },\r\n  }));\r\n\r\nconst FormAddEdit = (props) => {\r\n    const {user, addUser,editUser, edit, emptyFields} = props;\r\n    const classes = useStyles();\r\n    const {errors, handleSubmit, control, watch} = useForm();\r\n    \r\n    const password = watch(\"userPassword\");\r\n    const handleChangeCheckBox = (event) => {\r\n        setCheckBox(event.target.checked);\r\n      };\r\n    const [checkBox, setCheckBox] = useState(() => {\r\n    const initialState = !edit;\r\n    return initialState;\r\n    });\r\n    return (\r\n        <div>\r\n            <form onSubmit={edit ? handleSubmit(editUser) : handleSubmit(addUser)} className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item sm={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                    minLength: {\r\n                                        value: 6, \r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userName\" \r\n                            id=\"userName\"\r\n                            label=\"Nombre\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={user.name || ''}\r\n                            \r\n                            as={\r\n                            <TextField\r\n                                error={ errors.userName ? true : false }\r\n                                helperText={errors.userName ? errors.userName.message : null} \r\n                                \r\n                            />\r\n                        }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                    minLength: {\r\n                                        value: 6, \r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userLastName\" \r\n                            id=\"userLastName\"\r\n                            label=\"Apellido\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={user.lastName || ''}\r\n                            \r\n                            as={\r\n                            <TextField\r\n                                error={ errors.userLastName ? true : false }\r\n                                helperText={errors.userLastName ? errors.userLastName.message : null} \r\n                                \r\n                            />\r\n                        }\r\n                        />\r\n                        <Box>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel id=\"labelPrioridad\">Rol</InputLabel>\r\n                                <Controller\r\n                                name=\"userRole\"\r\n                                control={control}\r\n                                rules={{required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                    defaultValue={user.role || ''}\r\n                                as={\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        label=\"Prioridad\"\r\n                                        id=\"ticketPriority\"                                       \r\n                                        value={user.role}\r\n                                        error={ errors.userRole ? true : false }   \r\n                                        >\r\n                                        <MenuItem value={'User'}>Usuario</MenuItem>\r\n                                        <MenuItem value={'Admin'}>Admin</MenuItem>\r\n                                    </Select>\r\n                                }\r\n                                />\r\n                                 <FormHelperText\r\n                                    error={ errors.userRole ? true : false }\r\n                                >\r\n                                    {errors.userRole ? errors.userRole.message : null} \r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                    <Grid sm={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                        pattern: {\r\n                                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                            message: \"Email con Formato Invalido\",\r\n                                          },\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userEmail\" \r\n                            type=\"email\"\r\n                            id=\"userEmail\"\r\n                            label=\"Email\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={user.email || ''}\r\n                            \r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.userEmail ? true : false }\r\n                                    helperText={errors.userEmail ? errors.userEmail.message : null} \r\n                                    \r\n                                />\r\n                                }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    required:  {\r\n                                        value: checkBox? true: false, \r\n                                        message: 'Campo requerido'\r\n                                        },\r\n                                    minLength: {\r\n                                        value: 6,\r\n                                        message: \"La Contraseña Tiene que Tener al Menos 6 Caracteres\"\r\n                                    } \r\n                            }}\r\n                            control={control}\r\n                            name=\"userPassword\" \r\n                            type=\"password\"\r\n                            id=\"userPassword\"\r\n                            label=\"Contraseña\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={''}\r\n                            disabled={!checkBox}\r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.userPassword ? true : false }\r\n                                    helperText={errors.userPassword ? errors.userPassword.message : null} \r\n                                    \r\n                                />\r\n                                }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: checkBox? true: false, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                        validate: value => (value === password || !checkBox) || \"Las contraseñas no Coinciden\"\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userPasswordRepeat\" \r\n                            type=\"password\"\r\n                            id=\"userPasswordRepeat\"\r\n                            label=\"Repetir Contraseña\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={''}\r\n                            disabled={!checkBox}\r\n                            \r\n                            as={\r\n                                    <TextField\r\n                                        error={ errors.userPasswordRepeat ? true : false }\r\n                                        helperText={errors.userPasswordRepeat ? errors.userPasswordRepeat.message : null} \r\n                                        \r\n                                    />\r\n                                }\r\n                        />               \r\n                    </Grid>\r\n                    <Grid sm={12}>\r\n                        {edit &&\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={checkBox} onChange={handleChangeCheckBox} color=\"primary\" />}\r\n                                label=\"Desea Cambiar la Contraseña\"\r\n                            />\r\n                        }\r\n                    </Grid>               \r\n                    <Grid item sm={12}>\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\" m={1} p={1}>\r\n                            <Button color=\"primary\" type=\"button\" onClick={() =>  emptyFields()}>\r\n                                Cancelar\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Guardar\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAddEdit\r\n\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { Box, Button, CircularProgress, Grid} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MaterialTable from 'material-table'\r\nimport FormAddEdit from './Forms/Add-Edit'\r\nimport Popup from '../../ui/Popup'\r\nimport Notification from '../../ui/Notification'\r\nimport Dashboard from '../../dashboard/Dashboard'\r\n\r\nconst Users2 = () => {\r\n    const roleUser = useSelector(store => store.usuario.usuario.data.role)\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [notification, setNotification] = React.useState({open: false, message: ''});\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        lastName: '',\r\n        role: '',\r\n        email: '',\r\n    });\r\n    const [users, setUsers] = useState([])\r\n    const [edit, setEdit] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () =>{\r\n            setLoading(true)\r\n           const res =  await axios.get('users/users')\r\n           setUsers(res.data)\r\n        }\r\n        getUsers();\r\n        setLoading(false)\r\n    },[])\r\n\r\n    const addUser = async (data) => {\r\n        setLoading(true)\r\n        const newUser = {\r\n            name: data.userName,\r\n            lastName: data.userLastName,\r\n            email: data.userEmail,\r\n            password: data.userPassword,\r\n            role: data.userRole\r\n        }\r\n        try {\r\n            const res = await axios.post('users/users', newUser)\r\n            setUsers([\r\n                ...users,\r\n                res.data\r\n            ])\r\n            setNotification({...notification, open: true,  message: \"Usuario Creado Correctamente\"})\r\n            emptyFields()\r\n            setLoading(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const edition = (row) => {\r\n        setId(row._id)\r\n        setUser({\r\n            name: row.nombre,\r\n            lastName: row.lastName,\r\n            email: row.email,\r\n            role: row.role\r\n        })\r\n        setEdit(true)\r\n        setOpenPopup(true)\r\n        console.log(user)\r\n    }\r\n\r\n    // Actualizar Usuario\r\n    const editUser =  async (data) => {\r\n        setLoading(true)\r\n        const userEdit = {\r\n            name: data.userName,\r\n            lastName: data.userLastName,\r\n            email: data.userEmail,\r\n            password: data.userPassword,\r\n            role: data.userRole\r\n        }\r\n        try {\r\n            const res = await axios.put(`users/users/${id}`,userEdit)\r\n            const arrayEditado = users.map( user => (\r\n                user._id === id ? res.data : user\r\n            ))\r\n            console.log(res.data)\r\n            setUsers(arrayEditado)\r\n            setNotification({...notification, open: true, message: \"Usuario Editado Correctamente\"})\r\n            emptyFields()\r\n            setLoading(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const deleteUser = async data => {\r\n        const usersIds = []\r\n        data.map(user => usersIds.push(user._id))\r\n        const confirm = window.confirm(\"Estas Seguro de Eliminar El/Los Registro/s\")\r\n        try {\r\n            if(confirm){\r\n                await axios.post('users/users/delete/many', usersIds)\r\n                const arrayFiltrado = users.filter((user) => !usersIds.includes(user._id))\r\n                setUsers(arrayFiltrado)\r\n                setNotification({...notification, open: true,  message: \"Usuario/s Eliminado/s Correctamente\"})\r\n            }     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Cerrar formulario flotante\r\n    const closeForm = () => {\r\n        setOpenPopup(false)\r\n        setEdit(false)\r\n    }\r\n    // Devuelve el estado del Ticket a situacion inicial\r\n    const emptyFields = () =>{\r\n        closeForm()\r\n        setUser({\r\n            name: '',\r\n            lastName: '',\r\n            role: '',\r\n            email: ''\r\n        })\r\n        setId('')\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Grid container spacing={1}>\r\n                <Grid item sm={12}> \r\n                    <Box>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() =>  setOpenPopup(true)}>\r\n                            Nuevo Usuario\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                    <Box mt={2}>\r\n                        <Box display=\"flex\" justifyContent=\"center\">\r\n                            {loading && <CircularProgress />}\r\n                        </Box>\r\n                        <MaterialTable\r\n                            columns={[\r\n                                { title: 'Id', field: '_id', hidden: true},\r\n                                { title: 'Nombre', field: 'nombre' },\r\n                                { title: 'Apellido', field: 'lastName' },\r\n                                { title: \"role\", field: 'role'},\r\n                                { title: 'email', field: 'email' },\r\n                            ]}\r\n                            data={users}\r\n                            actions={[\r\n                                {\r\n                                  hidden: roleUser !== 'Admin',\r\n                                    icon: 'edit',\r\n                                    tooltip: 'Editar',\r\n                                    position: 'row',\r\n                                    onClick: (event, rowData) => edition(rowData),\r\n                                },\r\n                                {\r\n                                    hidden: roleUser !== 'Admin',\r\n                                    icon: () => <DeleteIcon />,\r\n                                    position: 'toolbarOnSelect',\r\n                                    tooltip: 'Borrar',\r\n                                    onClick: (event, rowData) => deleteUser(rowData),\r\n                                }\r\n                              ]}\r\n                            options={{\r\n                                actionsColumnIndex: -1,\r\n                                selection: true,\r\n                                pageSize: 10\r\n                            }}\r\n                            title=\"Usuarios\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Notification \r\n                    message = {notification.message}\r\n                    open = {notification.open}\r\n                    severity= {\"success\"}\r\n                    setNotification={setNotification}\r\n            />\r\n            <Popup\r\n               openPopup={openPopup}  \r\n               title= {edit ? \"Editar Usuario\" : \"Agregar Usuario\"} \r\n               closeForm={closeForm}  \r\n               loading={loading}         \r\n            >\r\n               <FormAddEdit\r\n                edit={edit}\r\n                user={user}\r\n                addUser = {addUser}\r\n                editUser = { editUser} \r\n                emptyFields={emptyFields}  \r\n                />\r\n            </Popup>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Users = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Usuarios\"}>\r\n                <Users2>\r\n\r\n                </Users2>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Users\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport GooglePlacesAutocomplete,{ geocodeByLatLng, geocodeByAddress, getLatLng} from 'react-google-places-autocomplete';\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\n\r\n\r\nconst Maps = (props) => {\r\n    const {setDataAddress, institution, edit} = props;\r\n    const [address, setAddress] = useState(null);\r\n    const [ showingInfoWindow, setShowingInfoWindow ] = useState(false);\r\n    const [activeMarker, setActiveMarker] = useState({});\r\n    const [selectedPlace, setSelectedPlace] = useState({});\r\n    const [mapCenter, setMapCenter] = useState({ lat: -26.185164, lng: -58.174386});\r\n\r\n    useEffect(() =>{\r\n      if (edit) {\r\n        let placeHolder = document.getElementsByClassName(\"css-1wa3eu0-placeholder\");\r\n        if(placeHolder.length > 0){\r\n          placeHolder[0].innerHTML = institution.address.name;\r\n        }\r\n        setMapCenter({lat: institution.address.lat, lng: institution.address.lng})\r\n      }\r\n    },[])\r\n\r\n    const containerStyle = {\r\n      marginTop : '10px',\r\n      // marginLeft: '-50px',\r\n      // position: 'absolute ',  \r\n      // width: '100%',\r\n      // height: '50%'\r\n    }\r\n    \r\n\r\n    const handleChange = async dire => {\r\n      setAddress(dire.label)\r\n      try {\r\n        const res = await geocodeByAddress(dire.label)\r\n        const results = await getLatLng(res[0])\r\n        const addressParse = getAddressObject(res[0].address_components)\r\n        const label = res[0].formatted_address;\r\n        setDataAddress({name: label, locality: addressParse.locality, department:addressParse.departament, lat: results.lat, lng:results.lng});\r\n        setMapCenter(results)\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    };\r\n    const geocodeLatLng = async (lat, lng) => {\r\n       try {\r\n        const res = await geocodeByLatLng({ lat: lat, lng: lng });\r\n        const addressParse = getAddressObject(res[0].address_components)\r\n        const label = res[0].formatted_address;\r\n        console.log(addressParse)\r\n        setAddress(label)\r\n        setDataAddress({name: label, locality: addressParse.locality, department:addressParse.departament, lat: lat, lng:lng});\r\n        \r\n        let placeHolder = document.getElementsByClassName(\"css-1wa3eu0-placeholder\");\r\n        if(placeHolder.length > 0){\r\n          placeHolder[0].innerHTML = label;\r\n        }\r\n        let name = document.getElementsByClassName(\"css-1uccc91-singleValue\");\r\n        if(name.length > 0){\r\n          name[0].innerHTML = label;\r\n        }\r\n       \r\n       } catch (error) {\r\n         console.log(error);\r\n       }\r\n    };\r\n\r\n    const getAddressObject = (address_components) =>{\r\n      const ShouldBeComponent = {\r\n        home: [\"street_number\"],\r\n        postal_code: [\"postal_code\"],\r\n        street: [\"street_address\", \"route\"],\r\n        province: [\r\n          \"administrative_area_level_1\",\r\n          \"administrative_area_level_3\",\r\n          \"administrative_area_level_4\",\r\n          \"administrative_area_level_5\"\r\n        ],\r\n        locality: [\r\n          \"locality\",\r\n          \"sublocality\",\r\n          \"sublocality_level_1\",\r\n          \"sublocality_level_2\",\r\n          \"sublocality_level_3\",\r\n          \"sublocality_level_4\"\r\n        ],\r\n        departament:[\r\n          \"administrative_area_level_2\",\r\n        ],\r\n        country: [\"country\"]\r\n      };\r\n\r\n      const address = {\r\n        home: \"\",\r\n        postal_code: \"\",\r\n        street: \"\",\r\n        province: \"\",\r\n        locality: \"\",\r\n        departament: \"\",\r\n        country: \"\"\r\n      };\r\n      address_components.forEach(component => {\r\n        for (var shouldBe in ShouldBeComponent) {\r\n          if (ShouldBeComponent[shouldBe].indexOf(component.types[0]) !== -1) {\r\n            if (shouldBe === \"country\") {\r\n              address[shouldBe] = component.short_name;\r\n            } else {\r\n              address[shouldBe] = component.long_name;\r\n            }\r\n          }\r\n        }\r\n      });\r\n      return address;\r\n    };\r\n  \r\n    \r\n    const onMarkerClick = (t, map, coord) => {\r\n      const lat = coord.latLng.lat();\r\n      const lng = coord.latLng.lng();\r\n      geocodeLatLng(lat, lng)\r\n      setMapCenter({lat: lat, lng: lng});\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n            <GooglePlacesAutocomplete\r\n              onLoadFailed={(error) => (\r\n                console.error(\"Could not inject Google script\", error)\r\n              )}\r\n              autocompletionRequest={{\r\n                componentRestrictions: {\r\n                country: ['ar'],\r\n                }\r\n              }}\r\n              selectProps={{\r\n                onChange: handleChange,\r\n                placeholder : \"Direccion...\"\r\n              }}\r\n            />\r\n            <Map \r\n              google={props.google}\r\n              containerStyle={containerStyle}\r\n              zoom={16}\r\n              onClick={(t, map, coord) => onMarkerClick(t, map, coord)}\r\n              initialCenter={{\r\n                lat: mapCenter.lat,\r\n                lng: mapCenter.lng\r\n              }}\r\n              center={{\r\n                lat: mapCenter.lat,\r\n                lng: mapCenter.lng\r\n              }}\r\n            >\r\n              <Marker \r\n                position={{\r\n                  lat: mapCenter.lat,\r\n                  lng: mapCenter.lng\r\n                }} \r\n              />    \r\n            </Map>\r\n       \r\n\r\n\r\n      </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: ('AIzaSyDAwZoCkxg0z2pKbKsjZhBM_NX0S8H44vg'),\r\n  libraries: [\"places\"],\r\n  language:'es-ES'\r\n})(Maps)\r\n\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid,Button, Box, TextField } from \"@material-ui/core\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport Maps from '../../../GoogleMaps/Maps'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '25ch',\r\n    },\r\n  }));\r\n\r\nconst FormAddEdit = (props) => {\r\n    const {institution, addInstitution,editInstitution, edit, emptyFields, setDataAddress} = props;\r\n    const classes = useStyles();\r\n    const {errors, handleSubmit, control} = useForm();\r\n    return (\r\n        <div>\r\n            <form onSubmit={edit ? handleSubmit(editInstitution) : handleSubmit(addInstitution)} className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item sm={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                    minLength: {\r\n                                        value: 6, \r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"institutionName\" \r\n                            id=\"institutionName\"\r\n                            label=\"Nombre\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={institution.name || ''}\r\n                            \r\n                            as={\r\n                            <TextField\r\n                                error={ errors.institutionName ? true : false }\r\n                                helperText={errors.institutionName ? errors.institutionName.message : null} \r\n                                \r\n                            />\r\n                            }\r\n                        />\r\n                       {/*  <Controller\r\n                            rules={{\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"institutionAddres\" \r\n                            id=\"institutionAddres\"\r\n                            label=\"Direccion\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={institution.addres || ''}\r\n                            type=\"text\"\r\n                            as={\r\n                            <TextField\r\n                                error={ errors.institutionAddres ? true : false }\r\n                                helperText={errors.institutionAddres ? errors.institutionAddres.message : null} \r\n                                \r\n                            />\r\n                            }\r\n                        /> */}\r\n                        \r\n                    </Grid>\r\n                    <Grid Item xs={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"institutionCue\" \r\n                            id=\"institutionCue\"\r\n                            label=\"CUE\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={institution.cue || ''}\r\n                            type=\"number\"\r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.institutionCue ? true : false }\r\n                                    helperText={errors.institutionCue ? errors.institutionCue.message : null} \r\n                                    \r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm={11} style={{position: 'relative', height: '40vh'}}>\r\n                       <Box mt={2} ml={1}>\r\n                            <Maps \r\n                                setDataAddress={setDataAddress}\r\n                                institution={institution}\r\n                                edit={edit}\r\n                            /> \r\n                        </Box> \r\n                    </Grid>               \r\n                    <Grid item sm={12}>\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\" m={1} p={1} mt={8}>\r\n                            <Button color=\"primary\" type=\"button\" onClick={() =>  emptyFields()}>\r\n                                Cancelar\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Guardar\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAddEdit\r\n\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { Box, Button, CircularProgress, Grid} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MaterialTable from 'material-table'\r\nimport FormAddEdit from './Forms/Add-Edit'\r\nimport Popup from '../../ui/Popup'\r\nimport Notification from '../../ui/Notification'\r\nimport Dashboard from '../../dashboard/Dashboard'\r\n\r\nconst Institution2 = () => {\r\n    const roleUser = useSelector(store => store.usuario.usuario.data.role)\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [notification, setNotification] = React.useState({open: false, message: ''});\r\n    const [institution, setInstitution] = useState({\r\n        name: '',\r\n        address: '',\r\n        cue: '',\r\n    });\r\n    const [institutions, setInstitutions] = useState([])\r\n    const [edit, setEdit] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [dataAddress, setDataAddress] = useState({})\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    useEffect(() => {\r\n        const getInstitutions = async () =>{\r\n           setLoading(true) \r\n           const res =  await axios.get('institutions/institutions')\r\n           setInstitutions(res.data)\r\n        }\r\n        getInstitutions();\r\n        setLoading(false) \r\n    },[])\r\n\r\n    const addInstitution = async (data) => {\r\n        setLoading(true) \r\n        const newInstituion = {\r\n            name: data.institutionName,\r\n            //addres: data.institutionAddres,\r\n            address: dataAddress,\r\n            cue: data.institutionCue,\r\n        }\r\n        try {\r\n            const res = await axios.post('institutions/institutions', newInstituion)\r\n            setInstitutions([\r\n                ...institutions,\r\n                res.data\r\n            ])\r\n            setNotification({...notification, open: true,  message: \"Institucion Creada Correctamente\"})\r\n            emptyFields()\r\n            setLoading(false) \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const edition = (row) => {\r\n        setId(row._id)\r\n        setInstitution({\r\n            name: row.name,\r\n            address: row.address,\r\n            cue: row.cue,\r\n        })\r\n        setEdit(true)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    // Actualizar Institucion\r\n    const editInstitution =  async (data) => {\r\n        setLoading(true) \r\n        const instituionEdit = {\r\n            name: data.institutionName,\r\n            address: dataAddress,\r\n            //address: data.institutioAddres,\r\n            CUE: data.institutioCUE,\r\n        }\r\n        try {\r\n            const res = await axios.put(`institutions/institutions/${id}`, instituionEdit)\r\n            const arrayEditado = institutions.map( institution => (\r\n                institution._id === id ? res.data : institution\r\n            ))\r\n            setInstitutions(arrayEditado)\r\n            setNotification({...notification, open: true, message: \"Institucion Editada Correctamente\"})\r\n            emptyFields()\r\n            setLoading(false) \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const deleteInstitutions = async data => {\r\n        const institutionsIds = []\r\n        data.map(institution => institutionsIds.push(institution._id))\r\n        const confirm = window.confirm(\"Estas Seguro de Eliminar El/Los Registro/s\")\r\n        try {\r\n            if(confirm){\r\n                await axios.post('institutions/institutions/delete/many', institutionsIds)\r\n                const arrayFiltrado = institutions.filter((institution) => !institutionsIds.includes(institution._id))\r\n                setInstitutions(arrayFiltrado)\r\n                setNotification({...notification, open: true,  message: \"Intitucion/es Eliminada/s Correctamente\"})\r\n            }     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Cerrar formulario flotante\r\n    const closeForm = () => {\r\n        setOpenPopup(false)\r\n        setEdit(false)\r\n    }\r\n    // Devuelve el estado de la institution a situacion inicial\r\n    const emptyFields = () =>{\r\n        closeForm()\r\n        setInstitution({\r\n            name: '',\r\n            address: '',\r\n            cue: '',\r\n        })\r\n        setId('')\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Grid container spacing={1}>\r\n                <Grid item sm={12}> \r\n                    <Box>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() =>  setOpenPopup(true)}>\r\n                            Nueva Institucion\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                    <Box mt={2}>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        {loading && <CircularProgress />}\r\n                    </Box>\r\n                        <MaterialTable\r\n                            columns={[\r\n                                { title: 'Id', field: '_id', hidden: true},\r\n                                { title: 'Nombre', field: 'name' },\r\n                                { title: 'Direccion', field: 'address.name' },\r\n                                { title: \"CUE\", field: 'cue'},\r\n                            ]}\r\n                            data={institutions}\r\n                            actions={[\r\n                                {\r\n                                    hidden: roleUser !== 'Admin',\r\n                                    icon: 'edit',\r\n                                    tooltip: 'Editar',\r\n                                    position: 'row',\r\n                                    onClick: (event, rowData) => edition(rowData),\r\n                                },\r\n                                {\r\n                                    hidden: roleUser !== 'Admin',\r\n                                    icon: () => <DeleteIcon />,\r\n                                    position: 'toolbarOnSelect',\r\n                                    tooltip: 'Borrar',\r\n                                    onClick: (event, rowData) => deleteInstitutions(rowData),\r\n                                }\r\n                              ]}\r\n                            options={{\r\n                                actionsColumnIndex: -1,\r\n                                selection: true,\r\n                                pageSize: 10\r\n                            }}\r\n                            title=\"Instituciones\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Notification \r\n                    message = {notification.message}\r\n                    open = {notification.open}\r\n                    severity= {\"success\"}\r\n                    setNotification={setNotification}\r\n            />\r\n            <Popup\r\n               openPopup={openPopup}  \r\n               title= {edit ? \"Editar Institucion\" : \"Agregar Institucion\"} \r\n               closeForm={closeForm}  \r\n               loading={loading}          \r\n            >\r\n               <FormAddEdit\r\n                edit={edit}\r\n                institution={institution}\r\n                addInstitution = {addInstitution}\r\n                editInstitution = { editInstitution} \r\n                emptyFields={emptyFields}\r\n                setDataAddress={setDataAddress}  \r\n                />\r\n            </Popup>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Institution = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Instituciones\"}>\r\n                <Institution2>\r\n\r\n                </Institution2>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Institution\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { Box, Button, Grid, Paper } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport 'react-dates/initialize';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport esLocale  from 'moment/locale/es';\r\nimport moment from 'moment';\r\nimport {\r\n    Chart,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    BarSeries,\r\n    Title,\r\n    Legend,\r\n  } from '@devexpress/dx-react-chart-material-ui';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Stack, Animation } from '@devexpress/dx-react-chart';\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\nconst legendStyles = () => ({\r\n    root: {\r\n      display: 'flex',\r\n      margin: 'auto',\r\n      flexDirection: 'row',\r\n    },\r\n  });\r\n  const legendRootBase = ({ classes, ...restProps }) => (\r\n    <Legend.Root {...restProps} className={classes.root} />\r\n  );\r\n  const Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\r\n  const legendLabelStyles = () => ({\r\n    label: {\r\n      whiteSpace: 'nowrap',\r\n    },\r\n  });\r\n  const legendLabelBase = ({ classes, ...restProps }) => (\r\n    <Legend.Label className={classes.label} {...restProps} />\r\n  );\r\n  const Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n  \r\nconst Informe2 = (props) => {\r\n    moment.locale('es', esLocale);\r\n    const classes = useStyles();\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const role = useSelector(store => store.usuario.role)\r\n    const userName = useSelector(store => store.usuario.usuario.data.nombre)\r\n    const [startDate, setStartDate] = useState(moment());\r\n    const [endDate, setEndDate] = useState(moment());\r\n    const [focusedInput, setFocusedInput] = useState(null);\r\n    const [data, setData] = useState([])\r\n    const [chartData, setCharData] = useState([])\r\n    \r\n    useEffect(() => {\r\n        setCharData([]);\r\n        dateRange();\r\n    },[startDate, endDate ])\r\n\r\n    useEffect(() => {\r\n        data.map((data) => (\r\n            setCharData(prevState => \r\n                [...prevState,{ mes:  `${moment.months(data._id.mes - 1)} - ${data._id.anio} `, solucionado: data.solucionado, noSolucionado: data.noSolucionado }])\r\n        ))\r\n\r\n    },[data])\r\n    \r\n     const dateRange = async () => {\r\n            try {\r\n                 const res = await axios.get(`api/range-date?usuarioId=${usuarioId}&startDate=${startDate}&endDate=${endDate}&role=${role}`)\r\n                 setData(res.data)\r\n                 \r\n                 \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n    }\r\n    const generateReport = async () =>{\r\n        let noSolucionado = data.reduce( (a,b) => a  + b.noSolucionado, 0)\r\n        let solucionado = data.reduce( (a,b) => a  + b.solucionado, 0)\r\n        let total = noSolucionado + solucionado\r\n        const ticketPDF = {\r\n            noSolucionado: noSolucionado,\r\n            solucionado: solucionado,\r\n            total: total,\r\n            userName : userName,\r\n            startDate : startDate._d,\r\n            endDate: endDate._d\r\n        }\r\n        console.log(noSolucionado)\r\n        try {\r\n            const res =  await axios.post('api/pdf',ticketPDF, {responseType: 'blob'})\r\n            //Create a Blob from the PDF Stream\r\n                const file = new Blob(\r\n                    [res.data], \r\n                    {type: 'application/pdf'});\r\n            //Build a URL from the file\r\n                const fileURL = URL.createObjectURL(file);\r\n            //Open the URL on new Window\r\n                window.open(fileURL);\r\n                console.log(file)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-start\">\r\n                        <DateRangePicker\r\n                            startDate={startDate}\r\n                            startDateId=\"s_id\"\r\n                            endDate={endDate}\r\n                            endDateId=\"e_id\"\r\n                            onDatesChange={({ startDate, endDate }) => { setStartDate(startDate); setEndDate(endDate); }}\r\n                            focusedInput={focusedInput}\r\n                            onFocusChange={e => setFocusedInput(e)}\r\n                            displayFormat=\"DD/MM/YYYY\"\r\n                            isOutsideRange={() => false}\r\n                            withPortal={true} \r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={classes.button}\r\n                        startIcon={<PrintIcon />}\r\n                        onClick = {() => generateReport()}\r\n                        >\r\n                            Generar Informe\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                   <Box mt={2}>\r\n                    <Paper>\r\n                            <Chart\r\n                            data={chartData}\r\n                            >\r\n                                <ArgumentAxis />\r\n                                <ValueAxis />\r\n\r\n                                <BarSeries\r\n                                    name=\"Solucionado\"\r\n                                    valueField=\"solucionado\"\r\n                                    argumentField=\"mes\"\r\n                                    color=\"#0FFF04\"\r\n                                />\r\n                                <BarSeries\r\n                                    name=\"No Solucionado\"\r\n                                    valueField=\"noSolucionado\"\r\n                                    argumentField=\"mes\"\r\n                                    color=\"#FF0404\"\r\n                                />\r\n                                <Animation />\r\n                                <Legend position=\"bottom\" rootComponent={Root} labelComponent={Label} />\r\n                                <Title text=\"Situacion Tickets\" />\r\n                                <Stack />\r\n                            </Chart>\r\n                        </Paper>\r\n                   </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Informe = () =>{\r\n    return (\r\n        <Dashboard section={\"Reportes Detallados\"}>\r\n            <Informe2>\r\n\r\n            </Informe2>\r\n        </Dashboard>\r\n    )\r\n    \r\n}\r\n\r\nexport default Informe\r\n","import React from 'react';\nimport Login from './components/Login'\nimport Dashboard from './components/dashboard/Dashboard'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport {useSelector} from 'react-redux'\nimport Tickets from './components/Tickets/Tickets'\nimport Detalles from './components/Tickets/Detalles';\nimport Calendar from './components/Tickets/Calendar';\nimport Pendientes from './components/Administracion/Pendientes';\nimport Users from './components/Administracion/Users/Users';\nimport Institution from './components/Administracion/Institutions/Institutions';\nimport Informe from './components/Tickets/Infome';\nimport axios from 'axios';\n\n\nfunction App() {\n  const RutaProtegida = ({component, path, ...rest}) => {\n    const tokenState = useSelector(store => store.usuario.token)\n      if(tokenState){\n        return <Route component={component} path={path} {...rest} />\n     }else{\n      return <Redirect to=\"/\" {...rest} />\n    }\n  }\n\n    // Rutas Administrador\n    const RutaAdmin = ({component, path, ...rest}) => {  \n      const role = useSelector(store => store.usuario.role)\n      if(role === 'Admin'){\n          return <Route component={component} path={path} {...rest} />\n       }else{\n        return <Redirect to=\"/\" {...rest} />\n      }\n    }\n\n\n\nconst token = useSelector(store => store.usuario.token)\n\naxios.defaults.headers.common['token'] = token \n\n  return (\n        <Router>\n          <Switch>\n            <Route component={Login} path=\"/\" exact/>\n            <RutaProtegida component={Dashboard} path=\"/dashboard\" exact/>\n            <RutaProtegida component={Tickets} path=\"/tickets\" exact/>\n            <RutaProtegida component={Detalles} path=\"/tickets/:id\" exact/>\n            <RutaProtegida component={Calendar} path=\"/calendar\" exact/>\n            <RutaProtegida component={Informe} path=\"/reportes\" exact/>\n            <RutaAdmin component={Pendientes} path=\"/admin/pendientes\" exact/>\n            <RutaAdmin component={Users} path=\"/admin/users\" exact/>\n            <RutaAdmin component={Institution} path=\"/admin/instituciones\" exact/>\n          </Switch>\n        </Router>\n  );\n}\n\nexport default App;\n","import {createStore, combineReducers, compose, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport userReducer, {leerUsuarioAccion} from './usuarioDucks'\r\n\r\nconst rootReducer = combineReducers({\r\n    usuario : userReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function generateStore(){\r\n    const store = createStore( rootReducer,  composeEnhancers( applyMiddleware(thunk) ))\r\n    leerUsuarioAccion()(store.dispatch)\r\n    return store;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport {Provider} from 'react-redux'\nimport generateStore from './redux/store'\nimport axios from 'axios'\n\nconst store = generateStore()\n\naxios.defaults.baseURL = process.env.REACT_APP_AXIOS_URL;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}