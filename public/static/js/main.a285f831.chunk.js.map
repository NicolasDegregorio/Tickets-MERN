{"version":3,"sources":["redux/usuarioDucks.js","components/Login.jsx","components/dashboard/userMenu.jsx","components/dashboard/AppBarr.jsx","components/dashboard/listItems.jsx","components/dashboard/Drawerr.jsx","components/ui/Popup.jsx","components/Botton.jsx","components/dashboard/Dashboard.jsx","components/Tickets/Forms/FormAdd.jsx","components/ui/Card.jsx","components/ui/Notification.jsx","components/ui/CardMobile.jsx","components/Tickets/Tickets.jsx","components/ui/Chat.jsx","components/GoogleMaps/MapInstitution.jsx","components/ui/Tabs/DialogEndTicket.jsx","components/ui/Tabs/Detalles.jsx","components/ui/Tabs/DialogEquipo.jsx","components/ui/Tabs/Equipo.jsx","components/ui/TabsCentered.jsx","components/Tickets/Detalles.jsx","components/Tickets/Calendar.jsx","components/Administracion/Pendientes.jsx","components/Administracion/Users/Forms/Add-Edit.jsx","components/ui/CardMobileUsers.jsx","components/Administracion/Users/Users.jsx","components/GoogleMaps/Maps.jsx","components/Administracion/Institutions/Forms/Add-Edit.jsx","components/ui/CardMobileIns.jsx","components/Administracion/Institutions/Institutions.jsx","components/Tickets/Infome.jsx","App.jsx","redux/store.js","index.js"],"names":["dataInicial","activo","GET_LOGIN_SUCCESS","CERRAR_SESION","logout","dispatch","type","localStorage","removeItem","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","process","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","withRouter","props","classes","useDispatch","useSelector","store","usuario","React","useState","email","password","setUsuario","useEffect","history","push","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","onSubmit","e","preventDefault","getState","a","axios","post","res","payload","token","data","jwt_decode","role","setItem","JSON","stringify","console","log","response","alert","mensaje","loginUserAction","TextField","required","fullWidth","id","label","name","autoComplete","onChange","target","value","autoFocus","FormControlLabel","control","Checkbox","Button","Box","mt","UserMenu","anchorEl","setAnchorEl","userName","nombre","aria-controls","aria-haspopup","onClick","event","currentTarget","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","MenuItem","toolbar","paddingRight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","AppBarr","handleDrawerOpen","mobile","AppBar","position","clsx","Toolbar","IconButton","edge","aria-label","noWrap","section","mainListItems","ListItem","button","NavLink","to","activeClassName","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","toolbarIcon","justifyContent","padding","mixins","flexShrink","whiteSpace","drawerPaper","drawerPaperClose","overflowX","breakpoints","up","Drawerr","handleDrawerClose","Drawer","Divider","List","dialogWrapper","top","down","dialogTitle","Popup","children","openPopup","closeForm","loading","useTheme","fullScreen","useMediaQuery","Dialog","maxWidth","DialogTitle","style","CircularProgress","DialogContent","dividers","stickToBottom","bottom","minWidth","SimpleBottomNavigation","setOpenPopup","pathname","window","location","setValue","BottomNavigation","newValue","showLabels","BottomNavigationAction","icon","minHeight","appBarSpacer","content","paddingTop","paddingBottom","overflow","fixedHeight","footer","left","right","Dashboard","matchMedia","matches","setOpen","Container","formControl","FormAdd","ticket","addTicket","editTicket","edit","institutions","users","emptyFields","useForm","register","errors","handleSubmit","FormControl","as","Autocomplete","options","_","getOptionLabel","option","defaultValue","institution","getOptionSelected","values","renderInput","params","InputLabelProps","shrink","error","ticketInstitution","FormHelperText","message","rules","minLength","multiline","rowsMax","description","ticketDescription","helperText","InputLabel","team","_user","Select","labelId","ticketLeader","map","user","index","_id","inputRef","start_date","slice","end_date","priority","ticketPriority","m","p","SimpleCard","typeTickets","totalsTickets","action","typeFilter","Fragment","Card","CardActionArea","CardContent","justify","gutterBottom","Notification","severity","setNotification","handleClose","reason","Alert","Snackbar","autoHideDuration","card","wirdth","media","cardAction","ticketsFilterMobile","edition","deleteTicket","roleUser","bullet","Chip","status","size","moment","format","CardActions","backdrop","Tickets2","usuarioId","setUsers","tickets","setTickets","setInstitutions","setEdit","setId","ticketsFilter","setTicketsFilter","setTicketsFilterMobile","notification","setTicket","setLoading","pagePaginator","setPagePaginator","currentPage","setCurrentPage","getTickets","get","Math","ceil","length","getUsers","getInstitutions","setInterval","handleInputChange","newTicket","ticketsAll","ticketsIds","countTickets","confirm","arrayFiltrado","filter","includes","row","ticketEdit","undefined","put","arrayEditado","filterTickets","filtro","active","ml","lg","ticketsSolved","ticketsUnsolved","ticketsExpired","palabra","palabraMinuscula","toLowerCase","indexOf","buscador","InputProps","startAdornment","InputAdornment","Backdrop","columns","field","hidden","lookup","Alta","Media","Baja","dateSetting","locale","render","rowData","actions","tooltip","actionsColumnIndex","selection","pageSize","filtering","exportButton","Pagination","count","page","paginator","Tickets","table","chatSection","headBG","borderRight500","borderRight","messageArea","overflowY","Chat","userId","comments","commentsTicket","setCommentsTicket","ticketId","comment","setComent","addComment","deleteComment","commentId","delete","onKeyPress","key","endIcon","Icon","alt","src","ListItemSecondaryAction","GoogleApiWrapper","apiKey","language","lat","lng","google","zoom","initialCenter","center","background","flexWrap","DialogEndTicket","ticketSolve","solution","ticketSolution","disableBackdropClick","disableEscapeKeyDown","DialogActions","Detalles","institutionAddress","responsible","handleClickOpen","DialogEquipo","userTeam","setTeam","setResponsible","addMembersTeam","membersTeam","members","multiple","placeholder","Equipo","deleteMembersTeam","dense","ListItemAvatar","TabPanel","other","aria-labelledby","a11yProps","ScrollableTabsButtonAuto","setUserTeam","usersRepeat","getUsersTeam","Tabs","indicatorColor","textColor","scrollButtons","Tab","Detalles2","ticketInfo","setTicketInfo","setInsitutiton","setInstitutionAddress","setComments","useParams","ticketData","address","Calendar2","events","setEvents","buttons","prevState","start","end","url","borderColor","plugins","dayGridPlugin","listPlugin","headerToolbar","initialView","esLocale","showNonCurrentDates","Calendar","Pendientess","ticketAprobed","arrayTickets","CardMedia","Pendientes","FormAddEdit","addUser","editUser","watch","checkBox","setCheckBox","lastName","userLastName","userRole","pattern","userEmail","disabled","userPassword","validate","userPasswordRepeat","checked","usersMobile","deleteUser","Users2","setUser","setUsersMobile","newUser","userEdit","usersIds","Users","libraries","setDataAddress","setAddress","mapCenter","setMapCenter","placeHolder","document","getElementsByClassName","innerHTML","handleChange","dire","geocodeByAddress","getLatLng","results","addressParse","getAddressObject","address_components","formatted_address","locality","department","departament","geocodeLatLng","geocodeByLatLng","ShouldBeComponent","home","postal_code","street","province","country","forEach","shouldBe","types","short_name","long_name","onLoadFailed","autocompletionRequest","componentRestrictions","selectProps","containerStyle","t","coord","latLng","onMarkerClick","addInstitution","editInstitution","institutionName","Item","cue","institutionCue","institutionMobile","deleteInstitutions","Institution2","setInstitution","dataAddress","setInstitutionMobile","newInstituion","instituionEdit","institutionsIds","Institution","Root","withStyles","restProps","Informe2","startDate","setStartDate","endDate","setEndDate","focusedInput","setFocusedInput","setData","chartData","setCharData","orientation","dateRange","mes","months","anio","solucionado","noSolucionado","generateReport","reduce","b","ticketPDF","total","_d","responseType","file","Blob","fileURL","URL","createObjectURL","startDateId","endDateId","onDatesChange","onFocusChange","displayFormat","isOutsideRange","withPortal","startIcon","valueField","argumentField","rootComponent","text","Informe","App","RutaProtegida","path","rest","RutaAdmin","defaults","headers","common","Login","exact","rootReducer","combineReducers","state","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","getItem","parse","usuarioDecode","leerUsuarioAccion","generateStore","baseURL","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a285f831.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// constantes\r\nconst dataInicial = {\r\n    activo: false\r\n}\r\n\r\n// types\r\nconst GET_LOGIN_SUCCESS = 'GET_LOGIN_SUCCESS'\r\nconst CERRAR_SESION = 'CERRAR_SESSION'\r\n\r\n// reducer\r\nexport default function userReducer(state = dataInicial, action){\r\n    switch (action.type) {\r\n        case  GET_LOGIN_SUCCESS:\r\n            return {...state, activo: true, usuario: action.payload.usuario, role: action.payload.role, token: action.payload.token} \r\n        case CERRAR_SESION:\r\n            return {...dataInicial, role: ''}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const loginUserAction = (usuario) => async (dispatch, getState) => {\r\n    try {\r\n        const res = await axios.post('users', usuario)\r\n        dispatch({\r\n            type : GET_LOGIN_SUCCESS,\r\n            payload: {\r\n                token: res.data.token,\r\n                usuario: jwt_decode(res.data.token),\r\n                role: res.data.role.role\r\n            }\r\n        })\r\n        localStorage.setItem('usuario', JSON.stringify({token : res.data.token}))\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n        alert(error.response.data.mensaje)\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    dispatch({\r\n        type : CERRAR_SESION,\r\n    })\r\n    localStorage.removeItem('usuario')\r\n}\r\n\r\n\r\nexport const leerUsuarioAccion = () => async (dispatch) => {\r\n    if(localStorage.getItem('usuario')){\r\n        const usuario = JSON.parse(localStorage.getItem('usuario'))\r\n        const usuarioDecode = jwt_decode(usuario.token)\r\n        dispatch({\r\n            type: GET_LOGIN_SUCCESS,\r\n            payload: {\r\n                token: usuario.token,\r\n                usuario: usuarioDecode,\r\n                role: usuarioDecode.data.role\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n    \r\n    \r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {loginUserAction} from '../redux/usuarioDucks'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Sigef - Gestion de Incidencias\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\nconst url =  process.env.REACT_APP_URL;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${url}img/sigef-logo.png)` ,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'contain',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login2 = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n    const activo = useSelector(store => store.usuario.activo)\r\n    const [usuario, setUsuario] = React.useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        if(activo){\r\n            props.history.push('/tickets')\r\n        }\r\n        \r\n    }, [props.history, activo])\r\n    \r\n    \r\n    const login = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(loginUserAction(usuario))\r\n\r\n    }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Iniciar Sesion\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={login}> \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Correo Electronico\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              onChange={(e) => setUsuario({...usuario, email: e.target.value}) }\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Contraseña\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setUsuario({...usuario, password: e.target.value}) }\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Recordar\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Iniciar Sesion\r\n            </Button>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Olvido su Contraseña?\r\n                </Link>\r\n              </Grid> */}\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nexport default withRouter(Login2)","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {logout} from '../../redux/usuarioDucks';\r\n\r\nexport default function UserMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const userName = useSelector(store => store.usuario.usuario.data.nombre)\r\n  const dispatch = useDispatch()\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button color='inherit' aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        {userName}\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n        transformOrigin={{ horizontal: \"center\" }}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {/* <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>My account</MenuItem> */}\r\n        <MenuItem onClick={() => dispatch(logout())}>Cerrar Sesion</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Toolbar, IconButton, Typography} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport UserMenu from './userMenu';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    \r\n  }));\r\nconst AppBarr = (props) => {\r\n  const { handleDrawerOpen, open, mobile } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <AppBar position=\"static\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                {!mobile &&\r\n                  <IconButton\r\n                  edge=\"start\"\r\n                  color=\"inherit\"\r\n                  aria-label=\"open drawer\"\r\n                  onClick={handleDrawerOpen}\r\n                  className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                 >\r\n                    <MenuIcon />\r\n                 </IconButton>\r\n                }\r\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                    {props.section}\r\n                </Typography>\r\n                {!mobile &&\r\n                  <IconButton color=\"inherit\">\r\n                    <UserMenu />\r\n                  </IconButton>\r\n                }\r\n                {/*   <Badge badgeContent={4} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge> */}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBarr\r\n","import React from 'react';\r\nimport {ListItem, ListItemIcon, ListItemText, ListSubheader} from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport EditAttributesIcon from '@material-ui/icons/EditAttributes';\r\nimport {NavLink } from 'react-router-dom'\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    {/* <ListItem button>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem> */}\r\n    <ListItem button component={NavLink} to=\"/tickets\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <ConfirmationNumberIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Tickets\" />\r\n    </ListItem>\r\n    <ListItem button component={NavLink} to=\"/reportes\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Reporte\" />\r\n    </ListItem>\r\n    <ListItem button component={NavLink} to=\"/calendar\" activeClassName=\"Mui-selected\" >\r\n      <ListItemIcon>\r\n        <DateRangeIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Calendario\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    <ListSubheader inset>Administracion</ListSubheader>\r\n    <ListItem button component={NavLink} to=\"/admin/pendientes\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <EditAttributesIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Tickets Pendiente\" />\r\n    </ListItem>\r\n    <ListItem button  component={NavLink} to=\"/admin/users\" activeClassName=\"Mui-selected\" >\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Usuarios\" />\r\n    </ListItem>\r\n    <ListItem button component={NavLink} to=\"/admin/instituciones\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <SchoolIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Instituciones\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n","import React from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Divider, Drawer,IconButton, List} from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport {useSelector} from 'react-redux'\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    drawer: {\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(1) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(3) + 1,\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Drawerr = (props) => {\r\n    const { handleDrawerClose, open } = props;\r\n    const classes = useStyles();\r\n    const role = useSelector(store => store.usuario.role)\r\n    return (\r\n        <div>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                className={clsx(classes.drawer, {\r\n                  [classes.drawerPaper]: open,\r\n                  [classes.drawerPaperClose]: !open,\r\n                })}\r\n                classes={{\r\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>{mainListItems}</List>\r\n                <Divider />\r\n                {role === 'Admin' && \r\n                  <List>{secondaryListItems}</List>\r\n                }\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Drawerr\r\n","import React from 'react'\r\nimport {Dialog, CircularProgress,  DialogTitle, DialogContent, IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(4),\r\n        position: 'absolute',\r\n        top: theme.spacing(2),\r\n        [theme.breakpoints.down('sm')]: {\r\n            padding: theme.spacing(2),\r\n            position: 'absolute',\r\n            top: theme.spacing(0),\r\n          },\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, closeForm, loading } = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    return (\r\n        <Dialog fullScreen={fullScreen} open={openPopup} maxWidth=\"sm\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {title}\r\n                    </Typography>\r\n                    {loading && <CircularProgress />}\r\n                    <IconButton aria-label=\"delete\" onClick={() =>  closeForm()}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers align=\"center\">\r\n                {children}\r\n            </DialogContent>\r\n            \r\n        </Dialog>\r\n    )\r\n}","import React,{useState} from 'react';\r\nimport { useSelector, useDispatch} from 'react-redux'\r\nimport {logout} from '../redux/usuarioDucks';\r\nimport {secondaryListItems } from './dashboard/listItems';\r\nimport Popup from './ui/Popup'\r\nimport {List} from \"@material-ui/core\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport PermIdentityIcon from '@material-ui/icons/PermIdentity';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport {NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 500,\r\n    marginTop: '4px',\r\n  },\r\n  stickToBottom: {\r\n    width: \"100%\",\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    backgroundColor: \"#F2F3F4\",\r\n    \"& .MuiBottomNavigationAction-root\": {\r\n      \"@media (max-width: 768px)\": {\r\n        minWidth: \"auto\",\r\n        padding: \"6px 0\"\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\nexport default function SimpleBottomNavigation() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const role = useSelector(store => store.usuario.role);\r\n  const [openPopup, setOpenPopup] = useState(false);\r\n  const pathname = window.location.pathname;\r\n  const [value, setValue] = React.useState(pathname);\r\n\r\n  const closeForm = () => {\r\n    setOpenPopup(false)\r\n  }\r\n  return (\r\n    <div>\r\n\r\n    <BottomNavigation\r\n      className={classes.stickToBottom}\r\n      value={value}\r\n      onChange={(event, newValue) => {\r\n        setValue(newValue);\r\n      }}\r\n      showLabels\r\n    \r\n    >\r\n      <BottomNavigationAction label=\"Tickets\" value=\"/tickets\" icon={<ConfirmationNumberIcon />} component={NavLink} to=\"/tickets\" />\r\n      <BottomNavigationAction label=\"Reportes\" value=\"/reportes\" icon={<BarChartIcon />} component={NavLink} to=\"/reportes\" />\r\n      <BottomNavigationAction label=\"Calendario\" value=\"/calendar\" icon={<DateRangeIcon />} component={NavLink} to=\"/calendar\" />\r\n      {role === 'Admin' && \r\n        <BottomNavigationAction label=\"Admin\"  icon={<SupervisorAccountIcon />} onClick={() => setOpenPopup(true)} />\r\n      }\r\n      <BottomNavigationAction label=\"Cerrar Sesion\" icon={<PermIdentityIcon />} onClick={() => dispatch(logout())} />\r\n    </BottomNavigation>\r\n      <Popup\r\n          title= {\"Menu Administrador\"}\r\n          openPopup={openPopup}\r\n          closeForm={closeForm}\r\n\r\n      >\r\n         <List>{secondaryListItems}</List>\r\n      </Popup>\r\n    </div>\r\n    \r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {CssBaseline, Container, Grid, Typography, Link } from '@material-ui/core';\r\nimport AppBarr from './AppBarr';\r\nimport Drawerr from './Drawerr';\r\nimport Botton from '../Botton';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Sigef - Gestion de Incidencias\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n      </Typography>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    //flexDirection: column,\r\n    minHeight: '100vh',\r\n  },\r\n  \r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: '110vh',\r\n    },\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n    paddingBottom: '50px',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    \r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  footer: {\r\n    //marginTop: '1rem',\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    width: '100%',\r\n    //padding: '1rem',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const  width = window.matchMedia(\"(max-width: 700px)\").matches ? false : true;\r\n  const mobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const [open, setOpen] = React.useState(width);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBarr\r\n        handleDrawerOpen={handleDrawerOpen}\r\n        open={open}\r\n        mobile={mobile}\r\n        section={props.section}\r\n      />\r\n      {!mobile &&\r\n        <Drawerr\r\n        handleDrawerClose={handleDrawerClose}\r\n        open={open}\r\n        />\r\n      }\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              {children}\r\n              {/* <Router>\r\n                  <Route component={Tickets} path=\"/tickets\" exact/> \r\n                  <Route component={Prueba} path=\"/tickets/:id\" exact/> \r\n                  <Route component={Calendar} path=\"/calendar\" exact/>\r\n                  <Route component={Infome} path=\"/informe\" exact/> \r\n              </Router> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n        <footer className={classes.footer}>\r\n          {mobile ? \r\n             <Botton />\r\n             :\r\n             <Copyright /> \r\n          }\r\n        </footer>\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid,Button, Box, FormControl, FormHelperText, InputLabel, MenuItem , Select , TextField } from \"@material-ui/core\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '25ch',\r\n    },\r\n  }));\r\n\r\nconst FormAdd = (props) => {\r\n    const {ticket, addTicket,editTicket, edit, institutions, users, emptyFields } = props;\r\n    const classes = useStyles();\r\n    const {register, errors, handleSubmit, control} = useForm();\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={edit ? handleSubmit(editTicket) : handleSubmit(addTicket)} className={classes.root}>\r\n                <Grid container >\r\n                    <Grid item xs={12} sm={6}>\r\n                        {edit ?\r\n                            <FormControl variant=\"outlined\">\r\n                                <Controller\r\n                                    as={({ onChange }) => (\r\n                                        <Autocomplete\r\n                                            className=\"form-item\"\r\n                                            options={institutions}\r\n                                            onChange={(_, data) => onChange(data)}\r\n                                            getOptionLabel={option => option.name}\r\n                                            defaultValue={{ name: ticket.institution || null }}\r\n                                            getOptionSelected={(option, values) => option.name === values.name}\r\n                                            renderInput={params => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label=\"Institucion\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true\r\n                                                    }}\r\n                                                    variant=\"outlined\"\r\n                                                    error={errors.ticketInstitution ? true : false}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    )}\r\n                                    name=\"ticketInstitution\"\r\n                                    control={control}\r\n                                /* rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                    }\r\n                                }} */\r\n                                />\r\n                                <FormHelperText error={errors.ticketInstitution ? true : false}>{errors.ticketInstitution ? errors.ticketInstitution.message : null} </FormHelperText>\r\n                            </FormControl>\r\n                            :\r\n                            <FormControl variant=\"outlined\">\r\n                                <Controller\r\n                                    as={({ onChange }) => (\r\n                                        <Autocomplete\r\n                                            className=\"form-item\"\r\n                                            options={institutions}\r\n                                            onChange={(_, data) => onChange(data)}\r\n                                            getOptionLabel={option => option.name}\r\n                                            defaultValue={{ name: ticket.institution || null }}\r\n                                            getOptionSelected={(option, values) => option.name === values.name}\r\n                                            renderInput={params => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label=\"Institucion\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true\r\n                                                    }}\r\n                                                    variant=\"outlined\"\r\n                                                    error={errors.ticketInstitution ? true : false}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    )}\r\n                                    name=\"ticketInstitution\"\r\n                                    control={control}\r\n                                    rules={{\r\n                                        required: {\r\n                                            value: true,\r\n                                            message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                />\r\n\r\n                                <FormHelperText error={errors.ticketInstitution ? true : false}>{errors.ticketInstitution ? errors.ticketInstitution.message : null} </FormHelperText>\r\n                            </FormControl>\r\n                        }\r\n                        <Controller\r\n                            rules={{\r\n                                required: {\r\n                                    value: true, \r\n                                    message: 'Campo requerido'\r\n                                    }, \r\n                                minLength: {\r\n                                    value: 6, \r\n                                    message: 'Mínimo 6 carácteres'\r\n                                }                               \r\n                            }}\r\n                            name=\"ticketDescription\"\r\n                            id=\"ticketDescription\"\r\n                            label=\"Descripcion\"\r\n                            control={control}\r\n                            multiline\r\n                            rowsMax={4}\r\n                            variant=\"outlined\"\r\n                            defaultValue={ticket.description || ''}\r\n\r\n\r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.ticketDescription ? true : false }\r\n                                    helperText={errors.ticketDescription ? errors.ticketDescription.message : null}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Encargado</InputLabel>\r\n                            <Controller\r\n                                name=\"ticketLeader\"\r\n                                control={control}\r\n                                rules={{required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                defaultValue={ticket.team._user || ''}\r\n                                \r\n                                as={\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"ticketLeader\"\r\n                                    value={ticket.team._user}\r\n                                    error={ errors.ticketLeader ? true : false }\r\n                                    label=\"Encargado\"\r\n                                    >\r\n                                    {\r\n                                        users.map((user,index) => (\r\n                                            <MenuItem key={index} value={user._id}>{user.nombre}</MenuItem>\r\n                                        ))\r\n                                    }\r\n                                </Select>\r\n                                } \r\n                            />\r\n                             <FormHelperText error={ errors.ticketLeader ? true : false }>{errors.ticketLeader ? errors.ticketLeader.message : null} </FormHelperText>\r\n                        </FormControl>\r\n                \r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            inputRef={register({\r\n                                required: {\r\n                                    value: true, \r\n                                    message: 'Campo requerido'\r\n                                    }\r\n                               })}\r\n                            name=\"start_date\" \r\n                            id=\"start_date\"\r\n                            label=\"Fecha de Inicio\"\r\n                            type=\"date\"\r\n                            InputLabelProps={{\r\n                            shrink: true,\r\n                            }}\r\n                            defaultValue = {ticket.start_date.slice(0,10)}\r\n                            error={ errors.start_date ? true : false }\r\n                            helperText={errors.start_date ? errors.start_date.message : null}\r\n                        />\r\n                        <Box mt={2}>\r\n                            <TextField\r\n                                inputRef={register({\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                })}\r\n                                name=\"end_date\"\r\n                                id=\"end_date\"\r\n                                label=\"Fecha Limite\"\r\n                                type=\"date\"\r\n                                InputLabelProps={{\r\n                                shrink: true,\r\n                                }}\r\n                                defaultValue= {ticket.end_date.slice(0,10)}\r\n                                error={ errors.start_date ? true : false }\r\n                                helperText={errors.end_date ? errors.end_date.message : null}\r\n                            />\r\n                        </Box>\r\n                        <Box>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel id=\"labelPrioridad\">Prioridad</InputLabel>\r\n                                <Controller\r\n                                name=\"ticketPriority\"\r\n                                control={control}\r\n                                rules={{required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                    defaultValue={ticket.priority || ''}\r\n                                as={\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        label=\"Prioridad\"\r\n                                        id=\"ticketPriority\"                                       \r\n                                        value={ticket.priority}\r\n                                        error={ errors.ticketPriority ? true : false }   \r\n                                        >\r\n                                        <MenuItem value={'Alta'}>Alta</MenuItem>\r\n                                        <MenuItem value={'Media'}>Media</MenuItem>\r\n                                        <MenuItem value={'Baja'}>Baja</MenuItem>\r\n                                    </Select>\r\n                                }\r\n                                />\r\n                                 <FormHelperText\r\n                                    error={ errors.ticketPriority ? true : false }\r\n                                >\r\n                                    {errors.ticketPriority ? errors.ticketPriority.message : null} \r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Box>\r\n                        \r\n                    </Grid>              \r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\" m={1} p={1}>\r\n                        <Button color=\"primary\" type=\"button\" onClick={() =>  emptyFields()}>\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                            Guardar\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAdd\r\n\r\n","import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardActionArea, \r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%',\r\n  },\r\n  avatar: props =>({\r\n    backgroundColor: props.color,\r\n    height: 56,\r\n    width: 56\r\n  })\r\n}));\r\n\r\n\r\nexport default function SimpleCard(props) {\r\n  const classes = useStyles(props);\r\n  const {typeTickets, totalsTickets, action, typeFilter} = props;\r\n  return (\r\n    <React.Fragment>\r\n         <Card\r\n            className={classes.root} onClick={() => action(typeFilter)}\r\n            >\r\n              <CardActionArea>\r\n                <CardContent>\r\n                    <Grid\r\n                    container\r\n                    justify=\"space-between\"\r\n                    >\r\n                        <Grid item>\r\n                            <Typography\r\n                            color=\"textSecondary\"\r\n                            gutterBottom\r\n                            variant=\"subtitle2\"\r\n                            >\r\n                                {typeTickets}\r\n                            </Typography>\r\n                            <Typography\r\n                            color=\"textPrimary\"\r\n                            variant=\"h3\"\r\n                            >\r\n                                {totalsTickets}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Avatar className={classes.avatar} >\r\n                            <ConfirmationNumberIcon />\r\n                            </Avatar>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n              </CardActionArea>  \r\n            </Card>\r\n    </React.Fragment>\r\n  );\r\n}","import React, {Fragment} from 'react'\r\nimport {Snackbar} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst Notification = (props) => {\r\n    const { message, open, severity,setNotification } = props;\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setNotification({open: false})\r\n      };\r\n    const Alert = (props) => {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Snackbar \r\n                open={open} \r\n                autoHideDuration={5000} \r\n                onClose={handleClose}  \r\n                anchorOrigin={{vertical: 'bottom',\r\n                horizontal: 'right'}}\r\n            >\r\n                <Alert onClose={handleClose} severity={severity}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {Box, Grid, Card, CardContent, Typography, Chip} from \"@material-ui/core\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport moment from 'moment'\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    wirdth: '100%',\r\n    minWidth: 275,\r\n    //maxWidth: 345,\r\n\r\n  },\r\n  media: {\r\n    height: 300,\r\n  },\r\n  cardAction:{\r\n    justifyContent: 'center'\r\n  }\r\n});\r\n\r\n\r\nexport default function SimpleCard(props) {\r\n  const {ticketsFilterMobile, edition, deleteTicket, roleUser} = props\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  //const team = ticketsFilterMobile.team;\r\n\r\n  return (\r\n    <div>\r\n      <Box>\r\n    {/*<Typography\r\n          color=\"textPrimary\"\r\n          gutterBottom\r\n          variant=\"h5\"\r\n          align=\"center\"\r\n        >\r\n          Tickets{\" \"}\r\n        </Typography> */}\r\n        <Grid container spacing={3}>\r\n          {ticketsFilterMobile.map(ticket =>\r\n            <Grid item xs={12} sm={6} key={ticket._id}>\r\n              <Card className={classes.card}>\r\n                {/* <CardMedia\r\n                  className={classes.media}\r\n                  image={character.img_url}\r\n                />  */}\r\n                <CardContent>\r\n                  <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                    <Chip color={ticket.status === \"Solucionado\"? \"primary\": \"secondary\"} size=\"small\" label={ticket.status} />\r\n                  </Box>\r\n                  <Typography color=\"primary\" variant=\"h6\">\r\n                    {ticket.institution.name} {\" \"}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                    Descripcion: {ticket.description}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                    Encargado: {ticket.team[0][\"_user\"][\"nombre\"]}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                    Feche de inicio: {moment(ticket.start_date, 'YYYY-MM-DD').format('DD-MM-YYYY')}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                    Vencimiento: {moment(ticket.end_date, 'YYYY-MM-DD').format('DD-MM-YYYY')}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                    Prioridad: {ticket.priority}\r\n                  </Typography>\r\n                </CardContent>\r\n                <Divider />\r\n                <CardActions className={classes.cardAction}>\r\n                    <Button size=\"small\" href={`/tickets/${ticket._id}`}><VisibilityIcon /></Button>\r\n                    {roleUser === \"Admin\" &&\r\n                      <div>\r\n                         <Button size=\"small\" onClick={() => edition(ticket)}><EditIcon /></Button>\r\n                        <Button size=\"small\" onClick={() => deleteTicket(ticket._id)}><DeleteIcon /></Button>\r\n                      </div>\r\n                    }            \r\n                </CardActions>\r\n\r\n              </Card>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n     \r\n    \r\n  );\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport MaterialTable from 'material-table'\r\nimport { Box, Button, CircularProgress, Chip, Grid, TextField, InputAdornment, Backdrop } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Popup from '../ui/Popup'\r\nimport FormAdd from './Forms/FormAdd';\r\nimport SimpleCard from '../ui/Card';\r\nimport Notification from '../ui/Notification'\r\nimport Dashboard from '../dashboard/Dashboard'\r\nimport CardMobile from '../ui/CardMobile';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  }));\r\n\r\n\r\n\r\nconst Tickets2 = (props) => {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const roleUser = useSelector(store => store.usuario.usuario.data.role)\r\n    const mobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [users, setUsers] = React.useState([])\r\n    const [tickets, setTickets] = React.useState([])\r\n    const [institutions, setInstitutions] = React.useState([])\r\n    const [edit, setEdit] = React.useState(false)\r\n    const [id, setId] = React.useState('')\r\n    const [ticketsFilter, setTicketsFilter] = React.useState([])\r\n    const [ticketsFilterMobile, setTicketsFilterMobile] = React.useState([])\r\n    const [openPopup, setOpenPopup] = React.useState(false)\r\n    const [notification, setNotification] = React.useState({open: false, message: ''});\r\n    const [ticket, setTicket] = React.useState({\r\n        institution: '',\r\n        description : '',\r\n        team : {\r\n            _user: '',\r\n            nombre: '',\r\n            role: ''\r\n        },\r\n        start_date: '',\r\n        end_date: '',\r\n        priority: '',\r\n        status:'Sin Solucionar',\r\n      })\r\n      const [loading, setLoading] = React.useState(false);\r\n      const [error,setError] = React.useState(false)\r\n      const [pagePaginator, setPagePaginator] = React.useState(null);\r\n      const [currentPage, setCurrentPage ] = React.useState(null);\r\n      \r\n    React.useEffect( () => {\r\n        const getTickets = async () => {\r\n            setLoading(true)\r\n            try {\r\n                const res = await axios.get(`api/ticket?usuarioId=${usuarioId}`)\r\n                const data = res.data\r\n                setTickets(data)\r\n                setTicketsFilter(data.data)\r\n                setTicketsFilterMobile(data.data.slice(0,10)) \r\n                setPagePaginator(Math.ceil((data.data.length)/10))\r\n            } catch (error) {\r\n                console.log(\"ocurrio un error\")\r\n                console.log(error)\r\n            }\r\n            setLoading(false)\r\n        }\r\n        const getUsers = async () => {\r\n           try {\r\n                const res = await axios.get('users/users')\r\n                const data = res.data\r\n                setUsers(data)\r\n           } catch (error) {\r\n                console.log(\"ocurrio un error\")\r\n                console.log(error)\r\n           }\r\n        }\r\n        const getInstitutions = async () => {\r\n            try {\r\n                 const res = await axios.get('institutions/institutions')\r\n                 const data = res.data\r\n                 setInstitutions(data)\r\n            } catch (error) {\r\n                 console.log(\"ocurrio un error\")\r\n                 console.log(error)\r\n            }\r\n         }\r\n        getTickets()\r\n        getUsers()\r\n        getInstitutions()\r\n        \r\n        setInterval(() => { \r\n            getTickets()\r\n            getUsers()\r\n            getInstitutions()\r\n        }, 300000);\r\n    },[])\r\n\r\n\r\n    const handleInputChange =  async (data) => {\r\n         setTicket({...ticket, \r\n                        institution: data.ticketInstitution, \r\n                        description: data.ticketDescription,\r\n                        team : {...ticket.team,\r\n                            _user: data.ticketLeader,\r\n                            role: 'Leader'\r\n                        },\r\n                        start_date: data.start_date,\r\n                        end_date: data.end_date,\r\n                        priority: data.ticketPriority\r\n\r\n                })\r\n    }\r\n    \r\n    // Crear nuevo Ticket\r\n    const addTicket = async (data) => {      \r\n            setLoading(true)\r\n            let newTicket = {\r\n                institution: data.ticketInstitution._id,\r\n                description: data.ticketDescription,\r\n                team: {\r\n                    _user: data.ticketLeader,\r\n                    role: 'Leader',\r\n                },\r\n                start_date: data.start_date,\r\n                end_date: data.end_date,\r\n                priority: data.ticketPriority,\r\n                status: 'Sin Solucionar'\r\n            }\r\n            try {\r\n                const res = await axios.post('api/nuevo-ticket', newTicket)\r\n                setTicketsFilter([\r\n                    ...ticketsFilter,\r\n                    res.data\r\n                ])\r\n                if (mobile){\r\n                    setTicketsFilterMobile([...ticketsFilterMobile, res.data])\r\n                  }   \r\n                setNotification({ ...notification, open: true, message: \"Ticket Creado Correctamente\" })\r\n                emptyFields()\r\n                setTickets({ ...tickets, ticketsAll: tickets.ticketsAll + 1 })\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            setLoading(false);\r\n        \r\n        \r\n\r\n    }\r\n    // Elimina un Ticket\r\n    const deleteTicket = async data => {\r\n        let ticketsIds = [];\r\n        if(mobile){\r\n            ticketsIds.push(data)\r\n        }else{\r\n            data.map(ticket => ticketsIds.push(ticket._id))\r\n        }\r\n        const countTickets = ticketsIds.length;\r\n        const confirm = window.confirm(\"Estas Seguro de Eliminar El/Los Registro/s\")\r\n        try {\r\n            if(confirm){\r\n                await axios.post('api/ticket/delete/many', ticketsIds)\r\n                const arrayFiltrado = ticketsFilter.filter((ticket) => !ticketsIds.includes(ticket._id))\r\n                setTicketsFilter(arrayFiltrado)\r\n                if (mobile){\r\n                    currentPage === null ?\r\n                        setTicketsFilterMobile(arrayFiltrado.slice(0,10))\r\n                    :\r\n                        setTicketsFilterMobile(arrayFiltrado.slice((currentPage*10)-10,currentPage*10))\r\n                }\r\n                setNotification({...notification, open: true,  message: \"Ticket/s Eliminado/s Correctamente\"})\r\n                setTickets({...tickets, ticketsAll: tickets.ticketsAll-countTickets})\r\n            }     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const edition = row => {\r\n        setId(row._id)\r\n        setTicket({...ticket,\r\n            institution: row.institution.name,\r\n            description : row.description,\r\n            team : {\r\n                _user: row.team[0]._user._id,\r\n                nombre: row.team[0]._user.nombre,\r\n                role: 'Leader'\r\n            },\r\n            start_date: row.start_date,\r\n            end_date: row.end_date,\r\n            priority: row.priority,\r\n            status: row.status,        \r\n                \r\n        })\r\n        setEdit(true)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    // Actualizar Ticket\r\n    const editTicket =  async (data) => {\r\n        setLoading(true);\r\n        const ticketEdit= {\r\n                        ...(data.ticketInstitution !== undefined && { institution: data.ticketInstitution._id}),\r\n                        description: data.ticketDescription,\r\n                        team : {\r\n                            _user: data.ticketLeader,\r\n                            role: 'Leader',\r\n                        },\r\n                        start_date: data.start_date,\r\n                        end_date: data.end_date,\r\n                        priority: data.ticketPriority,\r\n                        status: data.status\r\n        }\r\n        try {\r\n            const res = await axios.put(`api/ticket/${id}`,ticketEdit)\r\n            const arrayEditado = ticketsFilter.map( item => (\r\n                item._id === id ? res.data : item\r\n            ))\r\n            setTicketsFilter(arrayEditado)\r\n            if (mobile){\r\n                currentPage === null ?\r\n                    setTicketsFilterMobile(arrayEditado.slice(0,10))\r\n                :\r\n                    setTicketsFilterMobile(arrayEditado.slice((currentPage*10)-10,currentPage*10))\r\n            }\r\n            setNotification({...notification, open: true, message: \"Ticket Editado Correctamente\"})\r\n            emptyFields()\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        setLoading(false);\r\n    }\r\n    // Filtrar tickets Mediante las Tarjetas\r\n    const filterTickets = (filtro) => {\r\n        if (filtro === \"Todos\"){\r\n            mobile ? setTicketsFilterMobile(tickets.data) : setTicketsFilter(tickets.data)\r\n            \r\n        } else if(filtro === \"Solucionado\") {\r\n            const filter =  tickets.data.filter( (ticket) => ticket.status === \"Solucionado\")\r\n            mobile ? setTicketsFilterMobile(filter) : setTicketsFilter(filter)     \r\n        }else if(filtro === \"Sin Solucionar\"){\r\n            const filter =  tickets.data.filter( (ticket) => ticket.status === \"Sin Solucionar\")\r\n            mobile ? setTicketsFilterMobile(filter) : setTicketsFilter(filter)\r\n        }else if(filtro === \"Vencidos\"){\r\n            const filter =  tickets.data.filter( (ticket) => (ticket.active === false && ticket.status === 'Sin Solucionar'))\r\n            mobile ? setTicketsFilterMobile(filter) : setTicketsFilter(filter)\r\n        }\r\n    }\r\n    // Cerrar formulario flotante\r\n    const closeForm = () => {\r\n        setOpenPopup(false)\r\n        setEdit(false)\r\n    }\r\n    // Devuelve el estado del Ticket a situacion inicial\r\n    const emptyFields = () =>{\r\n        closeForm()\r\n        setTicket({\r\n            institution: '',\r\n            description : '',\r\n            team : {\r\n                _user: '',\r\n                nombre: '',\r\n                role: 'Leader'\r\n            },\r\n            start_date: '',\r\n            end_date: '',\r\n            priority: '',\r\n            status:'Sin Solucionar',    \r\n        })\r\n        setId('')\r\n\r\n    }\r\n    const buscador = (palabra) => {\r\n        if(palabra === ''){\r\n            if(currentPage > 1){\r\n                setTicketsFilterMobile(ticketsFilter.slice((currentPage*10)-10,currentPage*10))\r\n            }else{\r\n                setTicketsFilterMobile(ticketsFilter.slice(0,10))\r\n            }\r\n        }else{\r\n            const palabraMinuscula = palabra.toLowerCase()\r\n            const arrayFiltrado = ticketsFilter.filter(ticket => (\r\n                ticket.institution.name.toLowerCase().indexOf(palabraMinuscula) !== -1 \r\n            ))\r\n            console.log(palabraMinuscula)\r\n      \r\n            setTicketsFilterMobile(arrayFiltrado)\r\n        }\r\n                \r\n      }\r\n\r\n      const paginator = (page) => {\r\n        setLoading(true)\r\n        setCurrentPage(page)\r\n        setTicketsFilterMobile(ticketsFilter.slice((page*10)-10,page*10))\r\n        setLoading(false)\r\n      }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: '100%' }}>\r\n            <Grid container>\r\n                <Notification \r\n                    message = {notification.message}\r\n                    open = {notification.open}\r\n                    severity= {\"success\"}\r\n                    setNotification={setNotification}\r\n                />\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box>\r\n                        <SimpleCard\r\n                            typeTickets= \"Tickets Totales\"\r\n                            totalsTickets= {tickets.ticketsAll}\r\n                            color=\"#2196f3\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Todos\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box ml={{\"md\": 3}} mt={{xs:2, sm:2, md:0, lg:0}} >\r\n                        <SimpleCard\r\n                            typeTickets=\"Tickets Solucionados\"\r\n                            totalsTickets={tickets.ticketsSolved}\r\n                            color=\"#4caf50\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Solucionado\"   \r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box ml={{\"md\": 3}} mt={{xs:2, sm:2, md:0, lg:0}} >\r\n                        <SimpleCard\r\n                            typeTickets=\"Tickets Sin Solucionar\"\r\n                            totalsTickets={tickets.ticketsUnsolved}\r\n                            color=\"#ffff70\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Sin Solucionar\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box ml={{\"md\": 3}} mt={{xs:2, sm:2, md:0, lg:0}}>\r\n                        <SimpleCard\r\n                            typeTickets= \"Tickets Vencidos\"\r\n                            totalsTickets= {tickets.ticketsExpired}\r\n                            color=\"#ff1744\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Vencidos\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n            <Box mt={2}>\r\n                {roleUser === 'Admin' &&\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() =>  setOpenPopup(true) }>\r\n                        Nuevo Ticket\r\n                    </Button>\r\n                }\r\n            </Box>\r\n            {mobile && \r\n                <Box mt={2} display=\"flex\" justifyContent=\"center\">\r\n                    <TextField\r\n                        id=\"input-with-icon-textfield\"\r\n                        label=\"Buscar por Institucion\"\r\n                        onChange={(e) => buscador(e.target.value)}\r\n                        InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                            <SearchIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                        }}\r\n                    />\r\n                </Box>\r\n            }\r\n            <Box mt={2}>\r\n                <Backdrop className={classes.backdrop} open={loading} onClick={!loading}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n                {mobile ? \r\n                    <CardMobile \r\n                        ticketsFilterMobile={ticketsFilterMobile}\r\n                        roleUser={roleUser}\r\n                        edition={edition}\r\n                        deleteTicket={deleteTicket}\r\n                    />\r\n                :\r\n                    <MaterialTable\r\n                        columns={[\r\n                            { title: 'Id', field: '_id', hidden: true},\r\n                            { title: 'Institucion', field: 'institution[name]' },\r\n                            { title: 'Descripcion', field: 'description' },\r\n                            { title: \"Prioridad\", field: 'priority', lookup: {Alta: \"Alta\", Media: \"Media\", Baja: \"Baja\" } },\r\n                            { title: 'Encargado', field: 'team[0][_user][nombre]' },\r\n                            { title: 'Fecha de Inicio', field: 'start_date',  type: \"date\", dateSetting: { locale: \"es-AR\"}},\r\n                            { title: 'Vencimiento', field: 'end_date',  type: \"date\", dateSetting: { locale: \"es-AR\"}},\r\n                            {title: 'Estado', field: 'status', lookup: { \"Solucionado\": \"Solucionado\", \"Sin Solucionar\": \"Sin Solucionar\" },\r\n                            render: rowData => <Chip color={rowData.status === \"Solucionado\"? \"primary\": \"secondary\"} size=\"small\" label={rowData.status} />}\r\n                        ]}\r\n                        data={ticketsFilter}\r\n                        actions={[\r\n                            {\r\n                                icon: () => <VisibilityIcon />,\r\n                                tooltip: 'Ver',\r\n                                position: 'row',\r\n                                onClick: (event, rowData) => props.history.push('/tickets/'+rowData._id),\r\n                            },    \r\n                            {\r\n                            hidden: roleUser !== 'Admin',\r\n                            icon: 'edit',\r\n                            tooltip: 'Editar',\r\n                            position: 'row',\r\n                            onClick: (event, rowData) => edition(rowData),\r\n                            },\r\n                            {\r\n                            hidden: roleUser !== 'Admin',\r\n                            icon: () => <DeleteIcon />,\r\n                            position: 'toolbarOnSelect',\r\n                            tooltip: 'Borrar',\r\n                            onClick: (event, rowData) => deleteTicket(rowData),\r\n                            }\r\n                            \r\n                        ]}\r\n                        options={{\r\n                            actionsColumnIndex: -1,\r\n                            selection: true,\r\n                            pageSize: 10,\r\n                            filtering: true,\r\n                            exportButton: true\r\n                        }}\r\n                        title=\"Tickets\"\r\n                    />    \r\n                }\r\n            </Box>\r\n            {mobile &&\r\n                <Box ml={-2} mt={2} display=\"flex\" justifyContent=\"center\">\r\n                    <Pagination count={pagePaginator} color=\"primary\" onChange={(e, page) => paginator(page)} />\r\n                 </Box>\r\n            }\r\n            <Popup\r\n                title= {edit ? \"Editar Ticket\" : \"Agregar Ticket\"}\r\n                openPopup={openPopup}\r\n                closeForm={closeForm}\r\n                loading={loading}               \r\n            >\r\n               <FormAdd \r\n                    setTicket={setTicket}\r\n                    ticket={ticket}\r\n                    users={users}\r\n                    institutions={institutions}\r\n                    addTicket={addTicket}\r\n                    handleInputChange={handleInputChange}\r\n                    editTicket= {editTicket}\r\n                    edit= {edit}\r\n                    setOpenPopup={setOpenPopup}\r\n                    emptyFields={emptyFields}\r\n                />\r\n            </Popup>\r\n\r\n        </div>\r\n    )\r\n}\r\n    const Tickets = (props) => {\r\n        return (\r\n            <div>\r\n                <Dashboard section = {\"Tickets\"}>\r\n                    <Tickets2 history={props.history}>\r\n\r\n                    </Tickets2>\r\n                </Dashboard>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Tickets\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {Button, Icon} from '@material-ui/core';\r\nimport Notification from './Notification';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  chatSection: {\r\n    width: '100%',\r\n    height: 'auto'\r\n  },\r\n  headBG: {\r\n      backgroundColor: '#e0e0e0'\r\n  },\r\n  borderRight500: {\r\n      borderRight: '1px solid #e0e0e0'\r\n  },\r\n  messageArea: {\r\n    height: '70vh',\r\n    overflowY: 'auto'\r\n  }\r\n});\r\n\r\nconst Chat = (props) => {\r\n  const {ticket, userId, comments} = props\r\n  const classes = useStyles();\r\n  const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n  const [notification, setNotification] = React.useState({open: false, message: '', severity: ''});\r\n  const [commentsTicket,setCommentsTicket] = React.useState(comments)\r\n  const url =  process.env.REACT_APP_URL;\r\n\r\n  React.useEffect(() => {\r\n    console.log(commentsTicket)\r\n  },[commentsTicket])\r\n\r\n  const [comment,setComent] = React.useState({\r\n    ticketId : ticket._id,\r\n    userId: userId,\r\n    comment : ''\r\n  })\r\n  const handleKeypress = e => {\r\n    if (e.key === 'Enter') {\r\n      addComment();\r\n    }\r\n  };\r\n\r\n  const addComment = async () => {\r\n    try {\r\n      const res = await axios.post('api/ticket/comment', comment)\r\n      setCommentsTicket(res.data.comments)\r\n      setComent({...comment, comment: ''})\r\n      setNotification({...notification, open: true,  message: \"Mensaje Enviado Correctamente\", severity: \"success\"})\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  const deleteComment = async (commentId) =>{\r\n    const ticketId = ticket._id\r\n    try {\r\n      await axios.delete(`api/ticket/comment/deleteComment?ticketId=${ticketId}&commentId=${commentId}`) \r\n      const arrayFiltrado = commentsTicket.filter(comment => comment._id !== commentId)\r\n      setCommentsTicket(arrayFiltrado)\r\n      setNotification({...notification, open: true,  message: \"Mensaje Eliminado Correctamente\", severity: \"error\"})\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <Grid container  className={classes.chatSection}>\r\n          <Notification \r\n                message = {notification.message}\r\n                open = {notification.open}\r\n                severity= {notification.severity}\r\n                setNotification={setNotification}\r\n            />\r\n            <Grid item xs={12} className={classes.borderRight500}>\r\n                <Grid item xs={12}>\r\n                    <TextField id=\"outlined-basic-email\"\r\n                      label=\"Mensaje\"\r\n                      variant=\"outlined\"\r\n                      value= {comment.comment}\r\n                      onKeyPress= {handleKeypress}\r\n                      onChange={e => setComent({...comment, comment: e.target.value})} \r\n                      fullWidth />\r\n                </Grid>\r\n                <Box ml={1} mt={2}>\r\n                    <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            endIcon={<Icon>send</Icon>}\r\n                            onClick={() => addComment()}\r\n                        >\r\n                            Enviar\r\n                    </Button>\r\n                </Box>\r\n                {\r\n                    commentsTicket.map( (comment) =>(\r\n                      <Box mt={2}>\r\n                       <Divider />\r\n                        <List>\r\n                            <ListItem button key={comment._user.nombre}>\r\n                                <ListItemIcon>\r\n                                  <Avatar alt=\"Remy Sharp\" src={`${url}/img/avatar.jpg`} />\r\n                                </ListItemIcon>\r\n                                <ListItemText \r\n                                    primary={comment._user.nombre}\r\n                                    secondary={comment.comment}  \r\n                                >       \r\n                                </ListItemText>\r\n                                {usuarioId === comment._user._id ?\r\n                                  <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"start\" aria-label=\"delete\" onClick={() => deleteComment(comment._id)}>\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </ListItemSecondaryAction>\r\n                                  :''  \r\n                                }\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                      </Box>  \r\n                    ))                    \r\n                  }\r\n          </Grid>  \r\n        </Grid>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Chat;","import React, {Fragment} from 'react'\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\nconst MapInstitution = (props) => {\r\n    const {lat, lng} = props;\r\n\r\n    return (\r\n        <Fragment>\r\n            <Map \r\n              google={props.google}\r\n              zoom={16}\r\n              initialCenter={{\r\n                lat: lat,\r\n                lng: lng\r\n              }}\r\n              center={{\r\n                lat: lat,\r\n                lng: lng\r\n              }}\r\n            >\r\n              <Marker \r\n                position={{\r\n                  lat: lat,\r\n                  lng: lng\r\n                }} \r\n              />    \r\n            </Map>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: ('AIzaSyDAwZoCkxg0z2pKbKsjZhBM_NX0S8H44vg'),\r\n    language:'es-ES'\r\n  })(MapInstitution)","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle, \r\n    FormControl, TextField, Button} \r\nfrom '@material-ui/core';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n    },\r\n  }));\r\n\r\n\r\nconst DialogEndTicket = (props) => {\r\n    const {notification, setNotification, ticket, setTicket, open, setOpen} = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const { errors, handleSubmit, control } = useForm();\r\n\r\n    const ticketSolve = async (data) => {\r\n        const solution = {\r\n            ticketId: ticket._id,\r\n            solution: data.ticketSolution\r\n\r\n        }\r\n        try {\r\n            await axios.post('api/ticket/solution/change', solution)\r\n            handleClose()\r\n            setNotification({ ...notification, open: true, message: \"Situacion del Ticket Informada\", severity: \"success\" })\r\n            setTicket({ ...ticket, solution: solution.solution })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    };\r\n    return (\r\n        <div>\r\n            <Dialog fullScreen={fullScreen} disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\r\n                <DialogTitle>Finalizar Ticket</DialogTitle>\r\n                <DialogContent>\r\n                    <form onSubmit={handleSubmit(ticketSolve)} className={classes.root} className={classes.container}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <Controller\r\n                                rules={{\r\n                                    required: {\r\n                                        value: true,\r\n                                        message: 'Campo requerido'\r\n                                    },\r\n                                    minLength: {\r\n                                        value: 6,\r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n\r\n                                }}\r\n                                control={control}\r\n                                name=\"ticketSolution\"\r\n                                id=\"ticketSolution\"\r\n                                label=\"Que se Hizo\"\r\n                                variant=\"outlined\"\r\n                                defaultValue={''}\r\n\r\n                                as={\r\n                                    <TextField\r\n                                        error={errors.ticketSolution ? true : false}\r\n                                        helperText={errors.ticketSolution ? errors.ticketSolution.message : null}\r\n\r\n                                    />\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button onClick={handleSubmit(ticketSolve)} color=\"primary\">\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogEndTicket \r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport {Button, Chip,Typography, Box, Grid} from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport MapInstitution from '../../GoogleMaps/MapInstitution';\r\nimport DialogEndTicket from './DialogEndTicket'\r\nconst Detalles = (props) => {\r\n    const {institution, institutionAddress, usuarioId, notification, setNotification, responsible, ticket, setTicket} = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Box>\r\n                    <DialogEndTicket\r\n                        open={open}\r\n                        setOpen={setOpen} \r\n                        notification={notification}\r\n                        setNotification={setNotification}\r\n                        ticket={ticket}\r\n                        setTicket={setTicket}\r\n                        usuarioId={usuarioId}\r\n                    />        \r\n                </Box>\r\n                <Grid item xs={12}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        {responsible.map(item => (item.role === 'Leader' && item._user._id === usuarioId && ticket.solution === '') ?\r\n                            <Button onClick={handleClickOpen}>Cambiar Estado Ticket</Button>\r\n                            : '')}\r\n                        {(ticket.solution !== '' && ticket.status === 'Sin Solucionar') &&\r\n                            <Chip label=\"Ticket Pendiente de Autorizacion\" variant=\"outlined\" color=\"primary\" />\r\n                        }\r\n                        {ticket.status === 'Solucionado' &&\r\n                            <Chip label=\"Ticket Resuelto\" variant=\"outlined\" icon={<CheckIcon />} color=\"default\" style={{ backgroundColor: '#8bc34a' }} />\r\n                        }\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={6} >\r\n                    <Box>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Institucion\r\n                    </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            {institution.name}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Descripcion\r\n                    </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            {ticket.description}\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <Box>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Direccion:\r\n                    </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            {institutionAddress.name}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Fechas\r\n                    </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            Fecha Inicio: {moment(ticket.start_date, 'YYYY-MM-DD').format('DD-MM-YYYY')}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            Fecha Vencimiento: {moment(ticket.end_date, 'YYYY-MM-DD').format('DD-MM-YYYY')}\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ position: 'relative', height: '40vh' }}>\r\n                    <MapInstitution\r\n                        lat={institutionAddress.lat}\r\n                        lng={institutionAddress.lng}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detalles\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, TextField} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n    },\r\n  }));\r\n\r\nconst DialogEquipo = (props) => {\r\n    const {notification, setNotification, ticket, open, setOpen, userTeam, team, setTeam, setResponsible} = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n    const addMembersTeam = async () => {\r\n        const membersTeam = {\r\n            ticketId: ticket._id,\r\n            members: team\r\n        }\r\n        try {\r\n            const res = await axios.post('api/ticket/team/addMembersTeam', membersTeam)\r\n            handleClose()\r\n            setResponsible(res.data.team)\r\n            setNotification({ ...notification, open: true, message: \"Miembro/s Agregados Correctamente\", severity: \"success\" })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleInputChange = (event, value)  =>{\r\n        setTeam(value);\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog fullScreen={fullScreen} disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\r\n                <DialogTitle>Agregar Integrantes</DialogTitle>\r\n                <DialogContent>\r\n                    <form className={classes.container}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                id=\"tags-standard\"\r\n                                options={userTeam}\r\n                                getOptionLabel={(option) => option.nombre}\r\n                                onChange={handleInputChange}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        variant=\"standard\"\r\n                                        label=\"Integrantes\"\r\n                                        placeholder=\"Usuarios\"\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </FormControl>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button onClick={addMembersTeam} color=\"primary\">\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogEquipo\r\n","import React, {Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport {Button, Typography, Box, Grid, List, ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, IconButton  } from '@material-ui/core'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DialogEquipo from './DialogEquipo';\r\n\r\nconst Equipo = (props) => {\r\n    const {team, setTeam, setResponsible, usuarioId, notification, setNotification, responsible, ticket, userTeam} = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const deleteMembersTeam = async (userId) => {\r\n        const ticketId = ticket._id\r\n        try {\r\n            const res = await axios.delete(`api/ticket/team/deleteMembersTeam?ticketId=${ticketId}&userId=${userId}`)\r\n            setResponsible(res.data.team)\r\n            setNotification({ ...notification, open: true, message: \"Miembro Eliminado Correctamente\", severity: \"error\" })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <DialogEquipo\r\n                    open={open}\r\n                    setOpen={setOpen} \r\n                    notification={notification}\r\n                    setNotification={setNotification}\r\n                    ticket={ticket}\r\n                    setResponsible={setResponsible}\r\n                    team={team}\r\n                    setTeam={setTeam}\r\n                    userTeam={userTeam}\r\n                />\r\n                <Grid xs={12}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        {responsible.map(item => (item.role === 'Leader' && item._user._id === usuarioId && ticket.solution === '') ?\r\n                            <Button onClick={handleClickOpen}>Agregar al Equipo</Button>\r\n                            : '')}\r\n                        \r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={-2}>\r\n                <Grid md={6}>\r\n                    <Box>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Encargado:\r\n                    </Typography>\r\n                        <List dense>\r\n                            {responsible.map(item =>\r\n                                item.role === 'Leader' ?\r\n                                    <Fragment>\r\n                                        <ListItem>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar>\r\n                                                    <PersonIcon />\r\n                                                </Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText\r\n                                                primary={item._user.nombre}\r\n                                                secondary={null}\r\n                                            />\r\n                                        </ListItem>\r\n                                    </Fragment>\r\n                                    : ''\r\n                            )}\r\n                        </List>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid md={6}>\r\n                    <Box>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Equipo de Soporte:\r\n                    </Typography>\r\n                        <List dense>\r\n                            {responsible.map(item =>\r\n                                item.role === 'Support' ?\r\n                                    <Fragment>\r\n                                        <ListItem>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar>\r\n                                                    <PersonIcon />\r\n                                                </Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText\r\n                                                primary={item._user.nombre}\r\n                                                secondary={null}\r\n                                            />\r\n                                            {ticket.team[0]._user._id === usuarioId &&\r\n                                                <ListItemSecondaryAction>\r\n                                                    <IconButton edge=\"start\" aria-label=\"delete\" onClick={() => deleteMembersTeam(item._user._id)}>\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </ListItemSecondaryAction>\r\n                                            }\r\n                                        </ListItem>\r\n                                    </Fragment>\r\n                                    : ''\r\n                            )}\r\n                        </List>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Equipo\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Tabs, Tab, Typography, Box} from '@material-ui/core';\r\nimport Chat from './Chat';\r\nimport Notification from './Notification';\r\nimport Detalles from './Tabs/Detalles';\r\nimport Equipo from './Tabs/Equipo';\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 400,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto(props) {\r\n  const {ticket, setTicket,  responsible, setResponsible, usuarioId, comments, users, institution, institutionAddress} = props\r\n  const classes = useStyles();\r\n  const [notification, setNotification] = React.useState({open: false, message: '', severity: ''});\r\n  const [value, setValue] = React.useState(0);\r\n  const [team, setTeam] = React.useState([])\r\n  const [userTeam, setUserTeam] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    const getUsersTeam = () => {\r\n      const usersRepeat = []\r\n      responsible.map(user => usersRepeat.push(user._user._id) )\r\n      const arrayFiltrado = users.filter((user) => !usersRepeat.includes(user._id))\r\n      setUserTeam(arrayFiltrado)\r\n    }\r\n    getUsersTeam()\r\n  },[responsible])\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Notification \r\n                message = {notification.message}\r\n                open = {notification.open}\r\n                severity= {notification.severity}\r\n                setNotification={setNotification}\r\n      />\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          <Tab label=\"Detalles\" {...a11yProps(0)} />\r\n          <Tab label=\"Equipo\" {...a11yProps(1)} />\r\n          <Tab label=\"Mensajes\" {...a11yProps(2)} />\r\n          {/* <Tab label=\"Item Four\" {...a11yProps(3)} />\r\n          <Tab label=\"Item Five\" {...a11yProps(4)} />\r\n          <Tab label=\"Item Six\" {...a11yProps(5)} />\r\n          <Tab label=\"Item Seven\" {...a11yProps(6)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n          <Detalles\r\n            institutionAddress={institutionAddress}\r\n            institution={institution}\r\n            responsible={responsible}\r\n            usuarioId={usuarioId}\r\n            ticket={ticket}\r\n            setTicket={setTicket}\r\n            notification={notification}\r\n            setNotification={setNotification}\r\n\r\n          />\r\n\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Equipo\r\n          userTeam={userTeam}\r\n          team={team}\r\n          setTeam={setTeam}\r\n          responsible={responsible}\r\n          setResponsible={setResponsible}\r\n          usuarioId={usuarioId}\r\n          ticket={ticket}\r\n          setTicket={setTicket}\r\n          notification={notification}\r\n          setNotification={setNotification}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Chat\r\n          ticket = {ticket}\r\n          userId = {usuarioId}\r\n          comments = {comments}\r\n        >\r\n              \r\n        </Chat>\r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={3}>\r\n        Item Four\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        Item Five\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        Item Six\r\n      </TabPanel>\r\n      <TabPanel value={value} index={6}>\r\n        Item Seven\r\n      </TabPanel> */} \r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TabsCentered from '../ui/TabsCentered';\r\nimport {useParams} from 'react-router-dom'\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\nconst Detalles2 = () => {\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const [users, setUsers] = React.useState([])\r\n    const [ticketInfo, setTicketInfo] = React.useState({})\r\n    const [responsible, setResponsible] = React.useState([])\r\n    const [institution, setInsitutiton] = React.useState([])\r\n    const [institutionAddress, setInstitutionAddress] = React.useState([])\r\n    const [comments, setComments] = React.useState([])\r\n    const {id} = useParams()\r\n    const [ticketId, setTicketId] = React.useState(id)\r\n    React.useEffect(() => {\r\n      const ticketData = async (id) =>{\r\n        try {\r\n          const res = await axios.get(`api/ticket/${id}`)\r\n          const data = res.data\r\n          setTicketInfo(data)\r\n          setResponsible(data.team)\r\n          setComments(data.comments)\r\n          setInsitutiton(data.institution)\r\n          setInstitutionAddress(data.institution.address)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n      const getUsers = async () => {\r\n        try {\r\n             const res = await axios.get('users/users')\r\n             const data = res.data\r\n             setUsers(data)\r\n             console.log(users)\r\n        } catch (error) {\r\n             console.log(\"ocurrio un error\")\r\n             console.log(error)\r\n        }\r\n      }\r\n      ticketData(ticketId)\r\n      getUsers()\r\n\r\n    },[])\r\n    return (\r\n      <React.Fragment>\r\n            <TabsCentered\r\n              ticket = {ticketInfo}\r\n              setTicket = {setTicketInfo}\r\n              responsible = {responsible}\r\n              setResponsible = {setResponsible}\r\n              usuarioId = {usuarioId}\r\n              comments = {comments}\r\n              users = {users}\r\n              institution={institution}\r\n              institutionAddress={institutionAddress}\r\n            >\r\n          </TabsCentered>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  const Detalles = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Detalles del Ticket\"}>\r\n                <Detalles2>\r\n\r\n                </Detalles2>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Detalles\r\n","import React, {Fragment, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport listPlugin from '@fullcalendar/list';\r\nimport esLocale from '@fullcalendar/core/locales/es';\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\n\r\nconst Calendar2 = () => {\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const [tickets, setTickets] = useState([])\r\n    const [events, setEvents] = useState([])\r\n    const buttons = window.matchMedia(\"(max-width: 700px)\").matches ? {center: '',right:  'prev,next'} : {center: 'dayGridWeek dayGridMonth listWeek'};\r\n    React.useEffect( () => {\r\n        const getTickets = async () =>{  \r\n           try {\r\n                const res = await axios.get(`api/ticket?usuarioId=${usuarioId}`)\r\n                setTickets(res.data.data)\r\n           } catch (error) {\r\n               console.log(\"ocurrio un error\")\r\n               console.log(error)\r\n           }\r\n        }\r\n        getTickets()\r\n    }, [])\r\n\r\n    React.useEffect( () =>  {\r\n        tickets.map((ticket) => (\r\n            (ticket.status === 'Sin Solucionar') &&\r\n            setEvents(prevState => \r\n                [...prevState, { title: ticket.institution.name , start: ticket.start_date, end: ticket.end_date, url: `/tickets/${ticket._id}`, backgroundColor : ticket.active ? '#165CFF' : '#FF2416', borderColor: ticket.active === false && '#FF2416' }])\r\n        ))\r\n    },[tickets])\r\n    return (\r\n        <Fragment>\r\n            <FullCalendar\r\n                plugins={[ dayGridPlugin, listPlugin, dayGridPlugin   ]}\r\n                headerToolbar= {\r\n                    buttons\r\n                }\r\n                initialView=\"dayGridMonth\"\r\n                height =  \"auto\"\r\n                locale={esLocale}\r\n                events={events}\r\n                showNonCurrentDates={false}\r\n                \r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Calendar = () => {\r\n    return (\r\n        <Dashboard section={\"Calendario de Tareas\"}>\r\n            <Calendar2>\r\n\r\n            </Calendar2>\r\n        </Dashboard>\r\n    )\r\n\r\n}\r\n\r\nexport default Calendar\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport Dashboard from '../dashboard/Dashboard'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Notification from '../ui/Notification';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n  \r\nconst Pendientess = () => {\r\n    const classes = useStyles();\r\n    const [notification, setNotification] = React.useState({open: false, message: '', severity: ''});\r\n    const [tickets, setTickets] = React.useState([])\r\n    const url =  process.env.REACT_APP_URL;\r\n\r\n    React.useEffect( () => {\r\n        const getTickets = async () =>{  \r\n           try {\r\n                const res = await axios.get('api/ticket/solution/pending')\r\n                const data = res.data\r\n                setTickets(data.data)\r\n           } catch (error) {\r\n               console.log(\"ocurrio un error\")\r\n               console.log(error)\r\n           }\r\n        }\r\n        getTickets()\r\n    },[])\r\n\r\n    const ticketAprobed = async (id) => {\r\n        const ticketId = {\r\n            ticketId : id\r\n        }\r\n        try {\r\n            await axios.post('api/ticket/solution/aprobed',ticketId)\r\n            setNotification({...notification, open: true,  message: \"Ticket Marcado como Solucionado\", severity: \"success\"})\r\n            const arrayTickets = tickets.filter(ticket => ticket._id !== id)\r\n            setTickets(arrayTickets)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Notification \r\n                message = {notification.message}\r\n                open = {notification.open}\r\n                severity= {notification.severity}\r\n                setNotification={setNotification}\r\n            />\r\n            <Grid container spacing={1}>\r\n                {\r\n                    tickets.map(ticket => \r\n                        <Grid item md={4} xs={12} sm={6}>\r\n                            <Card className={classes.root}>\r\n                                <CardActionArea>\r\n                                    <CardMedia\r\n                                    className={classes.media}\r\n                                    image={`${url}/img/ticket.jpg`}\r\n                                    title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        {ticket.name}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {ticket.solution}\r\n                                    </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" color=\"primary\" href={`/tickets/${ticket._id}`}>\r\n                                        Ver Ticket\r\n                                    </Button>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => ticketAprobed(ticket._id)}>\r\n                                        Solucionado\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>  \r\n                    \r\n                    )\r\n                }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Pendientes = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Tickets Pendientes de Aprobacion\"}>\r\n                <Pendientess>\r\n\r\n                </Pendientess>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pendientes\r\n","import React, {useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid,Button, Box, FormControl, FormHelperText, InputLabel, MenuItem , Select , TextField, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '25ch',\r\n    },\r\n  }));\r\n\r\nconst FormAddEdit = (props) => {\r\n    const {user, addUser,editUser, edit, emptyFields} = props;\r\n    const classes = useStyles();\r\n    const {errors, handleSubmit, control, watch} = useForm();\r\n    \r\n    const password = watch(\"userPassword\");\r\n    const handleChangeCheckBox = (event) => {\r\n        setCheckBox(event.target.checked);\r\n      };\r\n    const [checkBox, setCheckBox] = useState(() => {\r\n    const initialState = !edit;\r\n    return initialState;\r\n    });\r\n    return (\r\n        <div>\r\n            <form onSubmit={edit ? handleSubmit(editUser) : handleSubmit(addUser)} className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                    minLength: {\r\n                                        value: 6, \r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userName\" \r\n                            id=\"userName\"\r\n                            label=\"Nombre\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={user.name || ''}\r\n                            \r\n                            as={\r\n                            <TextField\r\n                                error={ errors.userName ? true : false }\r\n                                helperText={errors.userName ? errors.userName.message : null} \r\n                                \r\n                            />\r\n                        }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                    minLength: {\r\n                                        value: 6, \r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userLastName\" \r\n                            id=\"userLastName\"\r\n                            label=\"Apellido\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={user.lastName || ''}\r\n                            \r\n                            as={\r\n                            <TextField\r\n                                error={ errors.userLastName ? true : false }\r\n                                helperText={errors.userLastName ? errors.userLastName.message : null} \r\n                                \r\n                            />\r\n                        }\r\n                        />\r\n                        <Box>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel id=\"labelPrioridad\">Rol</InputLabel>\r\n                                <Controller\r\n                                name=\"userRole\"\r\n                                control={control}\r\n                                rules={{required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                    defaultValue={user.role || ''}\r\n                                as={\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        label=\"Prioridad\"\r\n                                        id=\"ticketPriority\"                                       \r\n                                        value={user.role}\r\n                                        error={ errors.userRole ? true : false }   \r\n                                        >\r\n                                        <MenuItem value={'User'}>Usuario</MenuItem>\r\n                                        <MenuItem value={'Admin'}>Admin</MenuItem>\r\n                                    </Select>\r\n                                }\r\n                                />\r\n                                 <FormHelperText\r\n                                    error={ errors.userRole ? true : false }\r\n                                >\r\n                                    {errors.userRole ? errors.userRole.message : null} \r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                    <Grid xs={12} sm={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                        pattern: {\r\n                                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                            message: \"Email con Formato Invalido\",\r\n                                          },\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userEmail\" \r\n                            type=\"email\"\r\n                            id=\"userEmail\"\r\n                            label=\"Email\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={user.email || ''}\r\n                            \r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.userEmail ? true : false }\r\n                                    helperText={errors.userEmail ? errors.userEmail.message : null} \r\n                                    \r\n                                />\r\n                                }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    required:  {\r\n                                        value: checkBox? true: false, \r\n                                        message: 'Campo requerido'\r\n                                        },\r\n                                    minLength: {\r\n                                        value: 6,\r\n                                        message: \"La Contraseña Tiene que Tener al Menos 6 Caracteres\"\r\n                                    } \r\n                            }}\r\n                            control={control}\r\n                            name=\"userPassword\" \r\n                            type=\"password\"\r\n                            id=\"userPassword\"\r\n                            label=\"Contraseña\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={''}\r\n                            disabled={!checkBox}\r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.userPassword ? true : false }\r\n                                    helperText={errors.userPassword ? errors.userPassword.message : null} \r\n                                    \r\n                                />\r\n                                }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: checkBox? true: false, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                        validate: value => (value === password || !checkBox) || \"Las contraseñas no Coinciden\"\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userPasswordRepeat\" \r\n                            type=\"password\"\r\n                            id=\"userPasswordRepeat\"\r\n                            label=\"Repetir Contraseña\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={''}\r\n                            disabled={!checkBox}\r\n                            \r\n                            as={\r\n                                    <TextField\r\n                                        error={ errors.userPasswordRepeat ? true : false }\r\n                                        helperText={errors.userPasswordRepeat ? errors.userPasswordRepeat.message : null} \r\n                                        \r\n                                    />\r\n                                }\r\n                        />               \r\n                    </Grid>\r\n                    <Grid xs={12} sm={12}>\r\n                        {edit &&\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={checkBox} onChange={handleChangeCheckBox} color=\"primary\" />}\r\n                                label=\"Desea Cambiar la Contraseña\"\r\n                            />\r\n                        }\r\n                    </Grid>               \r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\" m={1} p={1}>\r\n                        <Button color=\"primary\" type=\"button\" onClick={() =>  emptyFields()}>\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                            Guardar\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAddEdit\r\n\r\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {Box, Grid, Card, CardContent, Typography, Chip} from \"@material-ui/core\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: '100%',\r\n    minWidth: 330,\r\n    //maxWidth: 345,\r\n\r\n  },\r\n  media: {\r\n    height: 300,\r\n  },\r\n  cardAction:{\r\n    justifyContent: 'center'\r\n  }\r\n});\r\n\r\n\r\nexport default function SimpleCard(props) {\r\n  const {usersMobile, edition, deleteUser} = props\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div>\r\n      <Box>\r\n        <Grid container spacing={3}>\r\n          {usersMobile.map(user =>\r\n            <Grid item xs={12} sm={12} key={user._id}>\r\n              <Card className={classes.card}>\r\n                {/* <CardMedia\r\n                  className={classes.media}\r\n                  image={character.img_url}\r\n                />  */}\r\n                <CardContent>\r\n                  <Typography color=\"primary\" variant=\"h6\">\r\n                    {user.nombre} {\" \"}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                    Apellido: {user.lastName}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                    email: {user.email}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                    Rol: {user.role}\r\n                  </Typography>\r\n                </CardContent>\r\n                <Divider />\r\n                <CardActions className={classes.cardAction}>\r\n                  <Button size=\"small\" onClick={() => edition(user)}><EditIcon /></Button>\r\n                  <Button size=\"small\" onClick={() => deleteUser(user._id)}><DeleteIcon /></Button>\r\n                </CardActions>\r\n\r\n              </Card>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n     \r\n    \r\n  );\r\n}","import React, {Fragment, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { Box, Button, CircularProgress, Grid, TextField, InputAdornment, Backdrop} from '@material-ui/core';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MaterialTable from 'material-table'\r\nimport FormAddEdit from './Forms/Add-Edit'\r\nimport Popup from '../../ui/Popup'\r\nimport Notification from '../../ui/Notification'\r\nimport Dashboard from '../../dashboard/Dashboard'\r\nimport CardMobileUsers from '../../ui/CardMobileUsers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  }));\r\n\r\n\r\nconst Users2 = () => {\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    const mobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const roleUser = useSelector(store => store.usuario.usuario.data.role)\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [notification, setNotification] = React.useState({open: false, message: ''});\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        lastName: '',\r\n        role: '',\r\n        email: '',\r\n    });\r\n    const [users, setUsers] = useState([]);\r\n    const [edit, setEdit] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [usersMobile, setUsersMobile] = useState([]);\r\n    const [pagePaginator, setPagePaginator] = React.useState(null);\r\n    const [currentPage, setCurrentPage ] = React.useState(null);\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () =>{\r\n            setLoading(true)\r\n            const res =  await axios.get('users/users')\r\n            setUsersMobile(res.data.slice(0,10))\r\n            setPagePaginator(Math.ceil((res.data.length)/10))\r\n            setUsers(res.data)\r\n            setLoading(false)\r\n        }\r\n        getUsers();\r\n    },[])\r\n\r\n    const addUser = async (data) => {\r\n        setLoading(true)\r\n        const newUser = {\r\n            name: data.userName,\r\n            lastName: data.userLastName,\r\n            email: data.userEmail,\r\n            password: data.userPassword,\r\n            role: data.userRole\r\n        }\r\n        try {\r\n            const res = await axios.post('users/users', newUser)\r\n            setUsers([\r\n                ...users,\r\n                res.data\r\n            ])\r\n            if (mobile){\r\n                setUsersMobile([...usersMobile, res.data])\r\n              }   \r\n            setNotification({...notification, open: true,  message: \"Usuario Creado Correctamente\"})\r\n            emptyFields()\r\n            setLoading(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const edition = (row) => {\r\n        setId(row._id)\r\n        setUser({\r\n            name: row.nombre,\r\n            lastName: row.lastName,\r\n            email: row.email,\r\n            role: row.role\r\n        })\r\n        setEdit(true)\r\n        setOpenPopup(true)\r\n        console.log(user)\r\n    }\r\n\r\n    // Actualizar Usuario\r\n    const editUser =  async (data) => {\r\n        setLoading(true)\r\n        const userEdit = {\r\n            name: data.userName,\r\n            lastName: data.userLastName,\r\n            email: data.userEmail,\r\n            password: data.userPassword,\r\n            role: data.userRole\r\n        }\r\n        try {\r\n            const res = await axios.put(`users/users/${id}`,userEdit)\r\n            const arrayEditado = users.map( user => (\r\n                user._id === id ? res.data : user\r\n            ))\r\n            console.log(res.data)\r\n            setUsers(arrayEditado)\r\n            if (mobile){\r\n                currentPage === null ?\r\n                    setUsersMobile(arrayEditado.slice(0,10))\r\n                :\r\n                    setUsersMobile(arrayEditado.slice((currentPage*10)-10,currentPage*10))\r\n            }\r\n            setNotification({...notification, open: true, message: \"Usuario Editado Correctamente\"})\r\n            emptyFields()\r\n            setLoading(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const deleteUser = async data => {\r\n        let usersIds = [];\r\n        if(mobile){\r\n            usersIds.push(data)\r\n        }else{\r\n            data.map(user => usersIds.push(user._id))\r\n        }\r\n        const confirm = window.confirm(\"Estas Seguro de Eliminar El/Los Registro/s\")\r\n        try {\r\n            if(confirm){\r\n                await axios.post('users/users/delete/many', usersIds)\r\n                const arrayFiltrado = users.filter((user) => !usersIds.includes(user._id))\r\n                setUsers(arrayFiltrado)\r\n                if (mobile){\r\n                    currentPage === null ?\r\n                        setUsersMobile(arrayFiltrado.slice(0,10))\r\n                    :\r\n                        setUsersMobile(arrayFiltrado.slice((currentPage*10)-10,currentPage*10))\r\n                }\r\n                setNotification({...notification, open: true,  message: \"Usuario/s Eliminado/s Correctamente\"})\r\n            }     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Cerrar formulario flotante\r\n    const closeForm = () => {\r\n        setOpenPopup(false)\r\n        setEdit(false)\r\n    }\r\n    // Devuelve el estado del Ticket a situacion inicial\r\n    const emptyFields = () =>{\r\n        closeForm()\r\n        setUser({\r\n            name: '',\r\n            lastName: '',\r\n            role: '',\r\n            email: ''\r\n        })\r\n        setId('')\r\n\r\n    }\r\n\r\n    const paginator = (page) => {\r\n        setLoading(true)\r\n        setCurrentPage(page)\r\n        setUsersMobile(users.slice((page*10)-10,page*10))\r\n        setLoading(false)\r\n    }\r\n\r\n    const buscador = (palabra) => {\r\n        if(palabra === ''){\r\n            if(currentPage > 1){\r\n                setUsersMobile(users.slice((currentPage*10)-10,currentPage*10))\r\n            }else{\r\n                setUsersMobile(users.slice(0,10))\r\n            }\r\n        }else{\r\n            const palabraMinuscula = palabra.toLowerCase()\r\n            const arrayFiltrado = users.filter(user => (\r\n                user.nombre.toLowerCase().indexOf(palabraMinuscula) !== -1 \r\n            ))\r\n            setUsersMobile(arrayFiltrado)\r\n        }         \r\n      }\r\n    return (\r\n        <Fragment>\r\n            <Grid container spacing={1}>\r\n                <Grid item sm={12}> \r\n                    <Box>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() =>  setOpenPopup(true)}>\r\n                            Nuevo Usuario\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {mobile && \r\n                        <Box mt={2} display=\"flex\" justifyContent=\"center\">\r\n                            <TextField\r\n                                id=\"input-with-icon-textfield\"\r\n                                label=\"Buscar por Nombre\"\r\n                                onChange={(e) => buscador(e.target.value)}\r\n                                InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                    <SearchIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                                }}\r\n                            />\r\n                        </Box>\r\n                    }\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                    <Box mt={2}>\r\n                        <Backdrop className={classes.backdrop} open={loading} onClick={!loading}>\r\n                                <CircularProgress color=\"inherit\" />\r\n                            </Backdrop>\r\n                            {mobile ?\r\n                                <CardMobileUsers \r\n                                    usersMobile={usersMobile}\r\n                                    edition={edition}\r\n                                    deleteUser={deleteUser}\r\n                                />\r\n                            :\r\n                            <MaterialTable\r\n                                columns={[\r\n                                    { title: 'Id', field: '_id', hidden: true},\r\n                                    { title: 'Nombre', field: 'nombre' },\r\n                                    { title: 'Apellido', field: 'lastName' },\r\n                                    { title: \"role\", field: 'role'},\r\n                                    { title: 'email', field: 'email' },\r\n                                ]}\r\n                                data={users}\r\n                                actions={[\r\n                                    {\r\n                                    hidden: roleUser !== 'Admin',\r\n                                        icon: 'edit',\r\n                                        tooltip: 'Editar',\r\n                                        position: 'row',\r\n                                        onClick: (event, rowData) => edition(rowData),\r\n                                    },\r\n                                    {\r\n                                        hidden: roleUser !== 'Admin',\r\n                                        icon: () => <DeleteIcon />,\r\n                                        position: 'toolbarOnSelect',\r\n                                        tooltip: 'Borrar',\r\n                                        onClick: (event, rowData) => deleteUser(rowData),\r\n                                    }\r\n                                ]}\r\n                                options={{\r\n                                    actionsColumnIndex: -1,\r\n                                    selection: true,\r\n                                    pageSize: 10\r\n                                }}\r\n                                title=\"Usuarios\"\r\n                            />\r\n                        }\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            {mobile &&\r\n                <Box ml={-2} mt={2} display=\"flex\" justifyContent=\"center\">\r\n                    <Pagination count={pagePaginator} color=\"primary\" onChange={(e, page) => paginator(page)} />\r\n                 </Box>\r\n            }\r\n\r\n            <Notification \r\n                    message = {notification.message}\r\n                    open = {notification.open}\r\n                    severity= {\"success\"}\r\n                    setNotification={setNotification}\r\n            />\r\n            <Popup\r\n               openPopup={openPopup}  \r\n               title= {edit ? \"Editar Usuario\" : \"Agregar Usuario\"} \r\n               closeForm={closeForm}  \r\n               loading={loading}         \r\n            >\r\n               <FormAddEdit\r\n                edit={edit}\r\n                user={user}\r\n                addUser = {addUser}\r\n                editUser = { editUser} \r\n                emptyFields={emptyFields}  \r\n                />\r\n            </Popup>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Users = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Usuarios\"}>\r\n                <Users2>\r\n\r\n                </Users2>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Users\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport GooglePlacesAutocomplete,{ geocodeByLatLng, geocodeByAddress, getLatLng} from 'react-google-places-autocomplete';\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\n\r\n\r\nconst Maps = (props) => {\r\n    const {setDataAddress, institution, edit} = props;\r\n    const [address, setAddress] = useState(null);\r\n    const [ showingInfoWindow, setShowingInfoWindow ] = useState(false);\r\n    const [activeMarker, setActiveMarker] = useState({});\r\n    const [selectedPlace, setSelectedPlace] = useState({});\r\n    const [mapCenter, setMapCenter] = useState({ lat: -26.185164, lng: -58.174386});\r\n\r\n    useEffect(() =>{\r\n      if (edit) {\r\n        setDataAddress(institution.address)\r\n        let placeHolder = document.getElementsByClassName(\"css-1wa3eu0-placeholder\");\r\n        if(placeHolder.length > 0){\r\n          placeHolder[0].innerHTML = institution.address.name;\r\n        }\r\n        setMapCenter({lat: institution.address.lat, lng: institution.address.lng})\r\n      }\r\n    },[])\r\n\r\n    const containerStyle = {\r\n      marginTop : '10px',\r\n      // marginLeft: '-50px',\r\n      // position: 'absolute ',  \r\n      // width: '100%',\r\n      // height: '50%'\r\n    }\r\n    \r\n\r\n    const handleChange = async dire => {\r\n      setAddress(dire.label)\r\n      try {\r\n        const res = await geocodeByAddress(dire.label)\r\n        const results = await getLatLng(res[0])\r\n        const addressParse = getAddressObject(res[0].address_components)\r\n        const label = res[0].formatted_address;\r\n        setDataAddress({name: label, locality: addressParse.locality, department:addressParse.departament, lat: results.lat, lng:results.lng});\r\n        setMapCenter(results)\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    };\r\n    const geocodeLatLng = async (lat, lng) => {\r\n       try {\r\n        const res = await geocodeByLatLng({ lat: lat, lng: lng });\r\n        const addressParse = getAddressObject(res[0].address_components)\r\n        const label = res[0].formatted_address;\r\n        console.log(addressParse)\r\n        setAddress(label)\r\n        setDataAddress({name: label, locality: addressParse.locality, department:addressParse.departament, lat: lat, lng:lng});\r\n        \r\n        let placeHolder = document.getElementsByClassName(\"css-1wa3eu0-placeholder\");\r\n        if(placeHolder.length > 0){\r\n          placeHolder[0].innerHTML = label;\r\n        }\r\n        let name = document.getElementsByClassName(\"css-1uccc91-singleValue\");\r\n        if(name.length > 0){\r\n          name[0].innerHTML = label;\r\n        }\r\n       \r\n       } catch (error) {\r\n         console.log(error);\r\n       }\r\n    };\r\n\r\n    const getAddressObject = (address_components) =>{\r\n      const ShouldBeComponent = {\r\n        home: [\"street_number\"],\r\n        postal_code: [\"postal_code\"],\r\n        street: [\"street_address\", \"route\"],\r\n        province: [\r\n          \"administrative_area_level_1\",\r\n          \"administrative_area_level_3\",\r\n          \"administrative_area_level_4\",\r\n          \"administrative_area_level_5\"\r\n        ],\r\n        locality: [\r\n          \"locality\",\r\n          \"sublocality\",\r\n          \"sublocality_level_1\",\r\n          \"sublocality_level_2\",\r\n          \"sublocality_level_3\",\r\n          \"sublocality_level_4\"\r\n        ],\r\n        departament:[\r\n          \"administrative_area_level_2\",\r\n        ],\r\n        country: [\"country\"]\r\n      };\r\n\r\n      const address = {\r\n        home: \"\",\r\n        postal_code: \"\",\r\n        street: \"\",\r\n        province: \"\",\r\n        locality: \"\",\r\n        departament: \"\",\r\n        country: \"\"\r\n      };\r\n      address_components.forEach(component => {\r\n        for (var shouldBe in ShouldBeComponent) {\r\n          if (ShouldBeComponent[shouldBe].indexOf(component.types[0]) !== -1) {\r\n            if (shouldBe === \"country\") {\r\n              address[shouldBe] = component.short_name;\r\n            } else {\r\n              address[shouldBe] = component.long_name;\r\n            }\r\n          }\r\n        }\r\n      });\r\n      return address;\r\n    };\r\n  \r\n    \r\n    const onMarkerClick = (t, map, coord) => {\r\n      const lat = coord.latLng.lat();\r\n      const lng = coord.latLng.lng();\r\n      geocodeLatLng(lat, lng)\r\n      setMapCenter({lat: lat, lng: lng});\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n            <GooglePlacesAutocomplete\r\n              onLoadFailed={(error) => (\r\n                console.error(\"Could not inject Google script\", error)\r\n              )}\r\n              autocompletionRequest={{\r\n                componentRestrictions: {\r\n                country: ['ar'],\r\n                }\r\n              }}\r\n              selectProps={{\r\n                onChange: handleChange,\r\n                placeholder : \"Direccion...\"\r\n              }}\r\n            />\r\n            <Map \r\n              google={props.google}\r\n              containerStyle={containerStyle}\r\n              zoom={16}\r\n              onClick={(t, map, coord) => onMarkerClick(t, map, coord)}\r\n              initialCenter={{\r\n                lat: mapCenter.lat,\r\n                lng: mapCenter.lng\r\n              }}\r\n              center={{\r\n                lat: mapCenter.lat,\r\n                lng: mapCenter.lng\r\n              }}\r\n            >\r\n              <Marker \r\n                position={{\r\n                  lat: mapCenter.lat,\r\n                  lng: mapCenter.lng\r\n                }} \r\n              />    \r\n            </Map>\r\n       \r\n\r\n\r\n      </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: ('AIzaSyDAwZoCkxg0z2pKbKsjZhBM_NX0S8H44vg'),\r\n  libraries: [\"places\"],\r\n  language:'es-ES'\r\n})(Maps)\r\n\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid,Button, Box, TextField } from \"@material-ui/core\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport Maps from '../../../GoogleMaps/Maps'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '25ch',\r\n    },\r\n  }));\r\n\r\nconst FormAddEdit = (props) => {\r\n    const {institution, addInstitution,editInstitution, edit, emptyFields, setDataAddress} = props;\r\n    const classes = useStyles();\r\n    const {errors, handleSubmit, control} = useForm();\r\n    return (\r\n        <div>\r\n            <form onSubmit={edit ? handleSubmit(editInstitution) : handleSubmit(addInstitution)} className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                    minLength: {\r\n                                        value: 6, \r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"institutionName\" \r\n                            id=\"institutionName\"\r\n                            label=\"Nombre\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={institution.name || ''}\r\n                            \r\n                            as={\r\n                            <TextField\r\n                                error={ errors.institutionName ? true : false }\r\n                                helperText={errors.institutionName ? errors.institutionName.message : null} \r\n                                \r\n                            />\r\n                            }\r\n                        />\r\n                       {/*  <Controller\r\n                            rules={{\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"institutionAddres\" \r\n                            id=\"institutionAddres\"\r\n                            label=\"Direccion\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={institution.addres || ''}\r\n                            type=\"text\"\r\n                            as={\r\n                            <TextField\r\n                                error={ errors.institutionAddres ? true : false }\r\n                                helperText={errors.institutionAddres ? errors.institutionAddres.message : null} \r\n                                \r\n                            />\r\n                            }\r\n                        /> */}\r\n                        \r\n                    </Grid>\r\n                    <Grid Item xs={12} sm={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"institutionCue\" \r\n                            id=\"institutionCue\"\r\n                            label=\"CUE\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={institution.cue || ''}\r\n                            type=\"number\"\r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.institutionCue ? true : false }\r\n                                    helperText={errors.institutionCue ? errors.institutionCue.message : null} \r\n                                    \r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={11} style={{position: 'relative', height: '40vh'}}>\r\n                       <Box mt={2} ml={2}>\r\n                            <Maps \r\n                                setDataAddress={setDataAddress}\r\n                                institution={institution}\r\n                                edit={edit}\r\n                            /> \r\n                        </Box> \r\n                    </Grid>               \r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\" m={1} p={1} mt={8}>\r\n                        <Button color=\"primary\" type=\"button\" onClick={() =>  emptyFields()}>\r\n                            Cancelar\r\n                        </Button>\r\n                        <Button color=\"primary\" type=\"submit\">\r\n                            Guardar\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAddEdit\r\n\r\n","import React, {useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {Box, Grid, Card, CardContent, Typography, Chip} from \"@material-ui/core\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: '100%',\r\n    minWidth: 275,\r\n    //maxWidth: 345,\r\n\r\n  },\r\n  media: {\r\n    height: 300,\r\n  },\r\n  cardAction:{\r\n    justifyContent: 'center'\r\n  }\r\n});\r\n\r\n\r\nexport default function SimpleCard(props) {\r\n  const {institutionMobile, edition, deleteInstitutions} = props\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n\r\n  return (\r\n    <div>\r\n      <Box>\r\n        <Grid container spacing={3}>\r\n          {institutionMobile.map(institution =>\r\n            <Grid item xs={12} sm={12} key={institution._id}>\r\n              <Card className={classes.card}>\r\n                {/* <CardMedia\r\n                  className={classes.media}\r\n                  image={character.img_url}\r\n                />  */}\r\n                <CardContent>\r\n                  <Typography color=\"primary\" variant=\"h6\">\r\n                    {institution.name} {\" \"}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                    Cue: {institution.cue}\r\n                  </Typography>\r\n                  {institution.address ?\r\n                    <div>\r\n                       <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                          Direccion: {institution.address.name}\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                          Departamento: {institution.address.department}\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"subtitle2\">\r\n                          Localidad: {institution.address.department}\r\n                        </Typography>\r\n                    </div>\r\n                    :\r\n                    null\r\n                  }\r\n                </CardContent>\r\n                <Divider />\r\n                <CardActions className={classes.cardAction}>\r\n                  <Button size=\"small\" onClick={() => edition(institution)}><EditIcon /></Button>\r\n                  <Button size=\"small\" onClick={() => deleteInstitutions(institution._id)}><DeleteIcon /></Button>\r\n                </CardActions>\r\n\r\n              </Card>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n     \r\n    \r\n  );\r\n}","import React, {Fragment, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { Box, Button, CircularProgress, Grid, TextField, InputAdornment, Backdrop} from '@material-ui/core';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MaterialTable from 'material-table'\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormAddEdit from './Forms/Add-Edit';\r\nimport Popup from '../../ui/Popup';\r\nimport Notification from '../../ui/Notification';\r\nimport Dashboard from '../../dashboard/Dashboard';\r\nimport CardMobileIns from '../../ui/CardMobileIns';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n  }));\r\n\r\nconst Institution2 = () => {\r\n    const roleUser = useSelector(store => store.usuario.usuario.data.role)\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    const mobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const [loading, setLoading] = useState(false);\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [notification, setNotification] = useState({open: false, message: ''});\r\n    const [institution, setInstitution] = useState({\r\n        name: '',\r\n        address: '',\r\n        cue: '',\r\n    });\r\n    const [institutions, setInstitutions] = useState([])\r\n    const [edit, setEdit] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [dataAddress, setDataAddress] = useState({})\r\n    const [institutionMobile, setInstitutionMobile] = React.useState([]);\r\n    const [pagePaginator, setPagePaginator] = React.useState(null);\r\n    const [currentPage, setCurrentPage ] = React.useState(null);\r\n    useEffect(() => {\r\n        const getInstitutions = async () =>{\r\n           setLoading(true) \r\n           const res =  await axios.get('institutions/institutions')\r\n                    setInstitutions(res.data)\r\n           setInstitutionMobile(res.data.slice(0,10))\r\n           setPagePaginator(Math.ceil((res.data.length)/10))\r\n           setLoading(false) \r\n        }\r\n        getInstitutions();\r\n        \r\n    },[])\r\n\r\n    const addInstitution = async (data) => {\r\n        setLoading(true) \r\n        const newInstituion = {\r\n            name: data.institutionName,\r\n            //addres: data.institutionAddres,\r\n            address: dataAddress,\r\n            cue: data.institutionCue,\r\n        }\r\n        try {\r\n            const res = await axios.post('institutions/institutions', newInstituion)\r\n            setInstitutions([\r\n                ...institutions,\r\n                res.data\r\n            ])\r\n            if (mobile){\r\n              setInstitutionMobile([...institutionMobile, res.data])\r\n            }   \r\n            setNotification({...notification, open: true,  message: \"Institucion Creada Correctamente\"})\r\n            emptyFields()\r\n            setLoading(false) \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const edition = (row) => {\r\n        setId(row._id)\r\n        setInstitution({\r\n            name: row.name,\r\n            address: row.address,\r\n            cue: row.cue,\r\n        })\r\n        setEdit(true)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    // Actualizar Institucion\r\n    const editInstitution =  async (data) => {\r\n        setLoading(true) \r\n        const instituionEdit = {\r\n            name: data.institutionName,\r\n            address: dataAddress,\r\n            //address: data.institutioAddres,\r\n            cue: data.institutionCue,\r\n        }\r\n        try {\r\n            const res = await axios.put(`institutions/institutions/${id}`, instituionEdit)\r\n            const arrayEditado = institutions.map( institution => (\r\n                institution._id === id ? res.data : institution\r\n            ))\r\n            setInstitutions(arrayEditado)\r\n            if (mobile){\r\n                currentPage === null ?\r\n                    setInstitutionMobile(arrayEditado.slice(0,10))\r\n                :\r\n                    setInstitutionMobile(arrayEditado.slice((currentPage*10)-10,currentPage*10))\r\n            }\r\n            setNotification({...notification, open: true, message: \"Institucion Editada Correctamente\"})\r\n            emptyFields()\r\n            setLoading(false) \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const deleteInstitutions = async data => {\r\n        let institutionsIds = [];\r\n        if(mobile){\r\n            institutionsIds.push(data)\r\n        }else{\r\n            data.map(institution => institutionsIds.push(institution._id))\r\n        }\r\n        const confirm = window.confirm(\"Estas Seguro de Eliminar El/Los Registro/s\")\r\n        try {\r\n            if(confirm){\r\n                await axios.post('institutions/institutions/delete/many', institutionsIds)\r\n                const arrayFiltrado = institutions.filter((institution) => !institutionsIds.includes(institution._id))\r\n                setInstitutions(arrayFiltrado)\r\n                if (mobile){\r\n                    currentPage === null ?\r\n                        setInstitutionMobile(arrayFiltrado.slice(0,10))\r\n                    :\r\n                        setInstitutionMobile(arrayFiltrado.slice((currentPage*10)-10,currentPage*10))\r\n                }\r\n                setNotification({...notification, open: true,  message: \"Intitucion/es Eliminada/s Correctamente\"})\r\n            }     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Cerrar formulario flotante\r\n    const closeForm = () => {\r\n        setOpenPopup(false)\r\n        setEdit(false)\r\n    }\r\n    // Devuelve el estado de la institution a situacion inicial\r\n    const emptyFields = () =>{\r\n        closeForm()\r\n        setInstitution({\r\n            name: '',\r\n            address: '',\r\n            cue: '',\r\n        })\r\n        setId('')\r\n    }\r\n\r\n    const paginator = (page) => {\r\n        setLoading(true)\r\n        setCurrentPage(page)\r\n        setInstitutionMobile(institutions.slice((page*10)-10,page*10))\r\n        setLoading(false)\r\n    }\r\n\r\n    const buscador = (palabra) => {\r\n        if(palabra === ''){\r\n            if(currentPage > 1){\r\n                setInstitutionMobile(institutions.slice((currentPage*10)-10,currentPage*10))\r\n            }else{\r\n                setInstitutionMobile(institutions.slice(0,10))\r\n            }\r\n        }else{\r\n            const palabraMinuscula = palabra.toLowerCase()\r\n            const arrayFiltrado = institutions.filter(institution => (\r\n                institution.name.toLowerCase().indexOf(palabraMinuscula) !== -1 \r\n            ))\r\n            setInstitutionMobile(arrayFiltrado)\r\n        }         \r\n      }\r\n    return (\r\n        <Fragment>\r\n            <Grid container spacing={1}>\r\n                <Grid item sm={12}> \r\n                    <Box>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() =>  setOpenPopup(true)}>\r\n                            Nueva Institucion\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {mobile && \r\n                        <Box mt={2} display=\"flex\" justifyContent=\"center\">\r\n                            <TextField\r\n                                id=\"input-with-icon-textfield\"\r\n                                label=\"Buscar por Institucion\"\r\n                                onChange={(e) => buscador(e.target.value)}\r\n                                InputProps={{\r\n                                startAdornment: (\r\n                                    <InputAdornment position=\"start\">\r\n                                    <SearchIcon />\r\n                                    </InputAdornment>\r\n                                ),\r\n                                }}\r\n                            />\r\n                        </Box>\r\n                    }\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                    <Box mt={2}>\r\n                        <Backdrop className={classes.backdrop} open={loading} onClick={!loading}>\r\n                            <CircularProgress color=\"inherit\" />\r\n                        </Backdrop>\r\n                        {mobile ?\r\n                            <CardMobileIns \r\n                                institutionMobile={institutionMobile}\r\n                                edition={edition}\r\n                                deleteInstitutions={deleteInstitutions}\r\n                            />\r\n                        :\r\n                        <MaterialTable\r\n                            columns={[\r\n                                { title: 'Id', field: '_id', hidden: true},\r\n                                { title: 'Nombre', field: 'name' },\r\n                                { title: 'Direccion', field: 'address.name' },\r\n                                { title: \"CUE\", field: 'cue'},\r\n                                {title: \"Departamento\", field: 'address.department'},\r\n                                {title: \"Localidad\", field: 'address.locality'},\r\n                            ]}\r\n                            data={institutions}\r\n                            actions={[\r\n                                {\r\n                                    hidden: roleUser !== 'Admin',\r\n                                    icon: 'edit',\r\n                                    tooltip: 'Editar',\r\n                                    position: 'row',\r\n                                    onClick: (event, rowData) => edition(rowData),\r\n                                },\r\n                                {\r\n                                    hidden: roleUser !== 'Admin',\r\n                                    icon: () => <DeleteIcon />,\r\n                                    position: 'toolbarOnSelect',\r\n                                    tooltip: 'Borrar',\r\n                                    onClick: (event, rowData) => deleteInstitutions(rowData),\r\n                                }\r\n                              ]}\r\n                            options={{\r\n                                actionsColumnIndex: -1,\r\n                                selection: true,\r\n                                pageSize: 10\r\n                            }}\r\n                            title=\"Instituciones\"\r\n                        />\r\n                        }\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            {mobile &&\r\n                <Box ml={-2} mt={2} display=\"flex\" justifyContent=\"center\">\r\n                    <Pagination count={pagePaginator} color=\"primary\" onChange={(e, page) => paginator(page)} />\r\n                 </Box>\r\n            }\r\n            <Notification \r\n                    message = {notification.message}\r\n                    open = {notification.open}\r\n                    severity= {\"success\"}\r\n                    setNotification={setNotification}\r\n            />\r\n            <Popup\r\n               openPopup={openPopup}  \r\n               title= {edit ? \"Editar Institucion\" : \"Agregar Institucion\"} \r\n               closeForm={closeForm}  \r\n               loading={loading}          \r\n            >\r\n               <FormAddEdit\r\n                edit={edit}\r\n                institution={institution}\r\n                addInstitution = {addInstitution}\r\n                editInstitution = { editInstitution} \r\n                emptyFields={emptyFields}\r\n                setDataAddress={setDataAddress}  \r\n                />\r\n            </Popup>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Institution = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Instituciones\"}>\r\n                <Institution2>\r\n\r\n                </Institution2>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Institution\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { Box, Button, Grid, Paper } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport 'react-dates/initialize';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport esLocale  from 'moment/locale/es';\r\nimport moment from 'moment';\r\nimport {\r\n    Chart,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    BarSeries,\r\n    Title,\r\n    Legend,\r\n  } from '@devexpress/dx-react-chart-material-ui';\r\nimport { withStyles, useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { Stack, Animation } from '@devexpress/dx-react-chart';\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\nconst legendStyles = () => ({\r\n    root: {\r\n      display: 'flex',\r\n      margin: 'auto',\r\n      flexDirection: 'row',\r\n    },\r\n  });\r\n  const legendRootBase = ({ classes, ...restProps }) => (\r\n    <Legend.Root {...restProps} className={classes.root} />\r\n  );\r\n  const Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\r\n  const legendLabelStyles = () => ({\r\n    label: {\r\n      whiteSpace: 'nowrap',\r\n    },\r\n  });\r\n  const legendLabelBase = ({ classes, ...restProps }) => (\r\n    <Legend.Label className={classes.label} {...restProps} />\r\n  );\r\n  \r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n  \r\nconst Informe2 = (props) => {\r\n    moment.locale('es', esLocale);\r\n    const theme = useTheme();\r\n    const classes = useStyles();\r\n    const mobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const role = useSelector(store => store.usuario.role)\r\n    const userName = useSelector(store => store.usuario.usuario.data.nombre)\r\n    const [startDate, setStartDate] = useState(moment());\r\n    const [endDate, setEndDate] = useState(moment());\r\n    const [focusedInput, setFocusedInput] = useState(null);\r\n    const [data, setData] = useState([])\r\n    const [chartData, setCharData] = useState([])\r\n    const orientation = window.matchMedia(\"(max-width: 700px)\").matches ? 'vertical' : 'horizontal';\r\n    \r\n    useEffect(() => {\r\n        setCharData([]);\r\n        dateRange();\r\n    },[startDate, endDate ])\r\n\r\n    useEffect(() => {\r\n        data.map((data) => (\r\n            setCharData(prevState => \r\n                [...prevState,{ mes:  `${moment.months(data._id.mes - 1)} - ${data._id.anio} `, solucionado: data.solucionado, noSolucionado: data.noSolucionado }])\r\n        ))\r\n\r\n    },[data])\r\n    \r\n     const dateRange = async () => {\r\n            try {\r\n                 const res = await axios.get(`api/range-date?usuarioId=${usuarioId}&startDate=${startDate}&endDate=${endDate}&role=${role}`)\r\n                 setData(res.data)\r\n                 \r\n                 \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n    }\r\n    const generateReport = async () =>{\r\n        let noSolucionado = data.reduce( (a,b) => a  + b.noSolucionado, 0)\r\n        let solucionado = data.reduce( (a,b) => a  + b.solucionado, 0)\r\n        let total = noSolucionado + solucionado\r\n        const ticketPDF = {\r\n            noSolucionado: noSolucionado,\r\n            solucionado: solucionado,\r\n            total: total,\r\n            userName : userName,\r\n            role: role,\r\n            startDate : startDate._d,\r\n            endDate: endDate._d\r\n        }\r\n        console.log(noSolucionado)\r\n        try {\r\n            const res =  await axios.post('api/pdf',ticketPDF, {responseType: 'blob'})\r\n            //Create a Blob from the PDF Stream\r\n                const file = new Blob(\r\n                    [res.data], \r\n                    {type: 'application/pdf'});\r\n            //Build a URL from the file\r\n                const fileURL = URL.createObjectURL(file);\r\n            //Open the URL on new Window\r\n                window.open(fileURL);\r\n                console.log(file)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Box display=\"flex\" justifyContent={mobile ? \"center\" : \"flex-start\"}>\r\n                        <DateRangePicker\r\n                            startDate={startDate}\r\n                            startDateId=\"s_id\"\r\n                            endDate={endDate}\r\n                            endDateId=\"e_id\"\r\n                            onDatesChange={({ startDate, endDate }) => { setStartDate(startDate); setEndDate(endDate); }}\r\n                            focusedInput={focusedInput}\r\n                            onFocusChange={e => setFocusedInput(e)}\r\n                            displayFormat=\"DD/MM/YYYY\"\r\n                            isOutsideRange={() => false}\r\n                            withPortal={true} \r\n                            orientation={orientation} \r\n                            autoFocus\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <Box display=\"flex\" justifyContent={mobile? \"center\" : \"flex-end\"}>\r\n                        <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={classes.button}\r\n                        startIcon={<PrintIcon />}\r\n                        onClick = {() => generateReport()}\r\n                        >\r\n                            Generar Informe\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                   <Box mt={2}>\r\n                    <Paper variant=\"outlined\">\r\n                            <Chart\r\n                            data={chartData}\r\n                            >\r\n                                <ArgumentAxis />\r\n                                <ValueAxis />\r\n\r\n                                <BarSeries\r\n                                    name=\"Solucionado\"\r\n                                    valueField=\"solucionado\"\r\n                                    argumentField=\"mes\"\r\n                                    color=\"#0FFF04\"\r\n                                />\r\n                                <BarSeries\r\n                                    name=\"No Solucionado\"\r\n                                    valueField=\"noSolucionado\"\r\n                                    argumentField=\"mes\"\r\n                                    color=\"#FF0404\"\r\n                                />\r\n                                <Animation />\r\n                                <Legend position=\"bottom\" rootComponent={Root}  />\r\n                                <Title text=\"Situacion Tickets\" />\r\n                                <Stack />\r\n                            </Chart>\r\n                        </Paper>\r\n                   </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Informe = () =>{\r\n    return (\r\n        <Dashboard section={\"Reportes Detallados\"}>\r\n            <Informe2>\r\n\r\n            </Informe2>\r\n        </Dashboard>\r\n    )\r\n    \r\n}\r\n\r\nexport default Informe\r\n","import React from 'react';\nimport Login from './components/Login'\nimport Dashboard from './components/dashboard/Dashboard'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport {useSelector} from 'react-redux'\nimport Tickets from './components/Tickets/Tickets'\nimport Detalles from './components/Tickets/Detalles';\nimport Calendar from './components/Tickets/Calendar';\nimport Pendientes from './components/Administracion/Pendientes';\nimport Users from './components/Administracion/Users/Users';\nimport Institution from './components/Administracion/Institutions/Institutions';\nimport Informe from './components/Tickets/Infome';\nimport axios from 'axios';\n\n\nfunction App() {\n  const RutaProtegida = ({component, path, ...rest}) => {\n    const tokenState = useSelector(store => store.usuario.token)\n      if(tokenState){\n        return <Route component={component} path={path} {...rest} />\n     }else{\n      return <Redirect to=\"/\" {...rest} />\n    }\n  }\n\n    // Rutas Administrador\n    const RutaAdmin = ({component, path, ...rest}) => {  \n      const role = useSelector(store => store.usuario.role)\n      if(role === 'Admin'){\n          return <Route component={component} path={path} {...rest} />\n       }else{\n        return <Redirect to=\"/\" {...rest} />\n      }\n    }\n\n\n\nconst token = useSelector(store => store.usuario.token)\n\naxios.defaults.headers.common['token'] = token \n\n  return (\n        <Router>\n          <Switch>\n            <Route component={Login} path=\"/\" exact/>\n            <RutaProtegida component={Dashboard} path=\"/dashboard\" exact/>\n            <RutaProtegida component={Tickets} path=\"/tickets\" exact/>\n            <RutaProtegida component={Detalles} path=\"/tickets/:id\" exact/>\n            <RutaProtegida component={Calendar} path=\"/calendar\" exact/>\n            <RutaProtegida component={Informe} path=\"/reportes\" exact/>\n            <RutaAdmin component={Pendientes} path=\"/admin/pendientes\" exact/>\n            <RutaAdmin component={Users} path=\"/admin/users\" exact/>\n            <RutaAdmin component={Institution} path=\"/admin/instituciones\" exact/>\n          </Switch>\n        </Router>\n  );\n}\n\nexport default App;\n","import {createStore, combineReducers, compose, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport userReducer, {leerUsuarioAccion} from './usuarioDucks'\r\n\r\nconst rootReducer = combineReducers({\r\n    usuario : userReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function generateStore(){\r\n    const store = createStore( rootReducer,  composeEnhancers( applyMiddleware(thunk) ))\r\n    leerUsuarioAccion()(store.dispatch)\r\n    return store;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport {Provider} from 'react-redux'\nimport generateStore from './redux/store'\nimport axios from 'axios'\n\nconst store = generateStore()\n\naxios.defaults.baseURL = process.env.REACT_APP_AXIOS_URL;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}