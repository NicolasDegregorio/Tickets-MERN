{"version":3,"sources":["redux/usuarioDucks.js","components/Login.jsx","components/dashboard/userMenu.jsx","components/dashboard/AppBarr.jsx","components/dashboard/listItems.jsx","components/dashboard/Drawerr.jsx","components/dashboard/Dashboard.jsx","components/ui/Popup.jsx","components/Tickets/Forms/FormAdd.jsx","components/ui/Card.jsx","components/ui/Notification.jsx","components/Tickets/Tickets.jsx","components/ui/Chat.jsx","components/GoogleMaps/MapInstitution.jsx","components/ui/Tabs/DialogEndTicket.jsx","components/ui/Tabs/Detalles.jsx","components/ui/Tabs/DialogEquipo.jsx","components/ui/Tabs/Equipo.jsx","components/ui/TabsCentered.jsx","components/Tickets/Detalles.jsx","components/Tickets/Calendar.jsx","components/Administracion/Pendientes.jsx","components/Administracion/Users/Forms/Add-Edit.jsx","components/Administracion/Users/Users.jsx","components/GoogleMaps/Maps.jsx","components/Administracion/Institutions/Forms/Add-Edit.jsx","components/Administracion/Institutions/Institutions.jsx","components/Tickets/Infome.jsx","App.jsx","redux/store.js","index.js"],"names":["dataInicial","activo","GET_LOGIN_SUCCESS","CERRAR_SESION","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","process","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","withRouter","props","classes","dispatch","useDispatch","useSelector","store","usuario","React","useState","email","password","setUsuario","useEffect","history","push","Grid","container","component","className","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","onSubmit","e","preventDefault","getState","a","axios","post","res","payload","token","data","jwt_decode","role","localStorage","setItem","JSON","stringify","console","log","response","alert","mensaje","loginUserAction","TextField","required","fullWidth","id","label","name","autoComplete","onChange","target","value","autoFocus","FormControlLabel","control","Checkbox","Button","Box","mt","UserMenu","anchorEl","setAnchorEl","userName","nombre","aria-controls","aria-haspopup","onClick","event","currentTarget","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","Boolean","onClose","MenuItem","removeItem","toolbar","paddingRight","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","AppBarr","handleDrawerOpen","AppBar","position","clsx","Toolbar","IconButton","edge","aria-label","noWrap","section","mainListItems","ListItem","button","NavLink","to","activeClassName","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","toolbarIcon","justifyContent","padding","mixins","flexShrink","whiteSpace","drawerPaper","drawerPaperClose","overflowX","breakpoints","up","Drawerr","handleDrawerClose","Drawer","Divider","List","minHeight","appBarSpacer","content","overflow","paddingBottom","paddingTop","fixedHeight","footer","bottom","left","right","Dashboard","children","window","matchMedia","matches","setOpen","Container","maxWidth","dialogWrapper","top","dialogTitle","Popup","openPopup","closeForm","loading","Dialog","DialogTitle","style","CircularProgress","DialogContent","dividers","formControl","minWidth","FormAdd","ticket","addTicket","editTicket","edit","institutions","users","emptyFields","useForm","register","errors","handleSubmit","FormControl","as","Autocomplete","options","_","getOptionLabel","option","defaultValue","institution","getOptionSelected","values","renderInput","params","InputLabelProps","shrink","error","ticketInstitution","FormHelperText","message","rules","minLength","multiline","rowsMax","description","ticketDescription","helperText","InputLabel","team","_user","Select","labelId","ticketLeader","map","user","index","_id","inputRef","start_date","slice","end_date","priority","ticketPriority","m","p","SimpleCard","typeTickets","totalsTickets","action","typeFilter","Fragment","Card","CardActionArea","CardContent","justify","gutterBottom","Notification","severity","setNotification","handleClose","reason","Alert","Snackbar","autoHideDuration","Tickets2","usuarioId","roleUser","setUsers","tickets","setTickets","setInstitutions","setEdit","setId","ticketsFilter","setTicketsFilter","setOpenPopup","notification","status","setTicket","setLoading","getTickets","get","getUsers","getInstitutions","setInterval","handleInputChange","newTicket","ticketsAll","deleteTicket","ticketsIds","length","confirm","arrayFiltrado","filter","includes","ticketEdit","undefined","put","arrayEditado","filterTickets","filtro","active","ml","lg","ticketsSolved","ticketsUnsolved","ticketsExpired","columns","field","hidden","lookup","Alta","Media","Baja","dateSetting","locale","render","rowData","Chip","size","actions","icon","tooltip","row","actionsColumnIndex","selection","pageSize","filtering","exportButton","Tickets","table","chatSection","headBG","borderRight500","borderRight","messageArea","overflowY","Chat","userId","comments","commentsTicket","setCommentsTicket","ticketId","comment","setComent","addComment","deleteComment","commentId","delete","onKeyPress","key","endIcon","Icon","alt","src","ListItemSecondaryAction","GoogleApiWrapper","apiKey","language","lat","lng","google","zoom","initialCenter","center","background","flexWrap","DialogEndTicket","ticketSolve","solution","ticketSolution","disableBackdropClick","disableEscapeKeyDown","DialogActions","Detalles","institutionAddress","responsible","handleClickOpen","moment","format","DialogEquipo","userTeam","setTeam","setResponsible","addMembersTeam","membersTeam","members","multiple","placeholder","Equipo","deleteMembersTeam","dense","ListItemAvatar","TabPanel","other","aria-labelledby","a11yProps","ScrollableTabsButtonAuto","setValue","setUserTeam","usersRepeat","getUsersTeam","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","bullet","transform","fontSize","pos","marginBottom","Detalles2","ticketInfo","setTicketInfo","setInsitutiton","setInstitutionAddress","setComments","useParams","ticketData","address","CardActions","Calendar2","events","setEvents","buttons","prevState","start","end","url","borderColor","plugins","dayGridPlugin","listPlugin","headerToolbar","initialView","esLocale","Calendar","media","Pendientess","ticketAprobed","arrayTickets","CardMedia","Pendientes","FormAddEdit","addUser","editUser","watch","checkBox","setCheckBox","lastName","userLastName","userRole","pattern","userEmail","disabled","userPassword","validate","userPasswordRepeat","checked","Users2","setUser","newUser","userEdit","deleteUser","usersIds","Users","libraries","setDataAddress","setAddress","mapCenter","setMapCenter","placeHolder","document","getElementsByClassName","innerHTML","handleChange","dire","geocodeByAddress","getLatLng","results","addressParse","getAddressObject","address_components","formatted_address","locality","department","departament","geocodeLatLng","geocodeByLatLng","ShouldBeComponent","home","postal_code","street","province","country","forEach","shouldBe","indexOf","types","short_name","long_name","onLoadFailed","autocompletionRequest","componentRestrictions","selectProps","containerStyle","t","coord","latLng","onMarkerClick","addInstitution","editInstitution","institutionName","Item","cue","institutionCue","Institution2","setInstitution","dataAddress","newInstituion","instituionEdit","CUE","institutioCUE","deleteInstitutions","institutionsIds","Institution","Root","withStyles","restProps","Label","Informe2","startDate","setStartDate","endDate","setEndDate","focusedInput","setFocusedInput","setData","chartData","setCharData","orientation","dateRange","mes","months","anio","solucionado","noSolucionado","generateReport","reduce","b","ticketPDF","total","_d","responseType","file","Blob","fileURL","URL","createObjectURL","startDateId","endDateId","onDatesChange","onFocusChange","displayFormat","isOutsideRange","withPortal","startIcon","valueField","argumentField","rootComponent","labelComponent","text","Informe","App","RutaProtegida","path","rest","RutaAdmin","defaults","headers","common","Login","exact","rootReducer","combineReducers","state","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","getItem","parse","usuarioDecode","leerUsuarioAccion","generateStore","baseURL","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8a8f4782.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\n// constantes\r\nconst dataInicial = {\r\n    activo: false\r\n}\r\n\r\n// types\r\nconst GET_LOGIN_SUCCESS = 'GET_LOGIN_SUCCESS'\r\nconst CERRAR_SESION = 'CERRAR_SESSION'\r\n\r\n// reducer\r\nexport default function userReducer(state = dataInicial, action){\r\n    switch (action.type) {\r\n        case  GET_LOGIN_SUCCESS:\r\n            return {...state, activo: true, usuario: action.payload.usuario, role: action.payload.role, token: action.payload.token} \r\n        case CERRAR_SESION:\r\n            return {...dataInicial, role: ''}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const loginUserAction = (usuario) => async (dispatch, getState) => {\r\n    try {\r\n        const res = await axios.post('users', usuario)\r\n        dispatch({\r\n            type : GET_LOGIN_SUCCESS,\r\n            payload: {\r\n                token: res.data.token,\r\n                usuario: jwt_decode(res.data.token),\r\n                role: res.data.role.role\r\n            }\r\n        })\r\n        localStorage.setItem('usuario', JSON.stringify({token : res.data.token}))\r\n    } catch (error) {\r\n        console.log(error.response.data)\r\n        alert(error.response.data.mensaje)\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    dispatch({\r\n        type : CERRAR_SESION,\r\n    })\r\n    localStorage.removeItem('usuario')\r\n}\r\n\r\n\r\nexport const leerUsuarioAccion = () => async (dispatch) => {\r\n    if(localStorage.getItem('usuario')){\r\n        const usuario = JSON.parse(localStorage.getItem('usuario'))\r\n        const usuarioDecode = jwt_decode(usuario.token)\r\n        dispatch({\r\n            type: GET_LOGIN_SUCCESS,\r\n            payload: {\r\n                token: usuario.token,\r\n                usuario: usuarioDecode,\r\n                role: usuarioDecode.data.role\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\n    \r\n    \r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {loginUserAction} from '../redux/usuarioDucks'\r\nimport {withRouter} from 'react-router-dom'\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Sigef - Gestion de Incidencias\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\nconst url =  process.env.REACT_APP_URL;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: `url(${url}img/sigef-logo.png)` ,\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'contain',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst Login2 = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch()\r\n    const activo = useSelector(store => store.usuario.activo)\r\n    const [usuario, setUsuario] = React.useState({\r\n        email: '',\r\n        password: ''\r\n    })\r\n\r\n    React.useEffect(() => {\r\n        if(activo){\r\n            props.history.push('/tickets')\r\n        }\r\n        \r\n    }, [props.history, activo])\r\n    \r\n    \r\n    const login = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(loginUserAction(usuario))\r\n\r\n    }\r\n\r\n  return (\r\n    <Grid container component=\"main\" className={classes.root}>\r\n      <CssBaseline />\r\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Iniciar Sesion\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={login}> \r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Correo Electronico\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              onChange={(e) => setUsuario({...usuario, email: e.target.value}) }\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Contraseña\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              onChange={(e) => setUsuario({...usuario, password: e.target.value}) }\r\n              autoComplete=\"current-password\"\r\n            />\r\n            <FormControlLabel\r\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n              label=\"Recordar\"\r\n            />\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n            >\r\n              Iniciar Sesion\r\n            </Button>\r\n            <Grid container>\r\n              {/* <Grid item xs>\r\n                <Link href=\"#\" variant=\"body2\">\r\n                  Olvido su Contraseña?\r\n                </Link>\r\n              </Grid> */}\r\n            </Grid>\r\n            <Box mt={5}>\r\n              <Copyright />\r\n            </Box>\r\n          </form>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\nexport default withRouter(Login2)","import React from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {logout} from '../../redux/usuarioDucks';\r\n\r\nexport default function UserMenu() {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const userName = useSelector(store => store.usuario.usuario.data.nombre)\r\n  const dispatch = useDispatch()\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button color='inherit' aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\r\n        {userName}\r\n      </Button>\r\n      <Menu\r\n        id=\"simple-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n        transformOrigin={{ horizontal: \"center\" }}\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        {/* <MenuItem onClick={handleClose}>Profile</MenuItem>\r\n        <MenuItem onClick={handleClose}>My account</MenuItem> */}\r\n        <MenuItem onClick={() => dispatch(logout())}>Cerrar Sesion</MenuItem>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Toolbar, IconButton, Typography} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport UserMenu from './userMenu';\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: {\r\n      paddingRight: 24, // keep right padding when drawer closed\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    menuButtonHidden: {\r\n      display: 'none',\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n    \r\n  }));\r\nconst AppBarr = (props) => {\r\n  const { handleDrawerOpen, open } = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n                <Toolbar className={classes.toolbar}>\r\n                <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                    {props.section}\r\n                </Typography>\r\n                <IconButton color=\"inherit\">\r\n                        <UserMenu />\r\n                </IconButton>\r\n                {/*   <Badge badgeContent={4} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge> */}\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBarr\r\n","import React from 'react';\r\nimport {ListItem, ListItemIcon, ListItemText, ListSubheader} from '@material-ui/core';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport SchoolIcon from '@material-ui/icons/School';\r\nimport DateRangeIcon from '@material-ui/icons/DateRange';\r\nimport EditAttributesIcon from '@material-ui/icons/EditAttributes';\r\nimport {NavLink } from 'react-router-dom'\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    {/* <ListItem button>\r\n      <ListItemIcon>\r\n        <DashboardIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Dashboard\" />\r\n    </ListItem> */}\r\n    <ListItem button component={NavLink} to=\"/tickets\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <ConfirmationNumberIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Tickets\" />\r\n    </ListItem>\r\n    <ListItem button component={NavLink} to=\"/reportes\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <BarChartIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Reporte\" />\r\n    </ListItem>\r\n    <ListItem button component={NavLink} to=\"/calendar\" activeClassName=\"Mui-selected\" >\r\n      <ListItemIcon>\r\n        <DateRangeIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Calendario\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n\r\nexport const secondaryListItems = (\r\n  <div>\r\n    <ListSubheader inset>Administracion</ListSubheader>\r\n    <ListItem button component={NavLink} to=\"/admin/pendientes\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <EditAttributesIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Tickets Pendiente\" />\r\n    </ListItem>\r\n    <ListItem button  component={NavLink} to=\"/admin/users\" activeClassName=\"Mui-selected\" >\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Usuarios\" />\r\n    </ListItem>\r\n    <ListItem button component={NavLink} to=\"/admin/instituciones\" activeClassName=\"Mui-selected\">\r\n      <ListItemIcon>\r\n        <SchoolIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Instituciones\" />\r\n    </ListItem>\r\n  </div>\r\n);\r\n","import React from 'react'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Divider, Drawer,IconButton, List} from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { mainListItems, secondaryListItems } from './listItems';\r\nimport {useSelector} from 'react-redux'\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbarIcon: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    drawer: {\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerPaperClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(1) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(3) + 1,\r\n      },\r\n    },\r\n  }));\r\n\r\nconst Drawerr = (props) => {\r\n    const { handleDrawerClose, open } = props;\r\n    const classes = useStyles();\r\n    const role = useSelector(store => store.usuario.role)\r\n    return (\r\n        <div>\r\n            <Drawer\r\n                variant=\"persistent\"\r\n                className={clsx(classes.drawer, {\r\n                  [classes.drawerPaper]: open,\r\n                  [classes.drawerPaperClose]: !open,\r\n                })}\r\n                classes={{\r\n                paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                </IconButton>\r\n                </div>\r\n                <Divider />\r\n                <List>{mainListItems}</List>\r\n                <Divider />\r\n                {role === 'Admin' && \r\n                  <List>{secondaryListItems}</List>\r\n                }\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Drawerr\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {CssBaseline, Container, Grid, Typography, Link } from '@material-ui/core';\r\nimport AppBarr from './AppBarr';\r\nimport Drawerr from './Drawerr';\r\n\r\n\r\n\r\nfunction Copyright() {\r\n  return (\r\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"#\">\r\n        Sigef - Gestion de Incidencias\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n      </Typography>\r\n  );\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    //flexDirection: column,\r\n    minHeight: '100vh',\r\n  },\r\n  \r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n    paddingBottom: '50px',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    \r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  footer: {\r\n    marginTop: '1rem',\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    width: '100%',\r\n    padding: '1rem',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[200] : theme.palette.grey[800],\r\n  },\r\n}));\r\n\r\nexport default function Dashboard(props) {\r\n  const { children } = props;\r\n  const classes = useStyles();\r\n  const  width = window.matchMedia(\"(max-width: 700px)\").matches ? false : true;\r\n  const [open, setOpen] = React.useState(width);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBarr\r\n        handleDrawerOpen={handleDrawerOpen}\r\n        open={open}\r\n        section={props.section}\r\n      />\r\n      <Drawerr\r\n        handleDrawerClose={handleDrawerClose}\r\n        open={open}\r\n      />\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              {children}\r\n              {/* <Router>\r\n                  <Route component={Tickets} path=\"/tickets\" exact/> \r\n                  <Route component={Prueba} path=\"/tickets/:id\" exact/> \r\n                  <Route component={Calendar} path=\"/calendar\" exact/>\r\n                  <Route component={Infome} path=\"/informe\" exact/> \r\n              </Router> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n        <footer className={classes.footer}>\r\n          <Copyright />\r\n        </footer>\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport {Dialog, CircularProgress,  DialogTitle, DialogContent, IconButton, makeStyles, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    dialogWrapper: {\r\n        padding: theme.spacing(2),\r\n        position: 'absolute',\r\n        top: theme.spacing(5),\r\n    },\r\n    dialogTitle: {\r\n        paddingRight: '0px'\r\n    }\r\n}))\r\n\r\nexport default function Popup(props) {\r\n\r\n    const { title, children, openPopup, closeForm, loading } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Dialog open={openPopup} maxWidth=\"sm\" classes={{ paper: classes.dialogWrapper }}>\r\n            <DialogTitle className={classes.dialogTitle}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Typography variant=\"h6\" component=\"div\" style={{ flexGrow: 1 }}>\r\n                        {title}\r\n                    </Typography>\r\n                    {loading && <CircularProgress />}\r\n                    <IconButton aria-label=\"delete\" onClick={() =>  closeForm()}>\r\n                        <CloseIcon/>\r\n                    </IconButton>\r\n                </div>\r\n            </DialogTitle>\r\n            <DialogContent dividers>\r\n                {children}\r\n            </DialogContent>\r\n            \r\n        </Dialog>\r\n    )\r\n}","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid,Button, Box, FormControl, FormHelperText, InputLabel, MenuItem , Select , TextField } from \"@material-ui/core\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '25ch',\r\n    },\r\n  }));\r\n\r\nconst FormAdd = (props) => {\r\n    const {ticket, addTicket,editTicket, edit, institutions, users, emptyFields } = props;\r\n    const classes = useStyles();\r\n    const {register, errors, handleSubmit, control} = useForm();\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={edit ? handleSubmit(editTicket) : handleSubmit(addTicket)} className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item sm={6}>\r\n                        {edit ?\r\n                            <FormControl variant=\"outlined\">\r\n                                <Controller\r\n                                    as={({ onChange }) => (\r\n                                        <Autocomplete\r\n                                            className=\"form-item\"\r\n                                            options={institutions}\r\n                                            onChange={(_, data) => onChange(data)}\r\n                                            getOptionLabel={option => option.name}\r\n                                            defaultValue={{ name: ticket.institution || null }}\r\n                                            getOptionSelected={(option, values) => option.name === values.name}\r\n                                            renderInput={params => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label=\"Institucion\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true\r\n                                                    }}\r\n                                                    variant=\"outlined\"\r\n                                                    error={errors.ticketInstitution ? true : false}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    )}\r\n                                    name=\"ticketInstitution\"\r\n                                    control={control}\r\n                                /* rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                    }\r\n                                }} */\r\n                                />\r\n                                <FormHelperText error={errors.ticketInstitution ? true : false}>{errors.ticketInstitution ? errors.ticketInstitution.message : null} </FormHelperText>\r\n                            </FormControl>\r\n                            :\r\n                            <FormControl variant=\"outlined\">\r\n                                <Controller\r\n                                    as={({ onChange }) => (\r\n                                        <Autocomplete\r\n                                            className=\"form-item\"\r\n                                            options={institutions}\r\n                                            onChange={(_, data) => onChange(data)}\r\n                                            getOptionLabel={option => option.name}\r\n                                            defaultValue={{ name: ticket.institution || null }}\r\n                                            getOptionSelected={(option, values) => option.name === values.name}\r\n                                            renderInput={params => (\r\n                                                <TextField\r\n                                                    {...params}\r\n                                                    label=\"Institucion\"\r\n                                                    InputLabelProps={{\r\n                                                        shrink: true\r\n                                                    }}\r\n                                                    variant=\"outlined\"\r\n                                                    error={errors.ticketInstitution ? true : false}\r\n                                                />\r\n                                            )}\r\n                                        />\r\n                                    )}\r\n                                    name=\"ticketInstitution\"\r\n                                    control={control}\r\n                                    rules={{\r\n                                        required: {\r\n                                            value: true,\r\n                                            message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                />\r\n\r\n                                <FormHelperText error={errors.ticketInstitution ? true : false}>{errors.ticketInstitution ? errors.ticketInstitution.message : null} </FormHelperText>\r\n                            </FormControl>\r\n                        }\r\n                        <Controller\r\n                            rules={{\r\n                                required: {\r\n                                    value: true, \r\n                                    message: 'Campo requerido'\r\n                                    }, \r\n                                minLength: {\r\n                                    value: 6, \r\n                                    message: 'Mínimo 6 carácteres'\r\n                                }                               \r\n                            }}\r\n                            name=\"ticketDescription\"\r\n                            id=\"ticketDescription\"\r\n                            label=\"Descripcion\"\r\n                            control={control}\r\n                            multiline\r\n                            rowsMax={4}\r\n                            variant=\"outlined\"\r\n                            defaultValue={ticket.description || ''}\r\n\r\n\r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.ticketDescription ? true : false }\r\n                                    helperText={errors.ticketDescription ? errors.ticketDescription.message : null}\r\n                                />\r\n                            }\r\n                        />\r\n                        <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-outlined-label\">Encargado</InputLabel>\r\n                            <Controller\r\n                                name=\"ticketLeader\"\r\n                                control={control}\r\n                                rules={{required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                defaultValue={ticket.team._user || ''}\r\n                                \r\n                                as={\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-outlined-label\"\r\n                                    id=\"ticketLeader\"\r\n                                    value={ticket.team._user}\r\n                                    error={ errors.ticketLeader ? true : false }\r\n                                    label=\"Encargado\"\r\n                                    >\r\n                                    {\r\n                                        users.map((user,index) => (\r\n                                            <MenuItem key={index} value={user._id}>{user.nombre}</MenuItem>\r\n                                        ))\r\n                                    }\r\n                                </Select>\r\n                                } \r\n                            />\r\n                             <FormHelperText error={ errors.ticketLeader ? true : false }>{errors.ticketLeader ? errors.ticketLeader.message : null} </FormHelperText>\r\n                        </FormControl>\r\n                \r\n                    </Grid>\r\n                    <Grid item sm={6}>\r\n                        <TextField\r\n                            inputRef={register({\r\n                                required: {\r\n                                    value: true, \r\n                                    message: 'Campo requerido'\r\n                                    }\r\n                               })}\r\n                            name=\"start_date\" \r\n                            id=\"start_date\"\r\n                            label=\"Fecha de Inicio\"\r\n                            type=\"date\"\r\n                            InputLabelProps={{\r\n                            shrink: true,\r\n                            }}\r\n                            defaultValue = {ticket.start_date.slice(0,10)}\r\n                            error={ errors.start_date ? true : false }\r\n                            helperText={errors.start_date ? errors.start_date.message : null}\r\n                        />\r\n                        <Box mt={2}>\r\n                            <TextField\r\n                                inputRef={register({\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                })}\r\n                                name=\"end_date\"\r\n                                id=\"end_date\"\r\n                                label=\"Fecha Limite\"\r\n                                type=\"date\"\r\n                                InputLabelProps={{\r\n                                shrink: true,\r\n                                }}\r\n                                defaultValue= {ticket.end_date.slice(0,10)}\r\n                                error={ errors.start_date ? true : false }\r\n                                helperText={errors.end_date ? errors.end_date.message : null}\r\n                            />\r\n                        </Box>\r\n                        <Box>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel id=\"labelPrioridad\">Prioridad</InputLabel>\r\n                                <Controller\r\n                                name=\"ticketPriority\"\r\n                                control={control}\r\n                                rules={{required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                    defaultValue={ticket.priority || ''}\r\n                                as={\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        label=\"Prioridad\"\r\n                                        id=\"ticketPriority\"                                       \r\n                                        value={ticket.priority}\r\n                                        error={ errors.ticketPriority ? true : false }   \r\n                                        >\r\n                                        <MenuItem value={'Alta'}>Alta</MenuItem>\r\n                                        <MenuItem value={'Media'}>Media</MenuItem>\r\n                                        <MenuItem value={'Baja'}>Baja</MenuItem>\r\n                                    </Select>\r\n                                }\r\n                                />\r\n                                 <FormHelperText\r\n                                    error={ errors.ticketPriority ? true : false }\r\n                                >\r\n                                    {errors.ticketPriority ? errors.ticketPriority.message : null} \r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Box>\r\n                        \r\n                    </Grid>              \r\n                    <Grid item sm={12}>\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\" m={1} p={1}>\r\n                            <Button color=\"primary\" type=\"button\" onClick={() =>  emptyFields()}>\r\n                                Cancelar\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Guardar\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAdd\r\n\r\n","import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardActionArea, \r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport ConfirmationNumberIcon from '@material-ui/icons/ConfirmationNumber';\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%',\r\n  },\r\n  avatar: props =>({\r\n    backgroundColor: props.color,\r\n    height: 56,\r\n    width: 56\r\n  })\r\n}));\r\n\r\n\r\nexport default function SimpleCard(props) {\r\n  const classes = useStyles(props);\r\n  const {typeTickets, totalsTickets, action, typeFilter} = props;\r\n  return (\r\n    <React.Fragment>\r\n         <Card\r\n            className={classes.root} onClick={() => action(typeFilter)}\r\n            >\r\n              <CardActionArea>\r\n                <CardContent>\r\n                    <Grid\r\n                    container\r\n                    justify=\"space-between\"\r\n                    >\r\n                        <Grid item>\r\n                            <Typography\r\n                            color=\"textSecondary\"\r\n                            gutterBottom\r\n                            variant=\"subtitle2\"\r\n                            >\r\n                                {typeTickets}\r\n                            </Typography>\r\n                            <Typography\r\n                            color=\"textPrimary\"\r\n                            variant=\"h3\"\r\n                            >\r\n                                {totalsTickets}\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Avatar className={classes.avatar} >\r\n                            <ConfirmationNumberIcon />\r\n                            </Avatar>\r\n                        </Grid>\r\n                    </Grid>\r\n                </CardContent>\r\n              </CardActionArea>  \r\n            </Card>\r\n    </React.Fragment>\r\n  );\r\n}","import React, {Fragment} from 'react'\r\nimport {Snackbar} from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nconst Notification = (props) => {\r\n    const { message, open, severity,setNotification } = props;\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        }\r\n    \r\n        setNotification({open: false})\r\n      };\r\n    const Alert = (props) => {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <Snackbar \r\n                open={open} \r\n                autoHideDuration={5000} \r\n                onClose={handleClose}  \r\n                anchorOrigin={{vertical: 'bottom',\r\n                horizontal: 'right'}}\r\n            >\r\n                <Alert onClose={handleClose} severity={severity}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport MaterialTable from 'material-table'\r\nimport { Box, Button, CircularProgress, Chip, Grid} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Popup from '../ui/Popup'\r\nimport FormAdd from './Forms/FormAdd';\r\nimport SimpleCard from '../ui/Card';\r\nimport Notification from '../ui/Notification'\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\n\r\n\r\nconst Tickets2 = (props) => {\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const roleUser = useSelector(store => store.usuario.usuario.data.role)\r\n    const [users, setUsers] = React.useState([])\r\n    const [tickets, setTickets] = React.useState([])\r\n    const [institutions, setInstitutions] = React.useState([])\r\n    const [edit, setEdit] = React.useState(false)\r\n    const [id, setId] = React.useState('')\r\n    const [ticketsFilter, setTicketsFilter] = React.useState([])\r\n    const [openPopup, setOpenPopup] = React.useState(false)\r\n    const [notification, setNotification] = React.useState({open: false, message: ''});\r\n    const [ticket, setTicket] = React.useState({\r\n        institution: '',\r\n        description : '',\r\n        team : {\r\n            _user: '',\r\n            nombre: '',\r\n            role: ''\r\n        },\r\n        start_date: '',\r\n        end_date: '',\r\n        priority: '',\r\n        status:'Sin Solucionar',\r\n      })\r\n      const [loading, setLoading] = React.useState(false);\r\n      const [error,setError] = React.useState(false)\r\n      \r\n    React.useEffect( () => {\r\n        const getTickets = async () => {\r\n            setLoading(true)\r\n            try {\r\n                const res = await axios.get(`api/ticket?usuarioId=${usuarioId}`)\r\n                const data = res.data\r\n                setTickets(data)\r\n                setTicketsFilter(data.data)\r\n            } catch (error) {\r\n                console.log(\"ocurrio un error\")\r\n                console.log(error)\r\n            }\r\n            setLoading(false)\r\n        }\r\n        const getUsers = async () => {\r\n           try {\r\n                const res = await axios.get('users/users')\r\n                const data = res.data\r\n                setUsers(data)\r\n           } catch (error) {\r\n                console.log(\"ocurrio un error\")\r\n                console.log(error)\r\n           }\r\n        }\r\n        const getInstitutions = async () => {\r\n            try {\r\n                 const res = await axios.get('institutions/institutions')\r\n                 const data = res.data\r\n                 setInstitutions(data)\r\n            } catch (error) {\r\n                 console.log(\"ocurrio un error\")\r\n                 console.log(error)\r\n            }\r\n         }\r\n        getTickets()\r\n        getUsers()\r\n        getInstitutions()\r\n        \r\n        setInterval(() => { \r\n            getTickets()\r\n            getUsers()\r\n            getInstitutions()\r\n        }, 300000);\r\n    },[])\r\n\r\n\r\n    const handleInputChange =  async (data) => {\r\n         setTicket({...ticket, \r\n                        institution: data.ticketInstitution, \r\n                        description: data.ticketDescription,\r\n                        team : {...ticket.team,\r\n                            _user: data.ticketLeader,\r\n                            role: 'Leader'\r\n                        },\r\n                        start_date: data.start_date,\r\n                        end_date: data.end_date,\r\n                        priority: data.ticketPriority\r\n\r\n                })\r\n    }\r\n    \r\n    // Crear nuevo Ticket\r\n    const addTicket = async (data) => {      \r\n            setLoading(true)\r\n            let newTicket = {\r\n                institution: data.ticketInstitution._id,\r\n                description: data.ticketDescription,\r\n                team: {\r\n                    _user: data.ticketLeader,\r\n                    role: 'Leader',\r\n                },\r\n                start_date: data.start_date,\r\n                end_date: data.end_date,\r\n                priority: data.ticketPriority,\r\n                status: 'Sin Solucionar'\r\n            }\r\n            try {\r\n                const res = await axios.post('api/nuevo-ticket', newTicket)\r\n                setTicketsFilter([\r\n                    ...ticketsFilter,\r\n                    res.data\r\n                ])\r\n                setNotification({ ...notification, open: true, message: \"Ticket Creado Correctamente\" })\r\n                emptyFields()\r\n                setTickets({ ...tickets, ticketsAll: tickets.ticketsAll + 1 })\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n            setLoading(false);\r\n        \r\n        \r\n\r\n    }\r\n    // Elimina un Ticket\r\n    const deleteTicket = async data => {\r\n        const ticketsIds = []\r\n        data.map(ticket => ticketsIds.push(ticket._id))\r\n        const countTickets = ticketsIds.length;\r\n        const confirm = window.confirm(\"Estas Seguro de Eliminar El/Los Registro/s\")\r\n        try {\r\n            if(confirm){\r\n                await axios.post('api/ticket/delete/many', ticketsIds)\r\n                const arrayFiltrado = ticketsFilter.filter((ticket) => !ticketsIds.includes(ticket._id))\r\n                setTicketsFilter(arrayFiltrado)\r\n                setNotification({...notification, open: true,  message: \"Ticket/s Eliminado/s Correctamente\"})\r\n                setTickets({...tickets, ticketsAll: tickets.ticketsAll-1})\r\n            }     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const edition = row => {\r\n        setId(row._id)\r\n        setTicket({...ticket,\r\n            institution: row.institution.name,\r\n            description : row.description,\r\n            team : {\r\n                _user: row.team[0]._user._id,\r\n                nombre: row.team[0]._user.nombre,\r\n                role: 'Leader'\r\n            },\r\n            start_date: row.start_date,\r\n            end_date: row.end_date,\r\n            priority: row.priority,\r\n            status: row.status,        \r\n                \r\n        })\r\n        setEdit(true)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    // Actualizar Ticket\r\n    const editTicket =  async (data) => {\r\n        setLoading(true);\r\n        const ticketEdit= {\r\n                        ...(data.ticketInstitution !== undefined && { institution: data.ticketInstitution._id}),\r\n                        description: data.ticketDescription,\r\n                        team : {\r\n                            _user: data.ticketLeader,\r\n                            role: 'Leader',\r\n                        },\r\n                        start_date: data.start_date,\r\n                        end_date: data.end_date,\r\n                        priority: data.ticketPriority,\r\n                        status: data.status\r\n        }\r\n        try {\r\n            const res = await axios.put(`api/ticket/${id}`,ticketEdit)\r\n            const arrayEditado = ticketsFilter.map( item => (\r\n                item._id === id ? res.data : item\r\n            ))\r\n            setTicketsFilter(arrayEditado)\r\n            setNotification({...notification, open: true, message: \"Ticket Editado Correctamente\"})\r\n            emptyFields()\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        setLoading(false);\r\n    }\r\n    // Filtrar tickets Mediante las Tarjetas\r\n    const filterTickets = (filtro) => {\r\n        if (filtro === \"Todos\"){\r\n            setTicketsFilter(tickets.data)\r\n        } else if(filtro === \"Solucionado\") {\r\n            const filter =  tickets.data.filter( (ticket) => ticket.status === \"Solucionado\")\r\n            setTicketsFilter(filter)\r\n        }else if(filtro === \"Sin Solucionar\"){\r\n            const filter =  tickets.data.filter( (ticket) => ticket.status === \"Sin Solucionar\")\r\n            setTicketsFilter(filter)\r\n        }else if(filtro === \"Vencidos\"){\r\n            const filter =  tickets.data.filter( (ticket) => (ticket.active === false && ticket.status === 'Sin Solucionar'))\r\n            setTicketsFilter(filter)\r\n        }\r\n    }\r\n    // Cerrar formulario flotante\r\n    const closeForm = () => {\r\n        setOpenPopup(false)\r\n        setEdit(false)\r\n    }\r\n    // Devuelve el estado del Ticket a situacion inicial\r\n    const emptyFields = () =>{\r\n        closeForm()\r\n        setTicket({\r\n            institution: '',\r\n            description : '',\r\n            team : {\r\n                _user: '',\r\n                nombre: '',\r\n                role: 'Leader'\r\n            },\r\n            start_date: '',\r\n            end_date: '',\r\n            priority: '',\r\n            status:'Sin Solucionar',    \r\n        })\r\n        setId('')\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ maxWidth: '100%' }}>\r\n            <Grid container>\r\n                <Notification \r\n                    message = {notification.message}\r\n                    open = {notification.open}\r\n                    severity= {\"success\"}\r\n                    setNotification={setNotification}\r\n                />\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box>\r\n                        <SimpleCard\r\n                            typeTickets= \"Tickets Totales\"\r\n                            totalsTickets= {tickets.ticketsAll}\r\n                            color=\"#2196f3\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Todos\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box ml={{\"md\": 3}} mt={{xs:2, sm:2, md:0, lg:0}} >\r\n                        <SimpleCard\r\n                            typeTickets=\"Tickets Solucionados\"\r\n                            totalsTickets={tickets.ticketsSolved}\r\n                            color=\"#4caf50\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Solucionado\"   \r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box ml={{\"md\": 3}} mt={{xs:2, sm:2, md:0, lg:0}} >\r\n                        <SimpleCard\r\n                            typeTickets=\"Tickets Sin Solucionar\"\r\n                            totalsTickets={tickets.ticketsUnsolved}\r\n                            color=\"#ffff70\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Sin Solucionar\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item={true} md={3} xs={12}>\r\n                    <Box ml={{\"md\": 3}} mt={{xs:2, sm:2, md:0, lg:0}}>\r\n                        <SimpleCard\r\n                            typeTickets= \"Tickets Vencidos\"\r\n                            totalsTickets= {tickets.ticketsExpired}\r\n                            color=\"#ff1744\"\r\n                            action= {filterTickets}\r\n                            typeFilter= \"Vencidos\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                \r\n            </Grid>\r\n            <Box mt={2}>\r\n                {roleUser === 'Admin' &&\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={() =>  setOpenPopup(true) }>\r\n                        Nuevo Ticket\r\n                    </Button>\r\n                }\r\n            </Box>\r\n            <Box mt={2}>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    {loading && <CircularProgress />}\r\n                </Box>    \r\n                <MaterialTable\r\n                    columns={[\r\n                        { title: 'Id', field: '_id', hidden: true},\r\n                        { title: 'Institucion', field: 'institution[name]' },\r\n                        { title: 'Descripcion', field: 'description' },\r\n                        { title: \"Prioridad\", field: 'priority', lookup: {Alta: \"Alta\", Media: \"Media\", Baja: \"Baja\" } },\r\n                        { title: 'Encargado', field: 'team[0][_user][nombre]' },\r\n                        { title: 'Fecha de Inicio', field: 'start_date',  type: \"date\", dateSetting: { locale: \"es-AR\"}},\r\n                        { title: 'Vencimiento', field: 'end_date',  type: \"date\", dateSetting: { locale: \"es-AR\"}},\r\n                        {title: 'Estado', field: 'status', lookup: { \"Solucionado\": \"Solucionado\", \"Sin Solucionar\": \"Sin Solucionar\" },\r\n                        render: rowData => <Chip color={rowData.status === \"Solucionado\"? \"primary\": \"secondary\"} size=\"small\" label={rowData.status} />}\r\n                    ]}\r\n                    data={ticketsFilter}\r\n                    actions={[\r\n                        {\r\n                            icon: () => <VisibilityIcon />,\r\n                            tooltip: 'Ver',\r\n                            position: 'row',\r\n                            onClick: (event, rowData) => props.history.push('/tickets/'+rowData._id),\r\n                        },    \r\n                        {\r\n                          hidden: roleUser !== 'Admin',\r\n                          icon: 'edit',\r\n                          tooltip: 'Editar',\r\n                          position: 'row',\r\n                          onClick: (event, rowData) => edition(rowData),\r\n                        },\r\n                        {\r\n                          hidden: roleUser !== 'Admin',\r\n                          icon: () => <DeleteIcon />,\r\n                          position: 'toolbarOnSelect',\r\n                          tooltip: 'Borrar',\r\n                          onClick: (event, rowData) => deleteTicket(rowData),\r\n                        }\r\n                        \r\n                      ]}\r\n                    options={{\r\n                        actionsColumnIndex: -1,\r\n                        selection: true,\r\n                        pageSize: 10,\r\n                        filtering: true,\r\n                        exportButton: true\r\n                    }}\r\n                    title=\"Tickets\"\r\n                />\r\n            </Box>\r\n            <Popup\r\n                title= {edit ? \"Editar Ticket\" : \"Agregar Ticket\"}\r\n                openPopup={openPopup}\r\n                closeForm={closeForm}\r\n                loading={loading}               \r\n            >\r\n               <FormAdd \r\n                    setTicket={setTicket}\r\n                    ticket={ticket}\r\n                    users={users}\r\n                    institutions={institutions}\r\n                    addTicket={addTicket}\r\n                    handleInputChange={handleInputChange}\r\n                    editTicket= {editTicket}\r\n                    edit= {edit}\r\n                    setOpenPopup={setOpenPopup}\r\n                    emptyFields={emptyFields}\r\n                />\r\n            </Popup>\r\n\r\n        </div>\r\n    )\r\n}\r\n    const Tickets = (props) => {\r\n        return (\r\n            <div>\r\n                <Dashboard section = {\"Tickets\"}>\r\n                    <Tickets2 history={props.history}>\r\n\r\n                    </Tickets2>\r\n                </Dashboard>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Tickets\r\n\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {Button, Icon} from '@material-ui/core';\r\nimport Notification from './Notification';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  chatSection: {\r\n    width: '100%',\r\n    height: 'auto'\r\n  },\r\n  headBG: {\r\n      backgroundColor: '#e0e0e0'\r\n  },\r\n  borderRight500: {\r\n      borderRight: '1px solid #e0e0e0'\r\n  },\r\n  messageArea: {\r\n    height: '70vh',\r\n    overflowY: 'auto'\r\n  }\r\n});\r\n\r\nconst Chat = (props) => {\r\n  const {ticket, userId, comments} = props\r\n  const classes = useStyles();\r\n  const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n  const [notification, setNotification] = React.useState({open: false, message: '', severity: ''});\r\n  const [commentsTicket,setCommentsTicket] = React.useState(comments)\r\n  const url =  process.env.REACT_APP_URL;\r\n\r\n  React.useEffect(() => {\r\n    console.log(commentsTicket)\r\n  },[commentsTicket])\r\n\r\n  const [comment,setComent] = React.useState({\r\n    ticketId : ticket._id,\r\n    userId: userId,\r\n    comment : ''\r\n  })\r\n  const handleKeypress = e => {\r\n    if (e.key === 'Enter') {\r\n      addComment();\r\n    }\r\n  };\r\n\r\n  const addComment = async () => {\r\n    try {\r\n      const res = await axios.post('api/ticket/comment', comment)\r\n      setCommentsTicket(res.data.comments)\r\n      setComent({...comment, comment: ''})\r\n      setNotification({...notification, open: true,  message: \"Mensaje Enviado Correctamente\", severity: \"success\"})\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n  const deleteComment = async (commentId) =>{\r\n    const ticketId = ticket._id\r\n    try {\r\n      await axios.delete(`api/ticket/comment/deleteComment?ticketId=${ticketId}&commentId=${commentId}`) \r\n      const arrayFiltrado = commentsTicket.filter(comment => comment._id !== commentId)\r\n      setCommentsTicket(arrayFiltrado)\r\n      setNotification({...notification, open: true,  message: \"Mensaje Eliminado Correctamente\", severity: \"error\"})\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n      <div>\r\n        <Grid container component={Paper} className={classes.chatSection}>\r\n          <Notification \r\n                message = {notification.message}\r\n                open = {notification.open}\r\n                severity= {notification.severity}\r\n                setNotification={setNotification}\r\n            />\r\n            <Grid item xs={12} className={classes.borderRight500}>\r\n                <Grid item xs={12} style={{padding: '10px'}}>\r\n                    <TextField id=\"outlined-basic-email\"\r\n                      label=\"Mensaje\"\r\n                      variant=\"outlined\"\r\n                      value= {comment.comment}\r\n                      onKeyPress= {handleKeypress}\r\n                      onChange={e => setComent({...comment, comment: e.target.value})} \r\n                      fullWidth />\r\n                </Grid>\r\n                <Box ml={1}>\r\n                    <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            endIcon={<Icon>send</Icon>}\r\n                            onClick={() => addComment()}\r\n                        >\r\n                            Enviar\r\n                    </Button>\r\n                </Box>\r\n                {\r\n                    commentsTicket.map( (comment) =>(\r\n                      <Box mt={2}>\r\n                       <Divider />\r\n                        <List>\r\n                            <ListItem button key={comment._user.nombre}>\r\n                                <ListItemIcon>\r\n                                  <Avatar alt=\"Remy Sharp\" src={`${url}/img/avatar.jpg`} />\r\n                                </ListItemIcon>\r\n                                <ListItemText \r\n                                    primary={comment._user.nombre}\r\n                                    secondary={comment.comment}  \r\n                                >       \r\n                                </ListItemText>\r\n                                {usuarioId === comment._user._id ?\r\n                                  <ListItemSecondaryAction>\r\n                                    <IconButton edge=\"start\" aria-label=\"delete\" onClick={() => deleteComment(comment._id)}>\r\n                                      <DeleteIcon />\r\n                                    </IconButton>\r\n                                  </ListItemSecondaryAction>\r\n                                  :''  \r\n                                }\r\n                            </ListItem>\r\n                        </List>\r\n                        <Divider />\r\n                      </Box>  \r\n                    ))                    \r\n                  }\r\n          </Grid>  \r\n        </Grid>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Chat;","import React, {Fragment} from 'react'\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\nconst MapInstitution = (props) => {\r\n    const {lat, lng} = props;\r\n\r\n    return (\r\n        <Fragment>\r\n            <Map \r\n              google={props.google}\r\n              zoom={16}\r\n              initialCenter={{\r\n                lat: lat,\r\n                lng: lng\r\n              }}\r\n              center={{\r\n                lat: lat,\r\n                lng: lng\r\n              }}\r\n            >\r\n              <Marker \r\n                position={{\r\n                  lat: lat,\r\n                  lng: lng\r\n                }} \r\n              />    \r\n            </Map>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: ('AIzaSyDAwZoCkxg0z2pKbKsjZhBM_NX0S8H44vg'),\r\n    language:'es-ES'\r\n  })(MapInstitution)","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Dialog, DialogActions, DialogContent, DialogTitle, \r\n    FormControl, TextField, Button} \r\nfrom '@material-ui/core';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 400,\r\n    },\r\n  }));\r\n\r\n\r\nconst DialogEndTicket = (props) => {\r\n    const {notification, setNotification, ticket, setTicket, open, setOpen} = props;\r\n    const classes = useStyles();\r\n    const { errors, handleSubmit, control } = useForm();\r\n\r\n    const ticketSolve = async (data) => {\r\n        const solution = {\r\n            ticketId: ticket._id,\r\n            solution: data.ticketSolution\r\n\r\n        }\r\n        try {\r\n            await axios.post('api/ticket/solution/change', solution)\r\n            handleClose()\r\n            setNotification({ ...notification, open: true, message: \"Situacion del Ticket Informada\", severity: \"success\" })\r\n            setTicket({ ...ticket, solution: solution.solution })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    };\r\n    return (\r\n        <div>\r\n            <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\r\n                <DialogTitle>Finalizar Ticket</DialogTitle>\r\n                <DialogContent>\r\n                    <form onSubmit={handleSubmit(ticketSolve)} className={classes.root} className={classes.container}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <Controller\r\n                                rules={{\r\n                                    required: {\r\n                                        value: true,\r\n                                        message: 'Campo requerido'\r\n                                    },\r\n                                    minLength: {\r\n                                        value: 6,\r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n\r\n                                }}\r\n                                control={control}\r\n                                name=\"ticketSolution\"\r\n                                id=\"ticketSolution\"\r\n                                label=\"Que se Hizo\"\r\n                                variant=\"outlined\"\r\n                                defaultValue={''}\r\n\r\n                                as={\r\n                                    <TextField\r\n                                        error={errors.ticketSolution ? true : false}\r\n                                        helperText={errors.ticketSolution ? errors.ticketSolution.message : null}\r\n\r\n                                    />\r\n                                }\r\n                            />\r\n                        </FormControl>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button onClick={handleSubmit(ticketSolve)} color=\"primary\">\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogEndTicket \r\n","import React from 'react'\r\nimport moment from 'moment'\r\nimport {Button, Chip,Typography, Box, Grid} from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport MapInstitution from '../../GoogleMaps/MapInstitution';\r\nimport DialogEndTicket from './DialogEndTicket'\r\nconst Detalles = (props) => {\r\n    const {institution, institutionAddress, usuarioId, notification, setNotification, responsible, ticket, setTicket} = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Box>\r\n                    <DialogEndTicket\r\n                        open={open}\r\n                        setOpen={setOpen} \r\n                        notification={notification}\r\n                        setNotification={setNotification}\r\n                        ticket={ticket}\r\n                        setTicket={setTicket}\r\n                        usuarioId={usuarioId}\r\n                    />        \r\n                </Box>\r\n                <Grid item xs={12}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        {responsible.map(item => (item.role === 'Leader' && item._user._id === usuarioId && ticket.solution === '') ?\r\n                            <Button onClick={handleClickOpen}>Cambiar Estado Ticket</Button>\r\n                            : '')}\r\n                        {(ticket.solution !== '' && ticket.status === 'Sin Solucionar') &&\r\n                            <Chip label=\"Ticket Pendiente de Autorizacion\" variant=\"outlined\" color=\"primary\" />\r\n                        }\r\n                        {ticket.status === 'Solucionado' &&\r\n                            <Chip label=\"Ticket Resuelto\" variant=\"outlined\" icon={<CheckIcon />} color=\"default\" style={{ backgroundColor: '#8bc34a' }} />\r\n                        }\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={6} >\r\n                    <Box>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Institucion\r\n                    </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            {institution.name}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Descripcion\r\n                    </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            {ticket.description}\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <Box>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Direccion:\r\n                    </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            {institutionAddress.name}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Fechas\r\n                    </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            Fecha Inicio: {moment(ticket.start_date, 'YYYY-MM-DD').format('DD-MM-YYYY')}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                            Fecha Vencimiento: {moment(ticket.end_date, 'YYYY-MM-DD').format('DD-MM-YYYY')}\r\n                        </Typography>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ position: 'relative', height: '40vh' }}>\r\n                    <MapInstitution\r\n                        lat={institutionAddress.lat}\r\n                        lng={institutionAddress.lng}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Detalles\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, TextField} from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      width: '100%',\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    container: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 400,\r\n    },\r\n  }));\r\n\r\nconst DialogEquipo = (props) => {\r\n    const {notification, setNotification, ticket, open, setOpen, userTeam, team, setTeam, setResponsible} = props;\r\n    const classes = useStyles();\r\n\r\n    const addMembersTeam = async () => {\r\n        const membersTeam = {\r\n            ticketId: ticket._id,\r\n            members: team\r\n        }\r\n        try {\r\n            const res = await axios.post('api/ticket/team/addMembersTeam', membersTeam)\r\n            handleClose()\r\n            setResponsible(res.data.team)\r\n            setNotification({ ...notification, open: true, message: \"Miembro/s Agregados Correctamente\", severity: \"success\" })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleInputChange = (event, value)  =>{\r\n        setTeam(value);\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog disableBackdropClick disableEscapeKeyDown open={open} onClose={handleClose}>\r\n                <DialogTitle>Agregar Integrantes</DialogTitle>\r\n                <DialogContent>\r\n                    <form className={classes.container}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <Autocomplete\r\n                                multiple\r\n                                id=\"tags-standard\"\r\n                                options={userTeam}\r\n                                getOptionLabel={(option) => option.nombre}\r\n                                onChange={handleInputChange}\r\n                                renderInput={(params) => (\r\n                                    <TextField\r\n                                        {...params}\r\n                                        variant=\"standard\"\r\n                                        label=\"Integrantes\"\r\n                                        placeholder=\"Usuarios\"\r\n                                    />\r\n                                )}\r\n                            />\r\n                        </FormControl>\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancelar\r\n                    </Button>\r\n                    <Button onClick={addMembersTeam} color=\"primary\">\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogEquipo\r\n","import React, {Fragment} from 'react'\r\nimport axios from 'axios'\r\nimport {Button, Typography, Box, Grid, List, ListItem, ListItemAvatar, Avatar, ListItemText, ListItemSecondaryAction, IconButton  } from '@material-ui/core'\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DialogEquipo from './DialogEquipo';\r\n\r\nconst Equipo = (props) => {\r\n    const {team, setTeam, setResponsible, usuarioId, notification, setNotification, responsible, ticket, userTeam} = props;\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const deleteMembersTeam = async (userId) => {\r\n        const ticketId = ticket._id\r\n        try {\r\n            const res = await axios.delete(`api/ticket/team/deleteMembersTeam?ticketId=${ticketId}&userId=${userId}`)\r\n            setResponsible(res.data.team)\r\n            setNotification({ ...notification, open: true, message: \"Miembro Eliminado Correctamente\", severity: \"error\" })\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    \r\n    \r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <DialogEquipo\r\n                    open={open}\r\n                    setOpen={setOpen} \r\n                    notification={notification}\r\n                    setNotification={setNotification}\r\n                    ticket={ticket}\r\n                    setResponsible={setResponsible}\r\n                    team={team}\r\n                    setTeam={setTeam}\r\n                    userTeam={userTeam}\r\n                />\r\n                <Grid md={12}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        {responsible.map(item => (item.role === 'Leader' && item._user._id === usuarioId && ticket.solution === '') ?\r\n                            <Button onClick={handleClickOpen}>Agregar al Equipo</Button>\r\n                            : '')}\r\n                        \r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container spacing={-2}>\r\n                <Grid md={6}>\r\n                    <Box>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Encargado:\r\n                    </Typography>\r\n                        <List dense>\r\n                            {responsible.map(item =>\r\n                                item.role === 'Leader' ?\r\n                                    <Fragment>\r\n                                        <ListItem>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar>\r\n                                                    <PersonIcon />\r\n                                                </Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText\r\n                                                primary={item._user.nombre}\r\n                                                secondary={null}\r\n                                            />\r\n                                        </ListItem>\r\n                                    </Fragment>\r\n                                    : ''\r\n                            )}\r\n                        </List>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid md={6}>\r\n                    <Box>\r\n                        <Typography variant=\"h6\" gutterBottom>\r\n                            Equipo de Soporte:\r\n                    </Typography>\r\n                        <List dense>\r\n                            {responsible.map(item =>\r\n                                item.role === 'Support' ?\r\n                                    <Fragment>\r\n                                        <ListItem>\r\n                                            <ListItemAvatar>\r\n                                                <Avatar>\r\n                                                    <PersonIcon />\r\n                                                </Avatar>\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText\r\n                                                primary={item._user.nombre}\r\n                                                secondary={null}\r\n                                            />\r\n                                            {ticket.team[0]._user._id === usuarioId &&\r\n                                                <ListItemSecondaryAction>\r\n                                                    <IconButton edge=\"start\" aria-label=\"delete\" onClick={() => deleteMembersTeam(item._user._id)}>\r\n                                                        <DeleteIcon />\r\n                                                    </IconButton>\r\n                                                </ListItemSecondaryAction>\r\n                                            }\r\n                                        </ListItem>\r\n                                    </Fragment>\r\n                                    : ''\r\n                            )}\r\n                        </List>\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Equipo\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {AppBar, Tabs, Tab, Typography, Box} from '@material-ui/core';\r\nimport Chat from './Chat';\r\nimport Notification from './Notification';\r\nimport Detalles from './Tabs/Detalles';\r\nimport Equipo from './Tabs/Equipo';\r\n\r\n\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 400,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto(props) {\r\n  const {ticket, setTicket,  responsible, setResponsible, usuarioId, comments, users, institution, institutionAddress} = props\r\n  const classes = useStyles();\r\n  const [notification, setNotification] = React.useState({open: false, message: '', severity: ''});\r\n  const [value, setValue] = React.useState(0);\r\n  const [team, setTeam] = React.useState([])\r\n  const [userTeam, setUserTeam] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    const getUsersTeam = () => {\r\n      const usersRepeat = []\r\n      responsible.map(user => usersRepeat.push(user._user._id) )\r\n      const arrayFiltrado = users.filter((user) => !usersRepeat.includes(user._id))\r\n      setUserTeam(arrayFiltrado)\r\n    }\r\n    getUsersTeam()\r\n  },[responsible])\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Notification \r\n                message = {notification.message}\r\n                open = {notification.open}\r\n                severity= {notification.severity}\r\n                setNotification={setNotification}\r\n      />\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"fullWidth\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          <Tab label=\"Detalles\" {...a11yProps(0)} />\r\n          <Tab label=\"Equipo\" {...a11yProps(1)} />\r\n          <Tab label=\"Mensajes\" {...a11yProps(2)} />\r\n          {/* <Tab label=\"Item Four\" {...a11yProps(3)} />\r\n          <Tab label=\"Item Five\" {...a11yProps(4)} />\r\n          <Tab label=\"Item Six\" {...a11yProps(5)} />\r\n          <Tab label=\"Item Seven\" {...a11yProps(6)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n          <Detalles\r\n            institutionAddress={institutionAddress}\r\n            institution={institution}\r\n            responsible={responsible}\r\n            usuarioId={usuarioId}\r\n            ticket={ticket}\r\n            setTicket={setTicket}\r\n            notification={notification}\r\n            setNotification={setNotification}\r\n\r\n          />\r\n\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <Equipo\r\n          userTeam={userTeam}\r\n          team={team}\r\n          setTeam={setTeam}\r\n          responsible={responsible}\r\n          setResponsible={setResponsible}\r\n          usuarioId={usuarioId}\r\n          ticket={ticket}\r\n          setTicket={setTicket}\r\n          notification={notification}\r\n          setNotification={setNotification}\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Chat\r\n          ticket = {ticket}\r\n          userId = {usuarioId}\r\n          comments = {comments}\r\n        >\r\n              \r\n        </Chat>\r\n      </TabPanel>\r\n      {/* <TabPanel value={value} index={3}>\r\n        Item Four\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        Item Five\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        Item Six\r\n      </TabPanel>\r\n      <TabPanel value={value} index={6}>\r\n        Item Seven\r\n      </TabPanel> */} \r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TabsCentered from '../ui/TabsCentered';\r\nimport {useParams} from 'react-router-dom'\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n    },\r\n    bullet: {\r\n      display: 'inline-block',\r\n      margin: '0 2px',\r\n      transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n  });\r\n\r\nconst Detalles2 = () => {\r\n    const classes = useStyles();\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const [users, setUsers] = React.useState([])\r\n    const [ticketInfo, setTicketInfo] = React.useState({})\r\n    const [responsible, setResponsible] = React.useState([])\r\n    const [institution, setInsitutiton] = React.useState([])\r\n    const [institutionAddress, setInstitutionAddress] = React.useState([])\r\n    const [comments, setComments] = React.useState([])\r\n    const {id} = useParams()\r\n    const [ticketId, setTicketId] = React.useState(id)\r\n    React.useEffect(() => {\r\n      const ticketData = async (id) =>{\r\n        try {\r\n          const res = await axios.get(`api/ticket/${id}`)\r\n          const data = res.data\r\n          setTicketInfo(data)\r\n          setResponsible(data.team)\r\n          setComments(data.comments)\r\n          setInsitutiton(data.institution)\r\n          setInstitutionAddress(data.institution.address)\r\n        } catch (error) {\r\n          console.log(error)\r\n        }\r\n      }\r\n      const getUsers = async () => {\r\n        try {\r\n             const res = await axios.get('users/users')\r\n             const data = res.data\r\n             setUsers(data)\r\n             console.log(users)\r\n        } catch (error) {\r\n             console.log(\"ocurrio un error\")\r\n             console.log(error)\r\n        }\r\n      }\r\n      ticketData(ticketId)\r\n      getUsers()\r\n\r\n    },[])\r\n    return (\r\n      <React.Fragment>\r\n        <Card className={classes.root}>\r\n          <CardContent>\r\n            <TabsCentered\r\n              ticket = {ticketInfo}\r\n              setTicket = {setTicketInfo}\r\n              responsible = {responsible}\r\n              setResponsible = {setResponsible}\r\n              usuarioId = {usuarioId}\r\n              comments = {comments}\r\n              users = {users}\r\n              institution={institution}\r\n              institutionAddress={institutionAddress}\r\n            >\r\n          </TabsCentered>\r\n        </CardContent>\r\n        <CardActions>\r\n         \r\n        </CardActions>\r\n      </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n  const Detalles = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Detalles del Ticket\"}>\r\n                <Detalles2>\r\n\r\n                </Detalles2>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Detalles\r\n","import React, {Fragment, useState} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport FullCalendar from '@fullcalendar/react'\r\nimport dayGridPlugin from '@fullcalendar/daygrid'\r\nimport listPlugin from '@fullcalendar/list';\r\nimport esLocale from '@fullcalendar/core/locales/es';\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\n\r\nconst Calendar2 = () => {\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const [tickets, setTickets] = useState([])\r\n    const [events, setEvents] = useState([])\r\n    const buttons = window.matchMedia(\"(max-width: 700px)\").matches ? {center: '',right:  'prev,next'} : {center: 'dayGridWeek dayGridMonth listWeek'};\r\n    React.useEffect( () => {\r\n        const getTickets = async () =>{  \r\n           try {\r\n                const res = await axios.get(`api/ticket?usuarioId=${usuarioId}`)\r\n                setTickets(res.data.data)\r\n           } catch (error) {\r\n               console.log(\"ocurrio un error\")\r\n               console.log(error)\r\n           }\r\n        }\r\n        getTickets()\r\n    }, [])\r\n\r\n    React.useEffect( () =>  {\r\n        tickets.map((ticket) => (\r\n            (ticket.status === 'Sin Solucionar') &&\r\n            setEvents(prevState => \r\n                [...prevState, { title: ticket.institution.name , start: ticket.start_date, end: ticket.end_date, url: `/tickets/${ticket._id}`, backgroundColor : ticket.active ? '#165CFF' : '#FF2416', borderColor: ticket.active === false && '#FF2416' }])\r\n        ))\r\n    },[tickets])\r\n    return (\r\n        <Fragment>\r\n            <FullCalendar\r\n                plugins={[ dayGridPlugin, listPlugin, dayGridPlugin   ]}\r\n                headerToolbar= {\r\n                    buttons\r\n                }\r\n                initialView=\"dayGridMonth\"\r\n                height =  \"auto\"\r\n                locale={esLocale}\r\n                events={events}\r\n                \r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Calendar = () => {\r\n    return (\r\n        <Dashboard section={\"Calendario de Tareas\"}>\r\n            <Calendar2>\r\n\r\n            </Calendar2>\r\n        </Dashboard>\r\n    )\r\n\r\n}\r\n\r\nexport default Calendar\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport Dashboard from '../dashboard/Dashboard'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Notification from '../ui/Notification';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      maxWidth: 345,\r\n    },\r\n    media: {\r\n      height: 140,\r\n    },\r\n  });\r\n  \r\nconst Pendientess = () => {\r\n    const classes = useStyles();\r\n    const [notification, setNotification] = React.useState({open: false, message: '', severity: ''});\r\n    const [tickets, setTickets] = React.useState([])\r\n    const url =  process.env.REACT_APP_URL;\r\n\r\n    React.useEffect( () => {\r\n        const getTickets = async () =>{  \r\n           try {\r\n                const res = await axios.get('api/ticket/solution/pending')\r\n                const data = res.data\r\n                setTickets(data.data)\r\n           } catch (error) {\r\n               console.log(\"ocurrio un error\")\r\n               console.log(error)\r\n           }\r\n        }\r\n        getTickets()\r\n    },[])\r\n\r\n    const ticketAprobed = async (id) => {\r\n        const ticketId = {\r\n            ticketId : id\r\n        }\r\n        try {\r\n            await axios.post('api/ticket/solution/aprobed',ticketId)\r\n            setNotification({...notification, open: true,  message: \"Ticket Marcado como Solucionado\", severity: \"success\"})\r\n            const arrayTickets = tickets.filter(ticket => ticket._id !== id)\r\n            setTickets(arrayTickets)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Notification \r\n                message = {notification.message}\r\n                open = {notification.open}\r\n                severity= {notification.severity}\r\n                setNotification={setNotification}\r\n            />\r\n            <Grid container spacing={1}>\r\n                {\r\n                    tickets.map(ticket => \r\n                        <Grid item md={4} xs={12} sm={6}>\r\n                            <Card className={classes.root}>\r\n                                <CardActionArea>\r\n                                    <CardMedia\r\n                                    className={classes.media}\r\n                                    image={`${url}/img/ticket.jpg`}\r\n                                    title=\"Contemplative Reptile\"\r\n                                    />\r\n                                    <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                        {ticket.name}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        {ticket.solution}\r\n                                    </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                                <CardActions>\r\n                                    <Button size=\"small\" color=\"primary\" href={`/tickets/${ticket._id}`}>\r\n                                        Ver Ticket\r\n                                    </Button>\r\n                                    <Button size=\"small\" color=\"primary\" onClick={() => ticketAprobed(ticket._id)}>\r\n                                        Solucionado\r\n                                    </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>  \r\n                    \r\n                    )\r\n                }\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Pendientes = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Tickets Pendientes de Aprobacion\"}>\r\n                <Pendientess>\r\n\r\n                </Pendientess>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pendientes\r\n","import React, {useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid,Button, Box, FormControl, FormHelperText, InputLabel, MenuItem , Select , TextField, FormControlLabel, Checkbox } from \"@material-ui/core\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '25ch',\r\n    },\r\n  }));\r\n\r\nconst FormAddEdit = (props) => {\r\n    const {user, addUser,editUser, edit, emptyFields} = props;\r\n    const classes = useStyles();\r\n    const {errors, handleSubmit, control, watch} = useForm();\r\n    \r\n    const password = watch(\"userPassword\");\r\n    const handleChangeCheckBox = (event) => {\r\n        setCheckBox(event.target.checked);\r\n      };\r\n    const [checkBox, setCheckBox] = useState(() => {\r\n    const initialState = !edit;\r\n    return initialState;\r\n    });\r\n    return (\r\n        <div>\r\n            <form onSubmit={edit ? handleSubmit(editUser) : handleSubmit(addUser)} className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item sm={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                    minLength: {\r\n                                        value: 6, \r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userName\" \r\n                            id=\"userName\"\r\n                            label=\"Nombre\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={user.name || ''}\r\n                            \r\n                            as={\r\n                            <TextField\r\n                                error={ errors.userName ? true : false }\r\n                                helperText={errors.userName ? errors.userName.message : null} \r\n                                \r\n                            />\r\n                        }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                    minLength: {\r\n                                        value: 6, \r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userLastName\" \r\n                            id=\"userLastName\"\r\n                            label=\"Apellido\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={user.lastName || ''}\r\n                            \r\n                            as={\r\n                            <TextField\r\n                                error={ errors.userLastName ? true : false }\r\n                                helperText={errors.userLastName ? errors.userLastName.message : null} \r\n                                \r\n                            />\r\n                        }\r\n                        />\r\n                        <Box>\r\n                            <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                                <InputLabel id=\"labelPrioridad\">Rol</InputLabel>\r\n                                <Controller\r\n                                name=\"userRole\"\r\n                                control={control}\r\n                                rules={{required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }\r\n                                    }}\r\n                                    defaultValue={user.role || ''}\r\n                                as={\r\n                                    <Select\r\n                                        labelId=\"demo-simple-select-outlined-label\"\r\n                                        label=\"Prioridad\"\r\n                                        id=\"ticketPriority\"                                       \r\n                                        value={user.role}\r\n                                        error={ errors.userRole ? true : false }   \r\n                                        >\r\n                                        <MenuItem value={'User'}>Usuario</MenuItem>\r\n                                        <MenuItem value={'Admin'}>Admin</MenuItem>\r\n                                    </Select>\r\n                                }\r\n                                />\r\n                                 <FormHelperText\r\n                                    error={ errors.userRole ? true : false }\r\n                                >\r\n                                    {errors.userRole ? errors.userRole.message : null} \r\n                                </FormHelperText>\r\n                            </FormControl>\r\n                        </Box>\r\n                        \r\n                    </Grid>\r\n                    <Grid sm={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                        pattern: {\r\n                                            value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\r\n                                            message: \"Email con Formato Invalido\",\r\n                                          },\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userEmail\" \r\n                            type=\"email\"\r\n                            id=\"userEmail\"\r\n                            label=\"Email\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={user.email || ''}\r\n                            \r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.userEmail ? true : false }\r\n                                    helperText={errors.userEmail ? errors.userEmail.message : null} \r\n                                    \r\n                                />\r\n                                }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    required:  {\r\n                                        value: checkBox? true: false, \r\n                                        message: 'Campo requerido'\r\n                                        },\r\n                                    minLength: {\r\n                                        value: 6,\r\n                                        message: \"La Contraseña Tiene que Tener al Menos 6 Caracteres\"\r\n                                    } \r\n                            }}\r\n                            control={control}\r\n                            name=\"userPassword\" \r\n                            type=\"password\"\r\n                            id=\"userPassword\"\r\n                            label=\"Contraseña\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={''}\r\n                            disabled={!checkBox}\r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.userPassword ? true : false }\r\n                                    helperText={errors.userPassword ? errors.userPassword.message : null} \r\n                                    \r\n                                />\r\n                                }\r\n                        />\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: checkBox? true: false, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                        validate: value => (value === password || !checkBox) || \"Las contraseñas no Coinciden\"\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"userPasswordRepeat\" \r\n                            type=\"password\"\r\n                            id=\"userPasswordRepeat\"\r\n                            label=\"Repetir Contraseña\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={''}\r\n                            disabled={!checkBox}\r\n                            \r\n                            as={\r\n                                    <TextField\r\n                                        error={ errors.userPasswordRepeat ? true : false }\r\n                                        helperText={errors.userPasswordRepeat ? errors.userPasswordRepeat.message : null} \r\n                                        \r\n                                    />\r\n                                }\r\n                        />               \r\n                    </Grid>\r\n                    <Grid sm={12}>\r\n                        {edit &&\r\n                            <FormControlLabel\r\n                                control={<Checkbox checked={checkBox} onChange={handleChangeCheckBox} color=\"primary\" />}\r\n                                label=\"Desea Cambiar la Contraseña\"\r\n                            />\r\n                        }\r\n                    </Grid>               \r\n                    <Grid item sm={12}>\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\" m={1} p={1}>\r\n                            <Button color=\"primary\" type=\"button\" onClick={() =>  emptyFields()}>\r\n                                Cancelar\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Guardar\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAddEdit\r\n\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { Box, Button, CircularProgress, Grid} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MaterialTable from 'material-table'\r\nimport FormAddEdit from './Forms/Add-Edit'\r\nimport Popup from '../../ui/Popup'\r\nimport Notification from '../../ui/Notification'\r\nimport Dashboard from '../../dashboard/Dashboard'\r\n\r\nconst Users2 = () => {\r\n    const roleUser = useSelector(store => store.usuario.usuario.data.role)\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [notification, setNotification] = React.useState({open: false, message: ''});\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        lastName: '',\r\n        role: '',\r\n        email: '',\r\n    });\r\n    const [users, setUsers] = useState([])\r\n    const [edit, setEdit] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    useEffect(() => {\r\n        const getUsers = async () =>{\r\n            setLoading(true)\r\n           const res =  await axios.get('users/users')\r\n           setUsers(res.data)\r\n        }\r\n        getUsers();\r\n        setLoading(false)\r\n    },[])\r\n\r\n    const addUser = async (data) => {\r\n        setLoading(true)\r\n        const newUser = {\r\n            name: data.userName,\r\n            lastName: data.userLastName,\r\n            email: data.userEmail,\r\n            password: data.userPassword,\r\n            role: data.userRole\r\n        }\r\n        try {\r\n            const res = await axios.post('users/users', newUser)\r\n            setUsers([\r\n                ...users,\r\n                res.data\r\n            ])\r\n            setNotification({...notification, open: true,  message: \"Usuario Creado Correctamente\"})\r\n            emptyFields()\r\n            setLoading(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const edition = (row) => {\r\n        setId(row._id)\r\n        setUser({\r\n            name: row.nombre,\r\n            lastName: row.lastName,\r\n            email: row.email,\r\n            role: row.role\r\n        })\r\n        setEdit(true)\r\n        setOpenPopup(true)\r\n        console.log(user)\r\n    }\r\n\r\n    // Actualizar Usuario\r\n    const editUser =  async (data) => {\r\n        setLoading(true)\r\n        const userEdit = {\r\n            name: data.userName,\r\n            lastName: data.userLastName,\r\n            email: data.userEmail,\r\n            password: data.userPassword,\r\n            role: data.userRole\r\n        }\r\n        try {\r\n            const res = await axios.put(`users/users/${id}`,userEdit)\r\n            const arrayEditado = users.map( user => (\r\n                user._id === id ? res.data : user\r\n            ))\r\n            console.log(res.data)\r\n            setUsers(arrayEditado)\r\n            setNotification({...notification, open: true, message: \"Usuario Editado Correctamente\"})\r\n            emptyFields()\r\n            setLoading(false)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const deleteUser = async data => {\r\n        const usersIds = []\r\n        data.map(user => usersIds.push(user._id))\r\n        const confirm = window.confirm(\"Estas Seguro de Eliminar El/Los Registro/s\")\r\n        try {\r\n            if(confirm){\r\n                await axios.post('users/users/delete/many', usersIds)\r\n                const arrayFiltrado = users.filter((user) => !usersIds.includes(user._id))\r\n                setUsers(arrayFiltrado)\r\n                setNotification({...notification, open: true,  message: \"Usuario/s Eliminado/s Correctamente\"})\r\n            }     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Cerrar formulario flotante\r\n    const closeForm = () => {\r\n        setOpenPopup(false)\r\n        setEdit(false)\r\n    }\r\n    // Devuelve el estado del Ticket a situacion inicial\r\n    const emptyFields = () =>{\r\n        closeForm()\r\n        setUser({\r\n            name: '',\r\n            lastName: '',\r\n            role: '',\r\n            email: ''\r\n        })\r\n        setId('')\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Grid container spacing={1}>\r\n                <Grid item sm={12}> \r\n                    <Box>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() =>  setOpenPopup(true)}>\r\n                            Nuevo Usuario\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                    <Box mt={2}>\r\n                        <Box display=\"flex\" justifyContent=\"center\">\r\n                            {loading && <CircularProgress />}\r\n                        </Box>\r\n                        <MaterialTable\r\n                            columns={[\r\n                                { title: 'Id', field: '_id', hidden: true},\r\n                                { title: 'Nombre', field: 'nombre' },\r\n                                { title: 'Apellido', field: 'lastName' },\r\n                                { title: \"role\", field: 'role'},\r\n                                { title: 'email', field: 'email' },\r\n                            ]}\r\n                            data={users}\r\n                            actions={[\r\n                                {\r\n                                  hidden: roleUser !== 'Admin',\r\n                                    icon: 'edit',\r\n                                    tooltip: 'Editar',\r\n                                    position: 'row',\r\n                                    onClick: (event, rowData) => edition(rowData),\r\n                                },\r\n                                {\r\n                                    hidden: roleUser !== 'Admin',\r\n                                    icon: () => <DeleteIcon />,\r\n                                    position: 'toolbarOnSelect',\r\n                                    tooltip: 'Borrar',\r\n                                    onClick: (event, rowData) => deleteUser(rowData),\r\n                                }\r\n                              ]}\r\n                            options={{\r\n                                actionsColumnIndex: -1,\r\n                                selection: true,\r\n                                pageSize: 10\r\n                            }}\r\n                            title=\"Usuarios\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Notification \r\n                    message = {notification.message}\r\n                    open = {notification.open}\r\n                    severity= {\"success\"}\r\n                    setNotification={setNotification}\r\n            />\r\n            <Popup\r\n               openPopup={openPopup}  \r\n               title= {edit ? \"Editar Usuario\" : \"Agregar Usuario\"} \r\n               closeForm={closeForm}  \r\n               loading={loading}         \r\n            >\r\n               <FormAddEdit\r\n                edit={edit}\r\n                user={user}\r\n                addUser = {addUser}\r\n                editUser = { editUser} \r\n                emptyFields={emptyFields}  \r\n                />\r\n            </Popup>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Users = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Usuarios\"}>\r\n                <Users2>\r\n\r\n                </Users2>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Users\r\n","import React, { useState, Fragment, useEffect } from 'react';\r\nimport GooglePlacesAutocomplete,{ geocodeByLatLng, geocodeByAddress, getLatLng} from 'react-google-places-autocomplete';\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\n\r\n\r\n\r\nconst Maps = (props) => {\r\n    const {setDataAddress, institution, edit} = props;\r\n    const [address, setAddress] = useState(null);\r\n    const [ showingInfoWindow, setShowingInfoWindow ] = useState(false);\r\n    const [activeMarker, setActiveMarker] = useState({});\r\n    const [selectedPlace, setSelectedPlace] = useState({});\r\n    const [mapCenter, setMapCenter] = useState({ lat: -26.185164, lng: -58.174386});\r\n\r\n    useEffect(() =>{\r\n      if (edit) {\r\n        setDataAddress(institution.address)\r\n        let placeHolder = document.getElementsByClassName(\"css-1wa3eu0-placeholder\");\r\n        if(placeHolder.length > 0){\r\n          placeHolder[0].innerHTML = institution.address.name;\r\n        }\r\n        setMapCenter({lat: institution.address.lat, lng: institution.address.lng})\r\n      }\r\n    },[])\r\n\r\n    const containerStyle = {\r\n      marginTop : '10px',\r\n      // marginLeft: '-50px',\r\n      // position: 'absolute ',  \r\n      // width: '100%',\r\n      // height: '50%'\r\n    }\r\n    \r\n\r\n    const handleChange = async dire => {\r\n      setAddress(dire.label)\r\n      try {\r\n        const res = await geocodeByAddress(dire.label)\r\n        const results = await getLatLng(res[0])\r\n        const addressParse = getAddressObject(res[0].address_components)\r\n        const label = res[0].formatted_address;\r\n        setDataAddress({name: label, locality: addressParse.locality, department:addressParse.departament, lat: results.lat, lng:results.lng});\r\n        setMapCenter(results)\r\n\r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    };\r\n    const geocodeLatLng = async (lat, lng) => {\r\n       try {\r\n        const res = await geocodeByLatLng({ lat: lat, lng: lng });\r\n        const addressParse = getAddressObject(res[0].address_components)\r\n        const label = res[0].formatted_address;\r\n        console.log(addressParse)\r\n        setAddress(label)\r\n        setDataAddress({name: label, locality: addressParse.locality, department:addressParse.departament, lat: lat, lng:lng});\r\n        \r\n        let placeHolder = document.getElementsByClassName(\"css-1wa3eu0-placeholder\");\r\n        if(placeHolder.length > 0){\r\n          placeHolder[0].innerHTML = label;\r\n        }\r\n        let name = document.getElementsByClassName(\"css-1uccc91-singleValue\");\r\n        if(name.length > 0){\r\n          name[0].innerHTML = label;\r\n        }\r\n       \r\n       } catch (error) {\r\n         console.log(error);\r\n       }\r\n    };\r\n\r\n    const getAddressObject = (address_components) =>{\r\n      const ShouldBeComponent = {\r\n        home: [\"street_number\"],\r\n        postal_code: [\"postal_code\"],\r\n        street: [\"street_address\", \"route\"],\r\n        province: [\r\n          \"administrative_area_level_1\",\r\n          \"administrative_area_level_3\",\r\n          \"administrative_area_level_4\",\r\n          \"administrative_area_level_5\"\r\n        ],\r\n        locality: [\r\n          \"locality\",\r\n          \"sublocality\",\r\n          \"sublocality_level_1\",\r\n          \"sublocality_level_2\",\r\n          \"sublocality_level_3\",\r\n          \"sublocality_level_4\"\r\n        ],\r\n        departament:[\r\n          \"administrative_area_level_2\",\r\n        ],\r\n        country: [\"country\"]\r\n      };\r\n\r\n      const address = {\r\n        home: \"\",\r\n        postal_code: \"\",\r\n        street: \"\",\r\n        province: \"\",\r\n        locality: \"\",\r\n        departament: \"\",\r\n        country: \"\"\r\n      };\r\n      address_components.forEach(component => {\r\n        for (var shouldBe in ShouldBeComponent) {\r\n          if (ShouldBeComponent[shouldBe].indexOf(component.types[0]) !== -1) {\r\n            if (shouldBe === \"country\") {\r\n              address[shouldBe] = component.short_name;\r\n            } else {\r\n              address[shouldBe] = component.long_name;\r\n            }\r\n          }\r\n        }\r\n      });\r\n      return address;\r\n    };\r\n  \r\n    \r\n    const onMarkerClick = (t, map, coord) => {\r\n      const lat = coord.latLng.lat();\r\n      const lng = coord.latLng.lng();\r\n      geocodeLatLng(lat, lng)\r\n      setMapCenter({lat: lat, lng: lng});\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n            <GooglePlacesAutocomplete\r\n              onLoadFailed={(error) => (\r\n                console.error(\"Could not inject Google script\", error)\r\n              )}\r\n              autocompletionRequest={{\r\n                componentRestrictions: {\r\n                country: ['ar'],\r\n                }\r\n              }}\r\n              selectProps={{\r\n                onChange: handleChange,\r\n                placeholder : \"Direccion...\"\r\n              }}\r\n            />\r\n            <Map \r\n              google={props.google}\r\n              containerStyle={containerStyle}\r\n              zoom={16}\r\n              onClick={(t, map, coord) => onMarkerClick(t, map, coord)}\r\n              initialCenter={{\r\n                lat: mapCenter.lat,\r\n                lng: mapCenter.lng\r\n              }}\r\n              center={{\r\n                lat: mapCenter.lat,\r\n                lng: mapCenter.lng\r\n              }}\r\n            >\r\n              <Marker \r\n                position={{\r\n                  lat: mapCenter.lat,\r\n                  lng: mapCenter.lng\r\n                }} \r\n              />    \r\n            </Map>\r\n       \r\n\r\n\r\n      </Fragment>\r\n\r\n    )\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: ('AIzaSyDAwZoCkxg0z2pKbKsjZhBM_NX0S8H44vg'),\r\n  libraries: [\"places\"],\r\n  language:'es-ES'\r\n})(Maps)\r\n\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid,Button, Box, TextField } from \"@material-ui/core\";\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport Maps from '../../../GoogleMaps/Maps'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: '25ch',\r\n    },\r\n  }));\r\n\r\nconst FormAddEdit = (props) => {\r\n    const {institution, addInstitution,editInstitution, edit, emptyFields, setDataAddress} = props;\r\n    const classes = useStyles();\r\n    const {errors, handleSubmit, control} = useForm();\r\n    return (\r\n        <div>\r\n            <form onSubmit={edit ? handleSubmit(editInstitution) : handleSubmit(addInstitution)} className={classes.root}>\r\n                <Grid container>\r\n                    <Grid item sm={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    required: {\r\n                                        value: true, \r\n                                        message: 'Campo requerido'\r\n                                        }, \r\n                                    minLength: {\r\n                                        value: 6, \r\n                                        message: 'Mínimo 6 carácteres'\r\n                                    }\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"institutionName\" \r\n                            id=\"institutionName\"\r\n                            label=\"Nombre\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={institution.name || ''}\r\n                            \r\n                            as={\r\n                            <TextField\r\n                                error={ errors.institutionName ? true : false }\r\n                                helperText={errors.institutionName ? errors.institutionName.message : null} \r\n                                \r\n                            />\r\n                            }\r\n                        />\r\n                       {/*  <Controller\r\n                            rules={{\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"institutionAddres\" \r\n                            id=\"institutionAddres\"\r\n                            label=\"Direccion\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={institution.addres || ''}\r\n                            type=\"text\"\r\n                            as={\r\n                            <TextField\r\n                                error={ errors.institutionAddres ? true : false }\r\n                                helperText={errors.institutionAddres ? errors.institutionAddres.message : null} \r\n                                \r\n                            />\r\n                            }\r\n                        /> */}\r\n                        \r\n                    </Grid>\r\n                    <Grid Item xs={6}>\r\n                        <Controller\r\n                            rules={{\r\n                                    \r\n                            }}\r\n                            control={control}\r\n                            name=\"institutionCue\" \r\n                            id=\"institutionCue\"\r\n                            label=\"CUE\"\r\n                            variant=\"outlined\" \r\n                            defaultValue={institution.cue || ''}\r\n                            type=\"number\"\r\n                            as={\r\n                                <TextField\r\n                                    error={ errors.institutionCue ? true : false }\r\n                                    helperText={errors.institutionCue ? errors.institutionCue.message : null} \r\n                                    \r\n                                />\r\n                            }\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={11} style={{position: 'relative', height: '40vh'}}>\r\n                       <Box mt={2} ml={1}>\r\n                            <Maps \r\n                                setDataAddress={setDataAddress}\r\n                                institution={institution}\r\n                                edit={edit}\r\n                            /> \r\n                        </Box> \r\n                    </Grid>               \r\n                    <Grid item sm={12}>\r\n                        <Box display=\"flex\" justifyContent=\"flex-end\" m={1} p={1} mt={8}>\r\n                            <Button color=\"primary\" type=\"button\" onClick={() =>  emptyFields()}>\r\n                                Cancelar\r\n                            </Button>\r\n                            <Button color=\"primary\" type=\"submit\">\r\n                                Guardar\r\n                            </Button>\r\n                        </Box>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormAddEdit\r\n\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { Box, Button, CircularProgress, Grid} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MaterialTable from 'material-table'\r\nimport FormAddEdit from './Forms/Add-Edit'\r\nimport Popup from '../../ui/Popup'\r\nimport Notification from '../../ui/Notification'\r\nimport Dashboard from '../../dashboard/Dashboard'\r\n\r\nconst Institution2 = () => {\r\n    const roleUser = useSelector(store => store.usuario.usuario.data.role)\r\n    const [openPopup, setOpenPopup] = useState(false);\r\n    const [notification, setNotification] = React.useState({open: false, message: ''});\r\n    const [institution, setInstitution] = useState({\r\n        name: '',\r\n        address: '',\r\n        cue: '',\r\n    });\r\n    const [institutions, setInstitutions] = useState([])\r\n    const [edit, setEdit] = useState(false);\r\n    const [id, setId] = useState('');\r\n    const [dataAddress, setDataAddress] = useState({})\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    useEffect(() => {\r\n        const getInstitutions = async () =>{\r\n           setLoading(true) \r\n           const res =  await axios.get('institutions/institutions')\r\n           setInstitutions(res.data)\r\n        }\r\n        getInstitutions();\r\n        setLoading(false) \r\n    },[])\r\n\r\n    const addInstitution = async (data) => {\r\n        setLoading(true) \r\n        const newInstituion = {\r\n            name: data.institutionName,\r\n            //addres: data.institutionAddres,\r\n            address: dataAddress,\r\n            cue: data.institutionCue,\r\n        }\r\n        try {\r\n            const res = await axios.post('institutions/institutions', newInstituion)\r\n            setInstitutions([\r\n                ...institutions,\r\n                res.data\r\n            ])\r\n            setNotification({...notification, open: true,  message: \"Institucion Creada Correctamente\"})\r\n            emptyFields()\r\n            setLoading(false) \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const edition = (row) => {\r\n        setId(row._id)\r\n        setInstitution({\r\n            name: row.name,\r\n            address: row.address,\r\n            cue: row.cue,\r\n        })\r\n        setEdit(true)\r\n        setOpenPopup(true)\r\n    }\r\n\r\n    // Actualizar Institucion\r\n    const editInstitution =  async (data) => {\r\n        setLoading(true) \r\n        const instituionEdit = {\r\n            name: data.institutionName,\r\n            address: dataAddress,\r\n            //address: data.institutioAddres,\r\n            CUE: data.institutioCUE,\r\n        }\r\n        try {\r\n            const res = await axios.put(`institutions/institutions/${id}`, instituionEdit)\r\n            const arrayEditado = institutions.map( institution => (\r\n                institution._id === id ? res.data : institution\r\n            ))\r\n            setInstitutions(arrayEditado)\r\n            setNotification({...notification, open: true, message: \"Institucion Editada Correctamente\"})\r\n            emptyFields()\r\n            setLoading(false) \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const deleteInstitutions = async data => {\r\n        const institutionsIds = []\r\n        data.map(institution => institutionsIds.push(institution._id))\r\n        const confirm = window.confirm(\"Estas Seguro de Eliminar El/Los Registro/s\")\r\n        try {\r\n            if(confirm){\r\n                await axios.post('institutions/institutions/delete/many', institutionsIds)\r\n                const arrayFiltrado = institutions.filter((institution) => !institutionsIds.includes(institution._id))\r\n                setInstitutions(arrayFiltrado)\r\n                setNotification({...notification, open: true,  message: \"Intitucion/es Eliminada/s Correctamente\"})\r\n            }     \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    // Cerrar formulario flotante\r\n    const closeForm = () => {\r\n        setOpenPopup(false)\r\n        setEdit(false)\r\n    }\r\n    // Devuelve el estado de la institution a situacion inicial\r\n    const emptyFields = () =>{\r\n        closeForm()\r\n        setInstitution({\r\n            name: '',\r\n            address: '',\r\n            cue: '',\r\n        })\r\n        setId('')\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <Grid container spacing={1}>\r\n                <Grid item sm={12}> \r\n                    <Box>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() =>  setOpenPopup(true)}>\r\n                            Nueva Institucion\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item sm={12}>\r\n                    <Box mt={2}>\r\n                    <Box display=\"flex\" justifyContent=\"center\">\r\n                        {loading && <CircularProgress />}\r\n                    </Box>\r\n                        <MaterialTable\r\n                            columns={[\r\n                                { title: 'Id', field: '_id', hidden: true},\r\n                                { title: 'Nombre', field: 'name' },\r\n                                { title: 'Direccion', field: 'address.name' },\r\n                                { title: \"CUE\", field: 'cue'},\r\n                                {title: \"Departamento\", field: 'address.department'},\r\n                                {title: \"Localidad\", field: 'address.locality'},\r\n                            ]}\r\n                            data={institutions}\r\n                            actions={[\r\n                                {\r\n                                    hidden: roleUser !== 'Admin',\r\n                                    icon: 'edit',\r\n                                    tooltip: 'Editar',\r\n                                    position: 'row',\r\n                                    onClick: (event, rowData) => edition(rowData),\r\n                                },\r\n                                {\r\n                                    hidden: roleUser !== 'Admin',\r\n                                    icon: () => <DeleteIcon />,\r\n                                    position: 'toolbarOnSelect',\r\n                                    tooltip: 'Borrar',\r\n                                    onClick: (event, rowData) => deleteInstitutions(rowData),\r\n                                }\r\n                              ]}\r\n                            options={{\r\n                                actionsColumnIndex: -1,\r\n                                selection: true,\r\n                                pageSize: 10\r\n                            }}\r\n                            title=\"Instituciones\"\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Notification \r\n                    message = {notification.message}\r\n                    open = {notification.open}\r\n                    severity= {\"success\"}\r\n                    setNotification={setNotification}\r\n            />\r\n            <Popup\r\n               openPopup={openPopup}  \r\n               title= {edit ? \"Editar Institucion\" : \"Agregar Institucion\"} \r\n               closeForm={closeForm}  \r\n               loading={loading}          \r\n            >\r\n               <FormAddEdit\r\n                edit={edit}\r\n                institution={institution}\r\n                addInstitution = {addInstitution}\r\n                editInstitution = { editInstitution} \r\n                emptyFields={emptyFields}\r\n                setDataAddress={setDataAddress}  \r\n                />\r\n            </Popup>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Institution = () => {\r\n    return (\r\n        <div>\r\n            <Dashboard section={\"Instituciones\"}>\r\n                <Institution2>\r\n\r\n                </Institution2>\r\n            </Dashboard>\r\n        </div>\r\n    )\r\n  }\r\n\r\nexport default Institution\r\n","import React, {Fragment, useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\nimport {useSelector} from 'react-redux'\r\nimport { Box, Button, Grid, Paper } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PrintIcon from '@material-ui/icons/Print';\r\nimport 'react-dates/initialize';\r\nimport { DateRangePicker } from 'react-dates';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport esLocale  from 'moment/locale/es';\r\nimport moment from 'moment';\r\nimport {\r\n    Chart,\r\n    ArgumentAxis,\r\n    ValueAxis,\r\n    BarSeries,\r\n    Title,\r\n    Legend,\r\n  } from '@devexpress/dx-react-chart-material-ui';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Stack, Animation } from '@devexpress/dx-react-chart';\r\nimport Dashboard from '../dashboard/Dashboard'\r\n\r\nconst legendStyles = () => ({\r\n    root: {\r\n      display: 'flex',\r\n      margin: 'auto',\r\n      flexDirection: 'row',\r\n    },\r\n  });\r\n  const legendRootBase = ({ classes, ...restProps }) => (\r\n    <Legend.Root {...restProps} className={classes.root} />\r\n  );\r\n  const Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\r\n  const legendLabelStyles = () => ({\r\n    label: {\r\n      whiteSpace: 'nowrap',\r\n    },\r\n  });\r\n  const legendLabelBase = ({ classes, ...restProps }) => (\r\n    <Legend.Label className={classes.label} {...restProps} />\r\n  );\r\n  const Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n  }));\r\n  \r\nconst Informe2 = (props) => {\r\n    moment.locale('es', esLocale);\r\n    const classes = useStyles();\r\n    const usuarioId = useSelector(store => store.usuario.usuario.data._id)\r\n    const role = useSelector(store => store.usuario.role)\r\n    const userName = useSelector(store => store.usuario.usuario.data.nombre)\r\n    const [startDate, setStartDate] = useState(moment());\r\n    const [endDate, setEndDate] = useState(moment());\r\n    const [focusedInput, setFocusedInput] = useState(null);\r\n    const [data, setData] = useState([])\r\n    const [chartData, setCharData] = useState([])\r\n    const orientation = window.matchMedia(\"(max-width: 700px)\").matches ? 'vertical' : 'horizontal';\r\n    \r\n    useEffect(() => {\r\n        setCharData([]);\r\n        dateRange();\r\n    },[startDate, endDate ])\r\n\r\n    useEffect(() => {\r\n        data.map((data) => (\r\n            setCharData(prevState => \r\n                [...prevState,{ mes:  `${moment.months(data._id.mes - 1)} - ${data._id.anio} `, solucionado: data.solucionado, noSolucionado: data.noSolucionado }])\r\n        ))\r\n\r\n    },[data])\r\n    \r\n     const dateRange = async () => {\r\n            try {\r\n                 const res = await axios.get(`api/range-date?usuarioId=${usuarioId}&startDate=${startDate}&endDate=${endDate}&role=${role}`)\r\n                 setData(res.data)\r\n                 \r\n                 \r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n    }\r\n    const generateReport = async () =>{\r\n        let noSolucionado = data.reduce( (a,b) => a  + b.noSolucionado, 0)\r\n        let solucionado = data.reduce( (a,b) => a  + b.solucionado, 0)\r\n        let total = noSolucionado + solucionado\r\n        const ticketPDF = {\r\n            noSolucionado: noSolucionado,\r\n            solucionado: solucionado,\r\n            total: total,\r\n            userName : userName,\r\n            role: role,\r\n            startDate : startDate._d,\r\n            endDate: endDate._d\r\n        }\r\n        console.log(noSolucionado)\r\n        try {\r\n            const res =  await axios.post('api/pdf',ticketPDF, {responseType: 'blob'})\r\n            //Create a Blob from the PDF Stream\r\n                const file = new Blob(\r\n                    [res.data], \r\n                    {type: 'application/pdf'});\r\n            //Build a URL from the file\r\n                const fileURL = URL.createObjectURL(file);\r\n            //Open the URL on new Window\r\n                window.open(fileURL);\r\n                console.log(file)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-start\">\r\n                        <DateRangePicker\r\n                            startDate={startDate}\r\n                            startDateId=\"s_id\"\r\n                            endDate={endDate}\r\n                            endDateId=\"e_id\"\r\n                            onDatesChange={({ startDate, endDate }) => { setStartDate(startDate); setEndDate(endDate); }}\r\n                            focusedInput={focusedInput}\r\n                            onFocusChange={e => setFocusedInput(e)}\r\n                            displayFormat=\"DD/MM/YYYY\"\r\n                            isOutsideRange={() => false}\r\n                            withPortal={true} \r\n                            orientation={orientation} \r\n                            autoFocus\r\n                        />\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-end\">\r\n                        <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        className={classes.button}\r\n                        startIcon={<PrintIcon />}\r\n                        onClick = {() => generateReport()}\r\n                        >\r\n                            Generar Informe\r\n                        </Button>\r\n                    </Box>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                   <Box mt={2}>\r\n                    <Paper>\r\n                            <Chart\r\n                            data={chartData}\r\n                            >\r\n                                <ArgumentAxis />\r\n                                <ValueAxis />\r\n\r\n                                <BarSeries\r\n                                    name=\"Solucionado\"\r\n                                    valueField=\"solucionado\"\r\n                                    argumentField=\"mes\"\r\n                                    color=\"#0FFF04\"\r\n                                />\r\n                                <BarSeries\r\n                                    name=\"No Solucionado\"\r\n                                    valueField=\"noSolucionado\"\r\n                                    argumentField=\"mes\"\r\n                                    color=\"#FF0404\"\r\n                                />\r\n                                <Animation />\r\n                                <Legend position=\"bottom\" rootComponent={Root} labelComponent={Label} />\r\n                                <Title text=\"Situacion Tickets\" />\r\n                                <Stack />\r\n                            </Chart>\r\n                        </Paper>\r\n                   </Box>\r\n                </Grid>\r\n            </Grid>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nconst Informe = () =>{\r\n    return (\r\n        <Dashboard section={\"Reportes Detallados\"}>\r\n            <Informe2>\r\n\r\n            </Informe2>\r\n        </Dashboard>\r\n    )\r\n    \r\n}\r\n\r\nexport default Informe\r\n","import React from 'react';\nimport Login from './components/Login'\nimport Dashboard from './components/dashboard/Dashboard'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport {useSelector} from 'react-redux'\nimport Tickets from './components/Tickets/Tickets'\nimport Detalles from './components/Tickets/Detalles';\nimport Calendar from './components/Tickets/Calendar';\nimport Pendientes from './components/Administracion/Pendientes';\nimport Users from './components/Administracion/Users/Users';\nimport Institution from './components/Administracion/Institutions/Institutions';\nimport Informe from './components/Tickets/Infome';\nimport axios from 'axios';\n\n\nfunction App() {\n  const RutaProtegida = ({component, path, ...rest}) => {\n    const tokenState = useSelector(store => store.usuario.token)\n      if(tokenState){\n        return <Route component={component} path={path} {...rest} />\n     }else{\n      return <Redirect to=\"/\" {...rest} />\n    }\n  }\n\n    // Rutas Administrador\n    const RutaAdmin = ({component, path, ...rest}) => {  \n      const role = useSelector(store => store.usuario.role)\n      if(role === 'Admin'){\n          return <Route component={component} path={path} {...rest} />\n       }else{\n        return <Redirect to=\"/\" {...rest} />\n      }\n    }\n\n\n\nconst token = useSelector(store => store.usuario.token)\n\naxios.defaults.headers.common['token'] = token \n\n  return (\n        <Router>\n          <Switch>\n            <Route component={Login} path=\"/\" exact/>\n            <RutaProtegida component={Dashboard} path=\"/dashboard\" exact/>\n            <RutaProtegida component={Tickets} path=\"/tickets\" exact/>\n            <RutaProtegida component={Detalles} path=\"/tickets/:id\" exact/>\n            <RutaProtegida component={Calendar} path=\"/calendar\" exact/>\n            <RutaProtegida component={Informe} path=\"/reportes\" exact/>\n            <RutaAdmin component={Pendientes} path=\"/admin/pendientes\" exact/>\n            <RutaAdmin component={Users} path=\"/admin/users\" exact/>\n            <RutaAdmin component={Institution} path=\"/admin/instituciones\" exact/>\n          </Switch>\n        </Router>\n  );\n}\n\nexport default App;\n","import {createStore, combineReducers, compose, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport userReducer, {leerUsuarioAccion} from './usuarioDucks'\r\n\r\nconst rootReducer = combineReducers({\r\n    usuario : userReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function generateStore(){\r\n    const store = createStore( rootReducer,  composeEnhancers( applyMiddleware(thunk) ))\r\n    leerUsuarioAccion()(store.dispatch)\r\n    return store;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport {Provider} from 'react-redux'\nimport generateStore from './redux/store'\nimport axios from 'axios'\n\nconst store = generateStore()\n\naxios.defaults.baseURL = process.env.REACT_APP_AXIOS_URL;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}